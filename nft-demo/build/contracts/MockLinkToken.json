{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "setBalance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalTokensIssued",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "2": "C:/Users/ashut/.brownie/packages/smartcontractkit/chainlink@2.13.0/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol",
    "6": "contracts/test/MockLinkToken.sol"
  },
  "ast": {
    "absolutePath": "contracts/test/MockLinkToken.sol",
    "exportedSymbols": {
      "IERC677Receiver": [
        1112
      ],
      "MockLinkToken": [
        168
      ]
    },
    "id": 169,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:6"
      },
      {
        "absolutePath": "C:/Users/ashut/.brownie/packages/smartcontractkit/chainlink@2.13.0/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol",
        "file": "@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 169,
        "sourceUnit": 1113,
        "src": "57:100:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "IERC677Receiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1112,
              "src": "65:15:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MockLinkToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 168,
        "linearizedBaseContracts": [
          168
        ],
        "name": "MockLinkToken",
        "nameLocation": "168:13:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 8,
            "mutability": "constant",
            "name": "TOTAL_SUPPLY",
            "nameLocation": "213:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 168,
            "src": "188:60:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "188:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000000000"
              },
              "id": 7,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "315f3030305f3030305f303030",
                "id": 5,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "228:13:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000_by_1",
                  "typeString": "int_const 1000000000"
                },
                "value": "1_000_000_000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "31653138",
                "id": 6,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "244:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "value": "1e18"
              },
              "src": "228:20:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000000000"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "269:52:6",
              "statements": [
                {
                  "expression": {
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 11,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "279:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 14,
                      "indexExpression": {
                        "expression": {
                          "id": 12,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "288:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "292:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "288:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "279:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15,
                      "name": "TOTAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "302:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "279:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 17,
                  "nodeType": "ExpressionStatement",
                  "src": "279:35:6"
                }
              ]
            },
            "id": 19,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "266:2:6"
            },
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "269:0:6"
            },
            "scope": 168,
            "src": "255:66:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27e235e3",
            "id": 23,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "362:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 168,
            "src": "327:43:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 22,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 20,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "335:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "327:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 21,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "346:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 30,
              "nodeType": "Block",
              "src": "450:68:6",
              "statements": [
                {
                  "expression": {
                    "id": 28,
                    "name": "TOTAL_SUPPLY",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8,
                    "src": "467:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 27,
                  "id": 29,
                  "nodeType": "Return",
                  "src": "460:19:6"
                }
              ]
            },
            "functionSelector": "18160ddd",
            "id": 31,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "386:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "397:2:6"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "totalTokensIssued",
                  "nameLocation": "431:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "423:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "422:27:6"
            },
            "scope": 168,
            "src": "377:141:6",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "593:138:6",
              "statements": [
                {
                  "expression": {
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 40,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "603:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 43,
                      "indexExpression": {
                        "expression": {
                          "id": 41,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "612:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "616:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "612:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "603:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 44,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "626:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 47,
                        "indexExpression": {
                          "expression": {
                            "id": 45,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "635:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "639:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "635:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "626:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 48,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "649:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "626:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "603:52:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "603:52:6"
                },
                {
                  "expression": {
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 52,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "665:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 54,
                      "indexExpression": {
                        "id": 53,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "674:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "665:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 55,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "681:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 57,
                        "indexExpression": {
                          "id": 56,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "690:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "681:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 58,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "697:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "681:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "665:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "665:38:6"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "720:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 39,
                  "id": 63,
                  "nodeType": "Return",
                  "src": "713:11:6"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 65,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "533:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "550:3:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "542:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "542:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "563:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "555:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "555:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "541:29:6"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "587:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "586:6:6"
            },
            "scope": 168,
            "src": "524:207:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "837:65:6",
              "statements": [
                {
                  "expression": {
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 74,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "847:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 76,
                      "indexExpression": {
                        "id": 75,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "856:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "847:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 77,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "868:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "847:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "847:27:6"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "891:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 73,
                  "id": 81,
                  "nodeType": "Return",
                  "src": "884:11:6"
                }
              ]
            },
            "functionSelector": "e30443bc",
            "id": 83,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBalance",
            "nameLocation": "746:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "774:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "766:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "766:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "800:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "792:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "792:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "756:56:6"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "831:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "831:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "830:6:6"
            },
            "scope": 168,
            "src": "737:165:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "977:42:6",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 90,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "994:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 92,
                    "indexExpression": {
                      "id": 91,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "1003:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "994:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 89,
                  "id": 93,
                  "nodeType": "Return",
                  "src": "987:25:6"
                }
              ]
            },
            "functionSelector": "70a08231",
            "id": 95,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "917:9:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "935:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "927:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "927:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "926:18:6"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "968:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "967:9:6"
            },
            "scope": 168,
            "src": "908:111:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 124,
              "nodeType": "Block",
              "src": "1161:150:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 107,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "1180:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 108,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "1185:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 106,
                      "name": "transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "1171:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1171:21:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "1171:21:6"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 112,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "1217:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 111,
                      "name": "isContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1206:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1206:15:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 121,
                  "nodeType": "IfStatement",
                  "src": "1202:82:6",
                  "trueBody": {
                    "id": 120,
                    "nodeType": "Block",
                    "src": "1223:61:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 115,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 97,
                              "src": "1254:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 116,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "1259:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 117,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "1267:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 114,
                            "name": "contractFallback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 167,
                            "src": "1237:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                              "typeString": "function (address,uint256,bytes calldata)"
                            }
                          },
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1237:36:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 119,
                        "nodeType": "ExpressionStatement",
                        "src": "1237:36:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1300:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 105,
                  "id": 123,
                  "nodeType": "Return",
                  "src": "1293:11:6"
                }
              ]
            },
            "functionSelector": "4000aea0",
            "id": 125,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferAndCall",
            "nameLocation": "1034:15:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1067:3:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "1059:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1059:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "1088:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "1080:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1080:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "1119:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "1104:20:6",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1104:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1049:81:6"
            },
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "1152:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "1147:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1147:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1146:14:6"
            },
            "scope": 168,
            "src": "1025:286:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 140,
              "nodeType": "Block",
              "src": "1388:128:6",
              "statements": [
                {
                  "assignments": [
                    133
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 133,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "1406:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 140,
                      "src": "1398:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 132,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1398:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 134,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1398:14:6"
                },
                {
                  "AST": {
                    "nativeSrc": "1431:52:6",
                    "nodeType": "YulBlock",
                    "src": "1431:52:6",
                    "statements": [
                      {
                        "nativeSrc": "1445:28:6",
                        "nodeType": "YulAssignment",
                        "src": "1445:28:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "_addr",
                              "nativeSrc": "1467:5:6",
                              "nodeType": "YulIdentifier",
                              "src": "1467:5:6"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nativeSrc": "1455:11:6",
                            "nodeType": "YulIdentifier",
                            "src": "1455:11:6"
                          },
                          "nativeSrc": "1455:18:6",
                          "nodeType": "YulFunctionCall",
                          "src": "1455:18:6"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nativeSrc": "1445:6:6",
                            "nodeType": "YulIdentifier",
                            "src": "1445:6:6"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 127,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1467:5:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 133,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1445:6:6",
                      "valueSize": 1
                    }
                  ],
                  "id": 135,
                  "nodeType": "InlineAssembly",
                  "src": "1422:61:6"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 136,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "1499:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1508:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1499:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 131,
                  "id": 139,
                  "nodeType": "Return",
                  "src": "1492:17:6"
                }
              ]
            },
            "id": 141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nameLocation": "1326:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "1345:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "1337:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1337:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1336:15:6"
            },
            "returnParameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "hasCode",
                  "nameLocation": "1379:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "1374:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1374:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1373:14:6"
            },
            "scope": 168,
            "src": "1317:199:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 166,
              "nodeType": "Block",
              "src": "1637:125:6",
              "statements": [
                {
                  "assignments": [
                    152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 152,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "1663:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 166,
                      "src": "1647:24:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC677Receiver_$1112",
                        "typeString": "contract IERC677Receiver"
                      },
                      "typeName": {
                        "id": 151,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 150,
                          "name": "IERC677Receiver",
                          "nameLocations": [
                            "1647:15:6"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1112,
                          "src": "1647:15:6"
                        },
                        "referencedDeclaration": 1112,
                        "src": "1647:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC677Receiver_$1112",
                          "typeString": "contract IERC677Receiver"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 156,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 154,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "1690:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 153,
                      "name": "IERC677Receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1112,
                      "src": "1674:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC677Receiver_$1112_$",
                        "typeString": "type(contract IERC677Receiver)"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1674:20:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC677Receiver_$1112",
                      "typeString": "contract IERC677Receiver"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1647:47:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 160,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1729:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1733:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1729:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 162,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "1741:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 163,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 147,
                        "src": "1749:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 157,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "1704:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC677Receiver_$1112",
                          "typeString": "contract IERC677Receiver"
                        }
                      },
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1713:15:6",
                      "memberName": "onTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1111,
                      "src": "1704:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1704:51:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "1704:51:6"
                }
              ]
            },
            "id": 167,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractFallback",
            "nameLocation": "1531:16:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1565:3:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "1557:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1557:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "1586:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "1578:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1578:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 147,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "1617:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "1602:20:6",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1602:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1547:81:6"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1637:0:6"
            },
            "scope": 168,
            "src": "1522:240:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 169,
        "src": "159:1605:6",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "32:1733:6"
  },
  "bytecode": "6080604052348015600f57600080fd5b503360009081526020819052604090206b033b2e3c9fd0803ce800000090556103e48061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806318160ddd1461006757806327e235e3146100885780634000aea0146100a857806370a08231146100cb578063a9059cbb146100f4578063e30443bc14610107575b600080fd5b6b033b2e3c9fd0803ce80000005b6040519081526020015b60405180910390f35b610075610096366004610254565b60006020819052908152604090205481565b6100bb6100b6366004610276565b610135565b604051901515815260200161007f565b6100756100d9366004610254565b6001600160a01b031660009081526020819052604090205490565b6100bb610102366004610300565b610160565b6100bb610115366004610300565b6001600160a01b0391909116600090815260208190526040902055600190565b60006101418585610160565b50843b1561015557610155858585856101cb565b506001949350505050565b3360009081526020819052604081205461017b908390610340565b33600090815260208190526040808220929092556001600160a01b038516815220546101a8908390610353565b6001600160a01b0384166000908152602081905260409020555060015b92915050565b604051635260769b60e11b815284906001600160a01b0382169063a4c0ed36906101ff903390889088908890600401610366565b600060405180830381600087803b15801561021957600080fd5b505af115801561022d573d6000803e3d6000fd5b505050505050505050565b80356001600160a01b038116811461024f57600080fd5b919050565b60006020828403121561026657600080fd5b61026f82610238565b9392505050565b6000806000806060858703121561028c57600080fd5b61029585610238565b935060208501359250604085013567ffffffffffffffff8111156102b857600080fd5b8501601f810187136102c957600080fd5b803567ffffffffffffffff8111156102e057600080fd5b8760208284010111156102f257600080fd5b949793965060200194505050565b6000806040838503121561031357600080fd5b61031c83610238565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156101c5576101c561032a565b808201808211156101c5576101c561032a565b6001600160a01b0385168152602081018490526060604082018190528101829052818360808301376000818301608090810191909152601f909201601f19160101939250505056fea26469706673582212206231335728a3357c650f2ce8f6d6ef9ce0e902847c3443f34010793e6bfa042564736f6c634300081a0033",
  "bytecodeSha1": "e4779a545cd540f7252219d61969a74da8eb6e5d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.26+commit.8a97fa7a"
  },
  "contractName": "MockLinkToken",
  "coverageMap": {
    "branches": {
      "2": {},
      "6": {}
    },
    "statements": {
      "2": {},
      "6": {
        "MockLinkToken.balanceOf": {
          "0": [
            987,
            1012
          ]
        },
        "MockLinkToken.contractFallback": {
          "10": [
            1704,
            1755
          ]
        },
        "MockLinkToken.isContract": {
          "4": [
            1492,
            1509
          ]
        },
        "MockLinkToken.setBalance": {
          "1": [
            847,
            874
          ],
          "2": [
            884,
            895
          ]
        },
        "MockLinkToken.transfer": {
          "7": [
            603,
            655
          ],
          "8": [
            665,
            703
          ],
          "9": [
            713,
            724
          ]
        },
        "MockLinkToken.transferAndCall": {
          "3": [
            1171,
            1192
          ],
          "5": [
            1237,
            1273
          ],
          "6": [
            1293,
            1304
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink@2.13.0/IERC677Receiver"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100625760003560e01c806318160ddd1461006757806327e235e3146100885780634000aea0146100a857806370a08231146100cb578063a9059cbb146100f4578063e30443bc14610107575b600080fd5b6b033b2e3c9fd0803ce80000005b6040519081526020015b60405180910390f35b610075610096366004610254565b60006020819052908152604090205481565b6100bb6100b6366004610276565b610135565b604051901515815260200161007f565b6100756100d9366004610254565b6001600160a01b031660009081526020819052604090205490565b6100bb610102366004610300565b610160565b6100bb610115366004610300565b6001600160a01b0391909116600090815260208190526040902055600190565b60006101418585610160565b50843b1561015557610155858585856101cb565b506001949350505050565b3360009081526020819052604081205461017b908390610340565b33600090815260208190526040808220929092556001600160a01b038516815220546101a8908390610353565b6001600160a01b0384166000908152602081905260409020555060015b92915050565b604051635260769b60e11b815284906001600160a01b0382169063a4c0ed36906101ff903390889088908890600401610366565b600060405180830381600087803b15801561021957600080fd5b505af115801561022d573d6000803e3d6000fd5b505050505050505050565b80356001600160a01b038116811461024f57600080fd5b919050565b60006020828403121561026657600080fd5b61026f82610238565b9392505050565b6000806000806060858703121561028c57600080fd5b61029585610238565b935060208501359250604085013567ffffffffffffffff8111156102b857600080fd5b8501601f810187136102c957600080fd5b803567ffffffffffffffff8111156102e057600080fd5b8760208284010111156102f257600080fd5b949793965060200194505050565b6000806040838503121561031357600080fd5b61031c83610238565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156101c5576101c561032a565b808201808211156101c5576101c561032a565b6001600160a01b0385168152602081018490526060604082018190528101829052818360808301376000818301608090810191909152601f909201601f19160101939250505056fea26469706673582212206231335728a3357c650f2ce8f6d6ef9ce0e902847c3443f34010793e6bfa042564736f6c634300081a0033",
  "deployedSourceMap": "159:1605:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;377:141;228:20;377:141;;;160:25:8;;;148:2;133:18;377:141:6;;;;;;;;327:43;;;;;;:::i;:::-;;;;;;;;;;;;;;;1025:286;;;;;;:::i;:::-;;:::i;:::-;;;1509:14:8;;1502:22;1484:41;;1472:2;1457:18;1025:286:6;1344:187:8;908:111:6;;;;;;:::i;:::-;-1:-1:-1;;;;;994:18:6;968:7;994:18;;;;;;;;;;;;908:111;524:207;;;;;;:::i;:::-;;:::i;737:165::-;;;;;;:::i;:::-;-1:-1:-1;;;;;847:18:6;;;;831:4;847:18;;;;;;;;;;:27;891:4;;737:165;1025:286;1147:12;1171:21;1180:3;1185:6;1171:8;:21::i;:::-;-1:-1:-1;1455:18:6;;1499:10;1202:82;;1237:36;1254:3;1259:6;1267:5;;1237:16;:36::i;:::-;-1:-1:-1;1300:4:6;1025:286;;;;;;:::o;524:207::-;635:10;587:4;626:20;;;;;;;;;;;:29;;649:6;;626:29;:::i;:::-;612:10;603:8;:20;;;;;;;;;;;:52;;;;-1:-1:-1;;;;;681:13:6;;;;;;:22;;697:6;;681:22;:::i;:::-;-1:-1:-1;;;;;665:13:6;;:8;:13;;;;;;;;;;:38;-1:-1:-1;720:4:6;524:207;;;;;:::o;1522:240::-;1704:51;;-1:-1:-1;;;1704:51:6;;1690:3;;-1:-1:-1;;;;;1704:24:6;;;;;:51;;1729:10;;1741:6;;1749:5;;;;1704:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1637:125;1522:240;;;;:::o;196:173:8:-;264:20;;-1:-1:-1;;;;;313:31:8;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:186::-;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;525:29;544:9;525:29;:::i;:::-;515:39;374:186;-1:-1:-1;;;374:186:8:o;565:774::-;653:6;661;669;677;730:2;718:9;709:7;705:23;701:32;698:52;;;746:1;743;736:12;698:52;769:29;788:9;769:29;:::i;:::-;759:39;-1:-1:-1;867:2:8;852:18;;839:32;;-1:-1:-1;946:2:8;931:18;;918:32;973:18;962:30;;959:50;;;1005:1;1002;995:12;959:50;1028:22;;1081:4;1073:13;;1069:27;-1:-1:-1;1059:55:8;;1110:1;1107;1100:12;1059:55;1150:2;1137:16;1176:18;1168:6;1165:30;1162:50;;;1208:1;1205;1198:12;1162:50;1253:7;1248:2;1239:6;1235:2;1231:15;1227:24;1224:37;1221:57;;;1274:1;1271;1264:12;1221:57;565:774;;;;-1:-1:-1;1305:2:8;1297:11;;-1:-1:-1;;;565:774:8:o;1536:300::-;1604:6;1612;1665:2;1653:9;1644:7;1640:23;1636:32;1633:52;;;1681:1;1678;1671:12;1633:52;1704:29;1723:9;1704:29;:::i;:::-;1694:39;1802:2;1787:18;;;;1774:32;;-1:-1:-1;;;1536:300:8:o;1841:127::-;1902:10;1897:3;1893:20;1890:1;1883:31;1933:4;1930:1;1923:15;1957:4;1954:1;1947:15;1973:128;2040:9;;;2061:11;;;2058:37;;;2075:18;;:::i;2106:125::-;2171:9;;;2192:10;;;2189:36;;;2205:18;;:::i;2236:559::-;-1:-1:-1;;;;;2449:32:8;;2431:51;;2513:2;2498:18;;2491:34;;;2561:2;2556;2541:18;;2534:30;;;2580:18;;2573:34;;;2600:6;2650;2644:3;2629:19;;2616:49;2715:1;2685:22;;;2709:3;2681:32;;;2674:43;;;;2778:2;2757:15;;;-1:-1:-1;;2753:29:8;2738:45;2734:55;;2236:559;-1:-1:-1;;;2236:559:8:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    159,
    1764
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x18160DDD EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x4000AEA0 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0xE30443BC EQ PUSH2 0x107 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75 PUSH2 0x96 CALLDATASIZE PUSH1 0x4 PUSH2 0x254 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xBB PUSH2 0xB6 CALLDATASIZE PUSH1 0x4 PUSH2 0x276 JUMP JUMPDEST PUSH2 0x135 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7F JUMP JUMPDEST PUSH2 0x75 PUSH2 0xD9 CALLDATASIZE PUSH1 0x4 PUSH2 0x254 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xBB PUSH2 0x102 CALLDATASIZE PUSH1 0x4 PUSH2 0x300 JUMP JUMPDEST PUSH2 0x160 JUMP JUMPDEST PUSH2 0xBB PUSH2 0x115 CALLDATASIZE PUSH1 0x4 PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x141 DUP6 DUP6 PUSH2 0x160 JUMP JUMPDEST POP DUP5 EXTCODESIZE ISZERO PUSH2 0x155 JUMPI PUSH2 0x155 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1CB JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x17B SWAP1 DUP4 SWAP1 PUSH2 0x340 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1A8 SWAP1 DUP4 SWAP1 PUSH2 0x353 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5260769B PUSH1 0xE1 SHL DUP2 MSTORE DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA4C0ED36 SWAP1 PUSH2 0x1FF SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x366 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26F DUP3 PUSH2 0x238 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x295 DUP6 PUSH2 0x238 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x2F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31C DUP4 PUSH2 0x238 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1C5 JUMPI PUSH2 0x1C5 PUSH2 0x32A JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1C5 JUMPI PUSH2 0x1C5 PUSH2 0x32A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE DUP2 DUP4 PUSH1 0x80 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP4 ADD PUSH1 0x80 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x313357 0x28 LOG3 CALLDATALOAD PUSH29 0x650F2CE8F6D6EF9CE0E902847C3443F34010793E6BFA042564736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        159,
        1764
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x62"
    },
    "25": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x18160DDD"
    },
    "38": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "EQ",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x67"
    },
    "42": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x27E235E3"
    },
    "49": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "EQ",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x88"
    },
    "53": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x4000AEA0"
    },
    "60": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "EQ",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA8"
    },
    "64": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "71": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCB"
    },
    "75": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA9059CBB"
    },
    "82": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "EQ",
      "path": "6"
    },
    "83": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF4"
    },
    "86": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "87": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "DUP1",
      "path": "6"
    },
    "88": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xE30443BC"
    },
    "93": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "EQ",
      "path": "6"
    },
    "94": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x107"
    },
    "97": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "98": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "99": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "101": {
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "DUP1",
      "path": "6"
    },
    "102": {
      "first_revert": true,
      "fn": null,
      "offset": [
        159,
        1764
      ],
      "op": "REVERT",
      "path": "6"
    },
    "103": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        377,
        518
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "104": {
      "offset": [
        228,
        248
      ],
      "op": "PUSH12",
      "path": "6",
      "value": "0x33B2E3C9FD0803CE8000000"
    },
    "117": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        377,
        518
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "118": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        377,
        518
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "120": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        377,
        518
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "121": {
      "op": "SWAP1"
    },
    "122": {
      "op": "DUP2"
    },
    "123": {
      "op": "MSTORE"
    },
    "124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "126": {
      "op": "ADD"
    },
    "127": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        377,
        518
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "128": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        377,
        518
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "130": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        377,
        518
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "131": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        377,
        518
      ],
      "op": "DUP1",
      "path": "6"
    },
    "132": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        377,
        518
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "133": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        377,
        518
      ],
      "op": "SUB",
      "path": "6"
    },
    "134": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        377,
        518
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "135": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        377,
        518
      ],
      "op": "RETURN",
      "path": "6"
    },
    "136": {
      "offset": [
        327,
        370
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "137": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        327,
        370
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x75"
    },
    "140": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        327,
        370
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x96"
    },
    "143": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        327,
        370
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "144": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        327,
        370
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "146": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        327,
        370
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x254"
    },
    "149": {
      "fn": "MockLinkToken.totalSupply",
      "jump": "i",
      "offset": [
        327,
        370
      ],
      "op": "JUMP",
      "path": "6"
    },
    "150": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        327,
        370
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "151": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        327,
        370
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "153": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        327,
        370
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "155": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        327,
        370
      ],
      "op": "DUP2",
      "path": "6"
    },
    "156": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        327,
        370
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "157": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        327,
        370
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "158": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        327,
        370
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "159": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        327,
        370
      ],
      "op": "DUP2",
      "path": "6"
    },
    "160": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        327,
        370
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "161": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        327,
        370
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "163": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        327,
        370
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "164": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        327,
        370
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "165": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        327,
        370
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "166": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        327,
        370
      ],
      "op": "DUP2",
      "path": "6"
    },
    "167": {
      "fn": "MockLinkToken.totalSupply",
      "offset": [
        327,
        370
      ],
      "op": "JUMP",
      "path": "6"
    },
    "168": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1025,
        1311
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "169": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1025,
        1311
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBB"
    },
    "172": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1025,
        1311
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB6"
    },
    "175": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1025,
        1311
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "176": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1025,
        1311
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "178": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1025,
        1311
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x276"
    },
    "181": {
      "fn": "MockLinkToken.transferAndCall",
      "jump": "i",
      "offset": [
        1025,
        1311
      ],
      "op": "JUMP",
      "path": "6"
    },
    "182": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1025,
        1311
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "183": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1025,
        1311
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x135"
    },
    "186": {
      "fn": "MockLinkToken.transferAndCall",
      "jump": "i",
      "offset": [
        1025,
        1311
      ],
      "op": "JUMP",
      "path": "6"
    },
    "187": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1025,
        1311
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "188": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1025,
        1311
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "190": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1025,
        1311
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "191": {
      "op": "SWAP1"
    },
    "192": {
      "op": "ISZERO"
    },
    "193": {
      "op": "ISZERO"
    },
    "194": {
      "op": "DUP2"
    },
    "195": {
      "op": "MSTORE"
    },
    "196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "198": {
      "op": "ADD"
    },
    "199": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1025,
        1311
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F"
    },
    "202": {
      "op": "JUMP"
    },
    "203": {
      "fn": "MockLinkToken.balanceOf",
      "offset": [
        908,
        1019
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "204": {
      "fn": "MockLinkToken.balanceOf",
      "offset": [
        908,
        1019
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x75"
    },
    "207": {
      "fn": "MockLinkToken.balanceOf",
      "offset": [
        908,
        1019
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD9"
    },
    "210": {
      "fn": "MockLinkToken.balanceOf",
      "offset": [
        908,
        1019
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "211": {
      "fn": "MockLinkToken.balanceOf",
      "offset": [
        908,
        1019
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "213": {
      "fn": "MockLinkToken.balanceOf",
      "offset": [
        908,
        1019
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x254"
    },
    "216": {
      "fn": "MockLinkToken.balanceOf",
      "jump": "i",
      "offset": [
        908,
        1019
      ],
      "op": "JUMP",
      "path": "6"
    },
    "217": {
      "fn": "MockLinkToken.balanceOf",
      "offset": [
        908,
        1019
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "224": {
      "op": "SHL"
    },
    "225": {
      "op": "SUB"
    },
    "226": {
      "fn": "MockLinkToken.balanceOf",
      "offset": [
        994,
        1012
      ],
      "op": "AND",
      "path": "6",
      "statement": 0
    },
    "227": {
      "fn": "MockLinkToken.balanceOf",
      "offset": [
        968,
        975
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "229": {
      "fn": "MockLinkToken.balanceOf",
      "offset": [
        994,
        1012
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "230": {
      "fn": "MockLinkToken.balanceOf",
      "offset": [
        994,
        1012
      ],
      "op": "DUP2",
      "path": "6"
    },
    "231": {
      "fn": "MockLinkToken.balanceOf",
      "offset": [
        994,
        1012
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "232": {
      "fn": "MockLinkToken.balanceOf",
      "offset": [
        994,
        1012
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "234": {
      "fn": "MockLinkToken.balanceOf",
      "offset": [
        994,
        1012
      ],
      "op": "DUP2",
      "path": "6"
    },
    "235": {
      "fn": "MockLinkToken.balanceOf",
      "offset": [
        994,
        1012
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "236": {
      "fn": "MockLinkToken.balanceOf",
      "offset": [
        994,
        1012
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "237": {
      "fn": "MockLinkToken.balanceOf",
      "offset": [
        994,
        1012
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "239": {
      "fn": "MockLinkToken.balanceOf",
      "offset": [
        994,
        1012
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "240": {
      "fn": "MockLinkToken.balanceOf",
      "offset": [
        994,
        1012
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "241": {
      "fn": "MockLinkToken.balanceOf",
      "offset": [
        994,
        1012
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "242": {
      "fn": "MockLinkToken.balanceOf",
      "offset": [
        994,
        1012
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "243": {
      "fn": "MockLinkToken.balanceOf",
      "offset": [
        908,
        1019
      ],
      "op": "JUMP",
      "path": "6"
    },
    "244": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        524,
        731
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "245": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        524,
        731
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBB"
    },
    "248": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        524,
        731
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x102"
    },
    "251": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        524,
        731
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "252": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        524,
        731
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "254": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        524,
        731
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x300"
    },
    "257": {
      "fn": "MockLinkToken.transfer",
      "jump": "i",
      "offset": [
        524,
        731
      ],
      "op": "JUMP",
      "path": "6"
    },
    "258": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        524,
        731
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "259": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        524,
        731
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x160"
    },
    "262": {
      "fn": "MockLinkToken.transfer",
      "jump": "i",
      "offset": [
        524,
        731
      ],
      "op": "JUMP",
      "path": "6"
    },
    "263": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        737,
        902
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "264": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        737,
        902
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBB"
    },
    "267": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        737,
        902
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x115"
    },
    "270": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        737,
        902
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "271": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        737,
        902
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "273": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        737,
        902
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x300"
    },
    "276": {
      "fn": "MockLinkToken.setBalance",
      "jump": "i",
      "offset": [
        737,
        902
      ],
      "op": "JUMP",
      "path": "6"
    },
    "277": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        737,
        902
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "284": {
      "op": "SHL"
    },
    "285": {
      "op": "SUB"
    },
    "286": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        847,
        865
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 1
    },
    "287": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        847,
        865
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "288": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        847,
        865
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "289": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        847,
        865
      ],
      "op": "AND",
      "path": "6"
    },
    "290": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        831,
        835
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "292": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        847,
        865
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "293": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        847,
        865
      ],
      "op": "DUP2",
      "path": "6"
    },
    "294": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        847,
        865
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "295": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        847,
        865
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "297": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        847,
        865
      ],
      "op": "DUP2",
      "path": "6"
    },
    "298": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        847,
        865
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "299": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        847,
        865
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "300": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        847,
        865
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "302": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        847,
        865
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "303": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        847,
        865
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "304": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        847,
        874
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "305": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        891,
        895
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 2,
      "value": "0x1"
    },
    "307": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        891,
        895
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "308": {
      "fn": "MockLinkToken.setBalance",
      "offset": [
        737,
        902
      ],
      "op": "JUMP",
      "path": "6"
    },
    "309": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1025,
        1311
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "310": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1147,
        1159
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "312": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1171,
        1192
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 3,
      "value": "0x141"
    },
    "315": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1180,
        1183
      ],
      "op": "DUP6",
      "path": "6"
    },
    "316": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1185,
        1191
      ],
      "op": "DUP6",
      "path": "6"
    },
    "317": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1171,
        1179
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x160"
    },
    "320": {
      "fn": "MockLinkToken.transferAndCall",
      "jump": "i",
      "offset": [
        1171,
        1192
      ],
      "op": "JUMP",
      "path": "6"
    },
    "321": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1171,
        1192
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "322": {
      "op": "POP"
    },
    "323": {
      "fn": "MockLinkToken.isContract",
      "offset": [
        1455,
        1473
      ],
      "op": "DUP5",
      "path": "6"
    },
    "324": {
      "fn": "MockLinkToken.isContract",
      "offset": [
        1455,
        1473
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "325": {
      "fn": "MockLinkToken.isContract",
      "offset": [
        1499,
        1509
      ],
      "op": "ISZERO",
      "path": "6",
      "statement": 4
    },
    "326": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1202,
        1284
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x155"
    },
    "329": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1202,
        1284
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "330": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1237,
        1273
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 5,
      "value": "0x155"
    },
    "333": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1254,
        1257
      ],
      "op": "DUP6",
      "path": "6"
    },
    "334": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1259,
        1265
      ],
      "op": "DUP6",
      "path": "6"
    },
    "335": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1267,
        1272
      ],
      "op": "DUP6",
      "path": "6"
    },
    "336": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1267,
        1272
      ],
      "op": "DUP6",
      "path": "6"
    },
    "337": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1237,
        1253
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CB"
    },
    "340": {
      "fn": "MockLinkToken.transferAndCall",
      "jump": "i",
      "offset": [
        1237,
        1273
      ],
      "op": "JUMP",
      "path": "6"
    },
    "341": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1237,
        1273
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "342": {
      "op": "POP"
    },
    "343": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1300,
        1304
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 6,
      "value": "0x1"
    },
    "345": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1025,
        1311
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "346": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1025,
        1311
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "347": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1025,
        1311
      ],
      "op": "POP",
      "path": "6"
    },
    "348": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1025,
        1311
      ],
      "op": "POP",
      "path": "6"
    },
    "349": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1025,
        1311
      ],
      "op": "POP",
      "path": "6"
    },
    "350": {
      "fn": "MockLinkToken.transferAndCall",
      "offset": [
        1025,
        1311
      ],
      "op": "POP",
      "path": "6"
    },
    "351": {
      "fn": "MockLinkToken.transferAndCall",
      "jump": "o",
      "offset": [
        1025,
        1311
      ],
      "op": "JUMP",
      "path": "6"
    },
    "352": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        524,
        731
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "353": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        635,
        645
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 7
    },
    "354": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        587,
        591
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "356": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        626,
        646
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "357": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        626,
        646
      ],
      "op": "DUP2",
      "path": "6"
    },
    "358": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        626,
        646
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "359": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        626,
        646
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "361": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        626,
        646
      ],
      "op": "DUP2",
      "path": "6"
    },
    "362": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        626,
        646
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "363": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        626,
        646
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "364": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        626,
        646
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "366": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        626,
        646
      ],
      "op": "DUP2",
      "path": "6"
    },
    "367": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        626,
        646
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "368": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        626,
        646
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "369": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        626,
        655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17B"
    },
    "372": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        626,
        655
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "373": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        649,
        655
      ],
      "op": "DUP4",
      "path": "6"
    },
    "374": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        649,
        655
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "375": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        626,
        655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x340"
    },
    "378": {
      "fn": "MockLinkToken.transfer",
      "jump": "i",
      "offset": [
        626,
        655
      ],
      "op": "JUMP",
      "path": "6"
    },
    "379": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        626,
        655
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "380": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        612,
        622
      ],
      "op": "CALLER",
      "path": "6"
    },
    "381": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        603,
        611
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "383": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        603,
        623
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "384": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        603,
        623
      ],
      "op": "DUP2",
      "path": "6"
    },
    "385": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        603,
        623
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "386": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        603,
        623
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "388": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        603,
        623
      ],
      "op": "DUP2",
      "path": "6"
    },
    "389": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        603,
        623
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "390": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        603,
        623
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "391": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        603,
        623
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "393": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        603,
        623
      ],
      "op": "DUP1",
      "path": "6"
    },
    "394": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        603,
        623
      ],
      "op": "DUP3",
      "path": "6"
    },
    "395": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        603,
        623
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "396": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        603,
        655
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "397": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        603,
        655
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "398": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        603,
        655
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "399": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        603,
        655
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "406": {
      "op": "SHL"
    },
    "407": {
      "op": "SUB"
    },
    "408": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        681,
        694
      ],
      "op": "DUP6",
      "path": "6",
      "statement": 8
    },
    "409": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        681,
        694
      ],
      "op": "AND",
      "path": "6"
    },
    "410": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        681,
        694
      ],
      "op": "DUP2",
      "path": "6"
    },
    "411": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        681,
        694
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "412": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        681,
        694
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "413": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        681,
        694
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "414": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        681,
        703
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A8"
    },
    "417": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        681,
        703
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "418": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        697,
        703
      ],
      "op": "DUP4",
      "path": "6"
    },
    "419": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        697,
        703
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "420": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        681,
        703
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x353"
    },
    "423": {
      "fn": "MockLinkToken.transfer",
      "jump": "i",
      "offset": [
        681,
        703
      ],
      "op": "JUMP",
      "path": "6"
    },
    "424": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        681,
        703
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "429": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "431": {
      "op": "SHL"
    },
    "432": {
      "op": "SUB"
    },
    "433": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        665,
        678
      ],
      "op": "DUP5",
      "path": "6"
    },
    "434": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        665,
        678
      ],
      "op": "AND",
      "path": "6"
    },
    "435": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        665,
        673
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "437": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        665,
        678
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "438": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        665,
        678
      ],
      "op": "DUP2",
      "path": "6"
    },
    "439": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        665,
        678
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "440": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        665,
        678
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "442": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        665,
        678
      ],
      "op": "DUP2",
      "path": "6"
    },
    "443": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        665,
        678
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "444": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        665,
        678
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "445": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        665,
        678
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "447": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        665,
        678
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "448": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        665,
        678
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "449": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        665,
        703
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "450": {
      "op": "POP"
    },
    "451": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        720,
        724
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 9,
      "value": "0x1"
    },
    "453": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        524,
        731
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "454": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        524,
        731
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "455": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        524,
        731
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "456": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        524,
        731
      ],
      "op": "POP",
      "path": "6"
    },
    "457": {
      "fn": "MockLinkToken.transfer",
      "offset": [
        524,
        731
      ],
      "op": "POP",
      "path": "6"
    },
    "458": {
      "fn": "MockLinkToken.transfer",
      "jump": "o",
      "offset": [
        524,
        731
      ],
      "op": "JUMP",
      "path": "6"
    },
    "459": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1522,
        1762
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "460": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 10,
      "value": "0x40"
    },
    "462": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "463": {
      "op": "PUSH4",
      "value": "0x5260769B"
    },
    "468": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "470": {
      "op": "SHL"
    },
    "471": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "DUP2",
      "path": "6"
    },
    "472": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "473": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1690,
        1693
      ],
      "op": "DUP5",
      "path": "6"
    },
    "474": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1690,
        1693
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "481": {
      "op": "SHL"
    },
    "482": {
      "op": "SUB"
    },
    "483": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1728
      ],
      "op": "DUP3",
      "path": "6"
    },
    "484": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1728
      ],
      "op": "AND",
      "path": "6"
    },
    "485": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1728
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "486": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1728
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA4C0ED36"
    },
    "491": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1728
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "492": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FF"
    },
    "495": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "496": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1729,
        1739
      ],
      "op": "CALLER",
      "path": "6"
    },
    "497": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1729,
        1739
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "498": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1741,
        1747
      ],
      "op": "DUP9",
      "path": "6"
    },
    "499": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1741,
        1747
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "500": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1749,
        1754
      ],
      "op": "DUP9",
      "path": "6"
    },
    "501": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1749,
        1754
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "502": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1749,
        1754
      ],
      "op": "DUP9",
      "path": "6"
    },
    "503": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1749,
        1754
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "504": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "506": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "ADD",
      "path": "6"
    },
    "507": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x366"
    },
    "510": {
      "fn": "MockLinkToken.contractFallback",
      "jump": "i",
      "offset": [
        1704,
        1755
      ],
      "op": "JUMP",
      "path": "6"
    },
    "511": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "512": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "514": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "516": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "517": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "DUP1",
      "path": "6"
    },
    "518": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "DUP4",
      "path": "6"
    },
    "519": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "SUB",
      "path": "6"
    },
    "520": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "DUP2",
      "path": "6"
    },
    "521": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "523": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "DUP8",
      "path": "6"
    },
    "524": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "DUP1",
      "path": "6"
    },
    "525": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "526": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "527": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "DUP1",
      "path": "6"
    },
    "528": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "529": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x219"
    },
    "532": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "533": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "535": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "DUP1",
      "path": "6"
    },
    "536": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "REVERT",
      "path": "6"
    },
    "537": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "538": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "POP",
      "path": "6"
    },
    "539": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "GAS",
      "path": "6"
    },
    "540": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "CALL",
      "path": "6"
    },
    "541": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "542": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "DUP1",
      "path": "6"
    },
    "543": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "544": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x22D"
    },
    "547": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "548": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "549": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "551": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "DUP1",
      "path": "6"
    },
    "552": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "553": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "554": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "556": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "REVERT",
      "path": "6"
    },
    "557": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "558": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "POP",
      "path": "6"
    },
    "559": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "POP",
      "path": "6"
    },
    "560": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "POP",
      "path": "6"
    },
    "561": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1704,
        1755
      ],
      "op": "POP",
      "path": "6"
    },
    "562": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1637,
        1762
      ],
      "op": "POP",
      "path": "6"
    },
    "563": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1522,
        1762
      ],
      "op": "POP",
      "path": "6"
    },
    "564": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1522,
        1762
      ],
      "op": "POP",
      "path": "6"
    },
    "565": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1522,
        1762
      ],
      "op": "POP",
      "path": "6"
    },
    "566": {
      "fn": "MockLinkToken.contractFallback",
      "offset": [
        1522,
        1762
      ],
      "op": "POP",
      "path": "6"
    },
    "567": {
      "fn": "MockLinkToken.contractFallback",
      "jump": "o",
      "offset": [
        1522,
        1762
      ],
      "op": "JUMP",
      "path": "6"
    },
    "568": {
      "op": "JUMPDEST"
    },
    "569": {
      "op": "DUP1"
    },
    "570": {
      "op": "CALLDATALOAD"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "577": {
      "op": "SHL"
    },
    "578": {
      "op": "SUB"
    },
    "579": {
      "op": "DUP2"
    },
    "580": {
      "op": "AND"
    },
    "581": {
      "op": "DUP2"
    },
    "582": {
      "op": "EQ"
    },
    "583": {
      "op": "PUSH2",
      "value": "0x24F"
    },
    "586": {
      "op": "JUMPI"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "589": {
      "op": "DUP1"
    },
    "590": {
      "op": "REVERT"
    },
    "591": {
      "op": "JUMPDEST"
    },
    "592": {
      "op": "SWAP2"
    },
    "593": {
      "op": "SWAP1"
    },
    "594": {
      "op": "POP"
    },
    "595": {
      "jump": "o",
      "op": "JUMP"
    },
    "596": {
      "op": "JUMPDEST"
    },
    "597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "599": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "601": {
      "op": "DUP3"
    },
    "602": {
      "op": "DUP5"
    },
    "603": {
      "op": "SUB"
    },
    "604": {
      "op": "SLT"
    },
    "605": {
      "op": "ISZERO"
    },
    "606": {
      "op": "PUSH2",
      "value": "0x266"
    },
    "609": {
      "op": "JUMPI"
    },
    "610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "612": {
      "op": "DUP1"
    },
    "613": {
      "op": "REVERT"
    },
    "614": {
      "op": "JUMPDEST"
    },
    "615": {
      "op": "PUSH2",
      "value": "0x26F"
    },
    "618": {
      "op": "DUP3"
    },
    "619": {
      "op": "PUSH2",
      "value": "0x238"
    },
    "622": {
      "jump": "i",
      "op": "JUMP"
    },
    "623": {
      "op": "JUMPDEST"
    },
    "624": {
      "op": "SWAP4"
    },
    "625": {
      "op": "SWAP3"
    },
    "626": {
      "op": "POP"
    },
    "627": {
      "op": "POP"
    },
    "628": {
      "op": "POP"
    },
    "629": {
      "jump": "o",
      "op": "JUMP"
    },
    "630": {
      "op": "JUMPDEST"
    },
    "631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "633": {
      "op": "DUP1"
    },
    "634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "636": {
      "op": "DUP1"
    },
    "637": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "639": {
      "op": "DUP6"
    },
    "640": {
      "op": "DUP8"
    },
    "641": {
      "op": "SUB"
    },
    "642": {
      "op": "SLT"
    },
    "643": {
      "op": "ISZERO"
    },
    "644": {
      "op": "PUSH2",
      "value": "0x28C"
    },
    "647": {
      "op": "JUMPI"
    },
    "648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "650": {
      "op": "DUP1"
    },
    "651": {
      "op": "REVERT"
    },
    "652": {
      "op": "JUMPDEST"
    },
    "653": {
      "op": "PUSH2",
      "value": "0x295"
    },
    "656": {
      "op": "DUP6"
    },
    "657": {
      "op": "PUSH2",
      "value": "0x238"
    },
    "660": {
      "jump": "i",
      "op": "JUMP"
    },
    "661": {
      "op": "JUMPDEST"
    },
    "662": {
      "op": "SWAP4"
    },
    "663": {
      "op": "POP"
    },
    "664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "666": {
      "op": "DUP6"
    },
    "667": {
      "op": "ADD"
    },
    "668": {
      "op": "CALLDATALOAD"
    },
    "669": {
      "op": "SWAP3"
    },
    "670": {
      "op": "POP"
    },
    "671": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "673": {
      "op": "DUP6"
    },
    "674": {
      "op": "ADD"
    },
    "675": {
      "op": "CALLDATALOAD"
    },
    "676": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "685": {
      "op": "DUP2"
    },
    "686": {
      "op": "GT"
    },
    "687": {
      "op": "ISZERO"
    },
    "688": {
      "op": "PUSH2",
      "value": "0x2B8"
    },
    "691": {
      "op": "JUMPI"
    },
    "692": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "694": {
      "op": "DUP1"
    },
    "695": {
      "op": "REVERT"
    },
    "696": {
      "op": "JUMPDEST"
    },
    "697": {
      "op": "DUP6"
    },
    "698": {
      "op": "ADD"
    },
    "699": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "701": {
      "op": "DUP2"
    },
    "702": {
      "op": "ADD"
    },
    "703": {
      "op": "DUP8"
    },
    "704": {
      "op": "SGT"
    },
    "705": {
      "op": "PUSH2",
      "value": "0x2C9"
    },
    "708": {
      "op": "JUMPI"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "711": {
      "op": "DUP1"
    },
    "712": {
      "op": "REVERT"
    },
    "713": {
      "op": "JUMPDEST"
    },
    "714": {
      "op": "DUP1"
    },
    "715": {
      "op": "CALLDATALOAD"
    },
    "716": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "725": {
      "op": "DUP2"
    },
    "726": {
      "op": "GT"
    },
    "727": {
      "op": "ISZERO"
    },
    "728": {
      "op": "PUSH2",
      "value": "0x2E0"
    },
    "731": {
      "op": "JUMPI"
    },
    "732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "734": {
      "op": "DUP1"
    },
    "735": {
      "op": "REVERT"
    },
    "736": {
      "op": "JUMPDEST"
    },
    "737": {
      "op": "DUP8"
    },
    "738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "740": {
      "op": "DUP3"
    },
    "741": {
      "op": "DUP5"
    },
    "742": {
      "op": "ADD"
    },
    "743": {
      "op": "ADD"
    },
    "744": {
      "op": "GT"
    },
    "745": {
      "op": "ISZERO"
    },
    "746": {
      "op": "PUSH2",
      "value": "0x2F2"
    },
    "749": {
      "op": "JUMPI"
    },
    "750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "752": {
      "op": "DUP1"
    },
    "753": {
      "op": "REVERT"
    },
    "754": {
      "op": "JUMPDEST"
    },
    "755": {
      "op": "SWAP5"
    },
    "756": {
      "op": "SWAP8"
    },
    "757": {
      "op": "SWAP4"
    },
    "758": {
      "op": "SWAP7"
    },
    "759": {
      "op": "POP"
    },
    "760": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "762": {
      "op": "ADD"
    },
    "763": {
      "op": "SWAP5"
    },
    "764": {
      "op": "POP"
    },
    "765": {
      "op": "POP"
    },
    "766": {
      "op": "POP"
    },
    "767": {
      "jump": "o",
      "op": "JUMP"
    },
    "768": {
      "op": "JUMPDEST"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "771": {
      "op": "DUP1"
    },
    "772": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "774": {
      "op": "DUP4"
    },
    "775": {
      "op": "DUP6"
    },
    "776": {
      "op": "SUB"
    },
    "777": {
      "op": "SLT"
    },
    "778": {
      "op": "ISZERO"
    },
    "779": {
      "op": "PUSH2",
      "value": "0x313"
    },
    "782": {
      "op": "JUMPI"
    },
    "783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "785": {
      "op": "DUP1"
    },
    "786": {
      "op": "REVERT"
    },
    "787": {
      "op": "JUMPDEST"
    },
    "788": {
      "op": "PUSH2",
      "value": "0x31C"
    },
    "791": {
      "op": "DUP4"
    },
    "792": {
      "op": "PUSH2",
      "value": "0x238"
    },
    "795": {
      "jump": "i",
      "op": "JUMP"
    },
    "796": {
      "op": "JUMPDEST"
    },
    "797": {
      "op": "SWAP5"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "800": {
      "op": "SWAP4"
    },
    "801": {
      "op": "SWAP1"
    },
    "802": {
      "op": "SWAP4"
    },
    "803": {
      "op": "ADD"
    },
    "804": {
      "op": "CALLDATALOAD"
    },
    "805": {
      "op": "SWAP4"
    },
    "806": {
      "op": "POP"
    },
    "807": {
      "op": "POP"
    },
    "808": {
      "op": "POP"
    },
    "809": {
      "jump": "o",
      "op": "JUMP"
    },
    "810": {
      "op": "JUMPDEST"
    },
    "811": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "816": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "818": {
      "op": "SHL"
    },
    "819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "821": {
      "op": "MSTORE"
    },
    "822": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "826": {
      "op": "MSTORE"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "831": {
      "op": "REVERT"
    },
    "832": {
      "op": "JUMPDEST"
    },
    "833": {
      "op": "DUP2"
    },
    "834": {
      "op": "DUP2"
    },
    "835": {
      "op": "SUB"
    },
    "836": {
      "op": "DUP2"
    },
    "837": {
      "op": "DUP2"
    },
    "838": {
      "op": "GT"
    },
    "839": {
      "op": "ISZERO"
    },
    "840": {
      "op": "PUSH2",
      "value": "0x1C5"
    },
    "843": {
      "op": "JUMPI"
    },
    "844": {
      "op": "PUSH2",
      "value": "0x1C5"
    },
    "847": {
      "op": "PUSH2",
      "value": "0x32A"
    },
    "850": {
      "jump": "i",
      "op": "JUMP"
    },
    "851": {
      "op": "JUMPDEST"
    },
    "852": {
      "op": "DUP1"
    },
    "853": {
      "op": "DUP3"
    },
    "854": {
      "op": "ADD"
    },
    "855": {
      "op": "DUP1"
    },
    "856": {
      "op": "DUP3"
    },
    "857": {
      "op": "GT"
    },
    "858": {
      "op": "ISZERO"
    },
    "859": {
      "op": "PUSH2",
      "value": "0x1C5"
    },
    "862": {
      "op": "JUMPI"
    },
    "863": {
      "op": "PUSH2",
      "value": "0x1C5"
    },
    "866": {
      "op": "PUSH2",
      "value": "0x32A"
    },
    "869": {
      "jump": "i",
      "op": "JUMP"
    },
    "870": {
      "op": "JUMPDEST"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "877": {
      "op": "SHL"
    },
    "878": {
      "op": "SUB"
    },
    "879": {
      "op": "DUP6"
    },
    "880": {
      "op": "AND"
    },
    "881": {
      "op": "DUP2"
    },
    "882": {
      "op": "MSTORE"
    },
    "883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "885": {
      "op": "DUP2"
    },
    "886": {
      "op": "ADD"
    },
    "887": {
      "op": "DUP5"
    },
    "888": {
      "op": "SWAP1"
    },
    "889": {
      "op": "MSTORE"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "892": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "894": {
      "op": "DUP3"
    },
    "895": {
      "op": "ADD"
    },
    "896": {
      "op": "DUP2"
    },
    "897": {
      "op": "SWAP1"
    },
    "898": {
      "op": "MSTORE"
    },
    "899": {
      "op": "DUP2"
    },
    "900": {
      "op": "ADD"
    },
    "901": {
      "op": "DUP3"
    },
    "902": {
      "op": "SWAP1"
    },
    "903": {
      "op": "MSTORE"
    },
    "904": {
      "op": "DUP2"
    },
    "905": {
      "op": "DUP4"
    },
    "906": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "908": {
      "op": "DUP4"
    },
    "909": {
      "op": "ADD"
    },
    "910": {
      "op": "CALLDATACOPY"
    },
    "911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "913": {
      "op": "DUP2"
    },
    "914": {
      "op": "DUP4"
    },
    "915": {
      "op": "ADD"
    },
    "916": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "918": {
      "op": "SWAP1"
    },
    "919": {
      "op": "DUP2"
    },
    "920": {
      "op": "ADD"
    },
    "921": {
      "op": "SWAP2"
    },
    "922": {
      "op": "SWAP1"
    },
    "923": {
      "op": "SWAP2"
    },
    "924": {
      "op": "MSTORE"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "927": {
      "op": "SWAP1"
    },
    "928": {
      "op": "SWAP3"
    },
    "929": {
      "op": "ADD"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "932": {
      "op": "NOT"
    },
    "933": {
      "op": "AND"
    },
    "934": {
      "op": "ADD"
    },
    "935": {
      "op": "ADD"
    },
    "936": {
      "op": "SWAP4"
    },
    "937": {
      "op": "SWAP3"
    },
    "938": {
      "op": "POP"
    },
    "939": {
      "op": "POP"
    },
    "940": {
      "op": "POP"
    },
    "941": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "fef2978acb57ce08d2beaf902579b43564a80851",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IERC677Receiver} from \"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol\";\n\ncontract MockLinkToken {\n    uint256 private constant TOTAL_SUPPLY = 1_000_000_000 * 1e18;\n\n    constructor() {\n        balances[msg.sender] = TOTAL_SUPPLY;\n    }\n\n    mapping(address => uint256) public balances;\n\n    function totalSupply() external pure returns (uint256 totalTokensIssued) {\n        return TOTAL_SUPPLY; // 1 billion LINK -> 1e27 Juels\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        balances[msg.sender] = balances[msg.sender] - _value;\n        balances[_to] = balances[_to] + _value;\n        return true;\n    }\n\n    function setBalance(\n        address _address,\n        uint256 _value\n    ) external returns (bool) {\n        balances[_address] = _value;\n        return true;\n    }\n\n    function balanceOf(address _address) external view returns (uint256) {\n        return balances[_address];\n    }\n\n    function transferAndCall(\n        address _to,\n        uint256 _value,\n        bytes calldata _data\n    ) public returns (bool success) {\n        transfer(_to, _value);\n        if (isContract(_to)) {\n            contractFallback(_to, _value, _data);\n        }\n        return true;\n    }\n\n    function isContract(address _addr) private view returns (bool hasCode) {\n        uint256 length;\n        assembly {\n            length := extcodesize(_addr)\n        }\n        return length > 0;\n    }\n\n    function contractFallback(\n        address _to,\n        uint256 _value,\n        bytes calldata _data\n    ) private {\n        IERC677Receiver receiver = IERC677Receiver(_to);\n        receiver.onTokenTransfer(msg.sender, _value, _data);\n    }\n}\n",
  "sourceMap": "159:1605:6:-:0;;;255:66;;;;;;;;;-1:-1:-1;288:10:6;279:8;:20;;;;;;;;;;228;279:35;;159:1605;;;;;;",
  "sourcePath": "contracts/test/MockLinkToken.sol",
  "type": "contract"
}