{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/ashut/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/ERC721.sol",
    "1": "C:/Users/ashut/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/IERC721.sol",
    "2": "C:/Users/ashut/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/IERC721Receiver.sol",
    "4": "C:/Users/ashut/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "5": "C:/Users/ashut/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Address.sol",
    "6": "C:/Users/ashut/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Context.sol",
    "7": "C:/Users/ashut/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Strings.sol",
    "8": "C:/Users/ashut/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/introspection/ERC165.sol",
    "9": "C:/Users/ashut/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/introspection/IERC165.sol"
  },
  "ast": {
    "absolutePath": "C:/Users/ashut/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/ERC721.sol",
    "exportedSymbols": {
      "Address": [
        1753
      ],
      "Context": [
        1776
      ],
      "ERC165": [
        2003
      ],
      "ERC721": [
        1014
      ],
      "IERC165": [
        2015
      ],
      "IERC721": [
        1412
      ],
      "IERC721Metadata": [
        1457
      ],
      "IERC721Receiver": [
        1430
      ],
      "Strings": [
        1979
      ]
    },
    "id": 1015,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 198,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "absolutePath": "C:/Users/ashut/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 199,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1015,
        "sourceUnit": 1413,
        "src": "58:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/ashut/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 200,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1015,
        "sourceUnit": 1431,
        "src": "82:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/ashut/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "./extensions/IERC721Metadata.sol",
        "id": 201,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1015,
        "sourceUnit": 1458,
        "src": "114:42:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/ashut/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 202,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1015,
        "sourceUnit": 1754,
        "src": "157:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/ashut/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 203,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1015,
        "sourceUnit": 1777,
        "src": "191:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/ashut/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Strings.sol",
        "file": "../../utils/Strings.sol",
        "id": 204,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1015,
        "sourceUnit": 1980,
        "src": "225:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/ashut/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/introspection/ERC165.sol",
        "file": "../../utils/introspection/ERC165.sol",
        "id": 205,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1015,
        "sourceUnit": 2004,
        "src": "259:46:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 207,
              "name": "Context",
              "nameLocations": [
                "573:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1776,
              "src": "573:7:0"
            },
            "id": 208,
            "nodeType": "InheritanceSpecifier",
            "src": "573:7:0"
          },
          {
            "baseName": {
              "id": 209,
              "name": "ERC165",
              "nameLocations": [
                "582:6:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2003,
              "src": "582:6:0"
            },
            "id": 210,
            "nodeType": "InheritanceSpecifier",
            "src": "582:6:0"
          },
          {
            "baseName": {
              "id": 211,
              "name": "IERC721",
              "nameLocations": [
                "590:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1412,
              "src": "590:7:0"
            },
            "id": 212,
            "nodeType": "InheritanceSpecifier",
            "src": "590:7:0"
          },
          {
            "baseName": {
              "id": 213,
              "name": "IERC721Metadata",
              "nameLocations": [
                "599:15:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1457,
              "src": "599:15:0"
            },
            "id": 214,
            "nodeType": "InheritanceSpecifier",
            "src": "599:15:0"
          }
        ],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 206,
          "nodeType": "StructuredDocumentation",
          "src": "307:246:0",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 1014,
        "linearizedBaseContracts": [
          1014,
          1457,
          1412,
          2003,
          2015,
          1776
        ],
        "name": "ERC721",
        "nameLocation": "563:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 217,
            "libraryName": {
              "id": 215,
              "name": "Address",
              "nameLocations": [
                "627:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1753,
              "src": "627:7:0"
            },
            "nodeType": "UsingForDirective",
            "src": "621:26:0",
            "typeName": {
              "id": 216,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "639:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "global": false,
            "id": 220,
            "libraryName": {
              "id": 218,
              "name": "Strings",
              "nameLocations": [
                "658:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1979,
              "src": "658:7:0"
            },
            "nodeType": "UsingForDirective",
            "src": "652:26:0",
            "typeName": {
              "id": 219,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "670:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 222,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "717:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 1014,
            "src": "702:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 221,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "702:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 224,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "764:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 1014,
            "src": "749:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 223,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "749:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 228,
            "mutability": "mutable",
            "name": "_owners",
            "nameLocation": "861:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 1014,
            "src": "824:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 227,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 225,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "833:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "824:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 226,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "844:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 232,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "956:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 1014,
            "src": "919:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 231,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 229,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "928:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "919:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 230,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "939:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 236,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1058:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 1014,
            "src": "1021:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 235,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 233,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1030:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1021:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 234,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1041:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 242,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1183:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 1014,
            "src": "1128:73:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 241,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 237,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1137:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1128:46:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 240,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 238,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1157:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1148:25:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 239,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1168:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 258,
              "nodeType": "Block",
              "src": "1378:57:0",
              "statements": [
                {
                  "expression": {
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 250,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 222,
                      "src": "1388:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 251,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "1396:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1388:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "1388:13:0"
                },
                {
                  "expression": {
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 254,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 224,
                      "src": "1411:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 255,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "1421:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1411:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "1411:17:0"
                }
              ]
            },
            "documentation": {
              "id": 243,
              "nodeType": "StructuredDocumentation",
              "src": "1208:108:0",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 259,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1348:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "1334:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1334:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1369:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "1355:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1355:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1333:44:0"
            },
            "returnParameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1378:0:0"
            },
            "scope": 1014,
            "src": "1321:114:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2002,
              2014
            ],
            "body": {
              "id": 289,
              "nodeType": "Block",
              "src": "1610:180:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 270,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 262,
                          "src": "1627:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 272,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1412,
                                "src": "1647:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$1412_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$1412_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 271,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1642:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1642:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1412",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1656:11:0",
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1642:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1627:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 276,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 262,
                          "src": "1683:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 278,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1457,
                                "src": "1703:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1457_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1457_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 277,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1698:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1698:21:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1457",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1720:11:0",
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1698:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1683:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1627:104:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 285,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 262,
                          "src": "1771:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 283,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1747:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$1014_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1753:17:0",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2002,
                        "src": "1747:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1747:36:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1627:156:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 269,
                  "id": 288,
                  "nodeType": "Return",
                  "src": "1620:163:0"
                }
              ]
            },
            "documentation": {
              "id": 260,
              "nodeType": "StructuredDocumentation",
              "src": "1441:56:0",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 290,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1511:17:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 266,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 264,
                  "name": "ERC165",
                  "nameLocations": [
                    "1578:6:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2003,
                  "src": "1578:6:0"
                },
                {
                  "id": 265,
                  "name": "IERC165",
                  "nameLocations": [
                    "1586:7:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2015,
                  "src": "1586:7:0"
                }
              ],
              "src": "1569:25:0"
            },
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1536:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "1529:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1529:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1528:20:0"
            },
            "returnParameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "1604:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1604:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1603:6:0"
            },
            "scope": 1014,
            "src": "1502:288:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1337
            ],
            "body": {
              "id": 313,
              "nodeType": "Block",
              "src": "1930:124:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 300,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 293,
                          "src": "1948:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1965:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1957:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 301,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1957:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1957:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1948:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1969:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 299,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1940:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1940:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 308,
                  "nodeType": "ExpressionStatement",
                  "src": "1940:74:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 309,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 232,
                      "src": "2031:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 311,
                    "indexExpression": {
                      "id": 310,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 293,
                      "src": "2041:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2031:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 298,
                  "id": 312,
                  "nodeType": "Return",
                  "src": "2024:23:0"
                }
              ]
            },
            "documentation": {
              "id": 291,
              "nodeType": "StructuredDocumentation",
              "src": "1796:48:0",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 314,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1858:9:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 295,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1903:8:0"
            },
            "parameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 293,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1876:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 314,
                  "src": "1868:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 292,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1868:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1867:15:0"
            },
            "returnParameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 297,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 314,
                  "src": "1921:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1920:9:0"
            },
            "scope": 1014,
            "src": "1849:205:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1345
            ],
            "body": {
              "id": 341,
              "nodeType": "Block",
              "src": "2192:154:0",
              "statements": [
                {
                  "assignments": [
                    324
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 324,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2210:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 341,
                      "src": "2202:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 323,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2202:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 328,
                  "initialValue": {
                    "baseExpression": {
                      "id": 325,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "2218:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 327,
                    "indexExpression": {
                      "id": 326,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 317,
                      "src": "2226:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2218:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2202:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 330,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 324,
                          "src": "2252:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 333,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2269:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2261:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 331,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2261:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2261:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2252:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2273:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2244:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2244:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "2244:73:0"
                },
                {
                  "expression": {
                    "id": 339,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 324,
                    "src": "2334:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 322,
                  "id": 340,
                  "nodeType": "Return",
                  "src": "2327:12:0"
                }
              ]
            },
            "documentation": {
              "id": 315,
              "nodeType": "StructuredDocumentation",
              "src": "2060:46:0",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 342,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2120:7:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 319,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2165:8:0"
            },
            "parameters": {
              "id": 318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 317,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2136:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "2128:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 316,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2128:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2127:17:0"
            },
            "returnParameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 321,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "2183:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2183:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2182:9:0"
            },
            "scope": 1014,
            "src": "2111:235:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1442
            ],
            "body": {
              "id": 351,
              "nodeType": "Block",
              "src": "2477:29:0",
              "statements": [
                {
                  "expression": {
                    "id": 349,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 222,
                    "src": "2494:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 348,
                  "id": 350,
                  "nodeType": "Return",
                  "src": "2487:12:0"
                }
              ]
            },
            "documentation": {
              "id": 343,
              "nodeType": "StructuredDocumentation",
              "src": "2352:51:0",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 352,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2417:4:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 345,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2444:8:0"
            },
            "parameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2421:2:0"
            },
            "returnParameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 347,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 352,
                  "src": "2462:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 346,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2462:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2461:15:0"
            },
            "scope": 1014,
            "src": "2408:98:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1448
            ],
            "body": {
              "id": 361,
              "nodeType": "Block",
              "src": "2641:31:0",
              "statements": [
                {
                  "expression": {
                    "id": 359,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 224,
                    "src": "2658:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 358,
                  "id": 360,
                  "nodeType": "Return",
                  "src": "2651:14:0"
                }
              ]
            },
            "documentation": {
              "id": 353,
              "nodeType": "StructuredDocumentation",
              "src": "2512:53:0",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 362,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2579:6:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 355,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2608:8:0"
            },
            "parameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2585:2:0"
            },
            "returnParameters": {
              "id": 358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 357,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "2626:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 356,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2626:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2625:15:0"
            },
            "scope": 1014,
            "src": "2570:102:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1456
            ],
            "body": {
              "id": 403,
              "nodeType": "Block",
              "src": "2826:265:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 373,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 365,
                            "src": "2852:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 372,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 652,
                          "src": "2844:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2844:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2862:49:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 371,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2836:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2836:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "2836:76:0"
                },
                {
                  "assignments": [
                    379
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 379,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "2937:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 403,
                      "src": "2923:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 378,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2923:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 382,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 380,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 413,
                      "src": "2947:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2947:10:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2923:34:0"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 385,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 379,
                              "src": "2980:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 384,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2974:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 383,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2974:5:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2974:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2989:6:0",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2974:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2998:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2974:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3082:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2974:110:0",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 394,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 379,
                              "src": "3038:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 395,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 365,
                                  "src": "3047:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 396,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3055:8:0",
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1861,
                                "src": "3047:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3047:18:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 392,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3021:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3025:12:0",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3021:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3021:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3014:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 390,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3014:6:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3014:53:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 370,
                  "id": 402,
                  "nodeType": "Return",
                  "src": "2967:117:0"
                }
              ]
            },
            "documentation": {
              "id": 363,
              "nodeType": "StructuredDocumentation",
              "src": "2678:55:0",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 404,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2747:8:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 367,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2793:8:0"
            },
            "parameters": {
              "id": 366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 365,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2764:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 404,
                  "src": "2756:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 364,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2756:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2755:17:0"
            },
            "returnParameters": {
              "id": 370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 369,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 404,
                  "src": "2811:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 368,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2811:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2810:15:0"
            },
            "scope": 1014,
            "src": "2738:353:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 412,
              "nodeType": "Block",
              "src": "3288:26:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3305:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 409,
                  "id": 411,
                  "nodeType": "Return",
                  "src": "3298:9:0"
                }
              ]
            },
            "documentation": {
              "id": 405,
              "nodeType": "StructuredDocumentation",
              "src": "3097:120:0",
              "text": " @dev Base URI for computing {tokenURI}. Empty by default, can be overriden\n in child contracts."
            },
            "id": 413,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3231:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3239:2:0"
            },
            "returnParameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "3273:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3273:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3272:15:0"
            },
            "scope": 1014,
            "src": "3222:92:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1373
            ],
            "body": {
              "id": 455,
              "nodeType": "Block",
              "src": "3441:318:0",
              "statements": [
                {
                  "assignments": [
                    423
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 423,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3459:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 455,
                      "src": "3451:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 422,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3451:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 428,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 426,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "3482:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 424,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1014,
                        "src": "3467:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1014_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3474:7:0",
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 342,
                      "src": "3467:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3467:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3451:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 430,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 416,
                          "src": "3508:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 431,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 423,
                          "src": "3514:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3508:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3521:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 429,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3500:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3500:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "3500:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 437,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1764,
                              "src": "3576:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3576:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 439,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "3592:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3576:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 442,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 423,
                              "src": "3618:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 443,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1764,
                                "src": "3625:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3625:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 441,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "3601:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3601:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3576:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3652:58:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 436,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3568:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3568:152:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "3568:152:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 451,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 416,
                        "src": "3740:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 452,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "3744:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 450,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 938,
                      "src": "3731:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3731:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 454,
                  "nodeType": "ExpressionStatement",
                  "src": "3731:21:0"
                }
              ]
            },
            "documentation": {
              "id": 414,
              "nodeType": "StructuredDocumentation",
              "src": "3320:46:0",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 456,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3380:7:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 420,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3432:8:0"
            },
            "parameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 416,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3396:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 456,
                  "src": "3388:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 415,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3388:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 418,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3408:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 456,
                  "src": "3400:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 417,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3400:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3387:29:0"
            },
            "returnParameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3441:0:0"
            },
            "scope": 1014,
            "src": "3371:388:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1381
            ],
            "body": {
              "id": 476,
              "nodeType": "Block",
              "src": "3905:132:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 467,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 459,
                            "src": "3931:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 466,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 652,
                          "src": "3923:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3923:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3941:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 465,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3915:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3915:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 471,
                  "nodeType": "ExpressionStatement",
                  "src": "3915:73:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 472,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 236,
                      "src": "4006:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 474,
                    "indexExpression": {
                      "id": 473,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 459,
                      "src": "4022:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4006:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 464,
                  "id": 475,
                  "nodeType": "Return",
                  "src": "3999:31:0"
                }
              ]
            },
            "documentation": {
              "id": 457,
              "nodeType": "StructuredDocumentation",
              "src": "3765:50:0",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 477,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "3829:11:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 461,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3878:8:0"
            },
            "parameters": {
              "id": 460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 459,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3849:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "3841:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3841:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3840:17:0"
            },
            "returnParameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 463,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "3896:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3896:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3895:9:0"
            },
            "scope": 1014,
            "src": "3820:217:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1389
            ],
            "body": {
              "id": 510,
              "nodeType": "Block",
              "src": "4188:206:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 487,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 480,
                          "src": "4206:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 488,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1764,
                            "src": "4218:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4218:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4206:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4232:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 486,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4198:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4198:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 493,
                  "nodeType": "ExpressionStatement",
                  "src": "4198:62:0"
                },
                {
                  "expression": {
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 494,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 242,
                          "src": "4271:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 498,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 495,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1764,
                            "src": "4290:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4290:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4271:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 499,
                      "indexExpression": {
                        "id": 497,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "4304:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4271:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 500,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 482,
                      "src": "4316:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4271:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "4271:53:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 504,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1764,
                          "src": "4354:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4354:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 506,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "4368:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 507,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 482,
                        "src": "4378:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 503,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1329,
                      "src": "4339:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4339:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 509,
                  "nodeType": "EmitStatement",
                  "src": "4334:53:0"
                }
              ]
            },
            "documentation": {
              "id": 478,
              "nodeType": "StructuredDocumentation",
              "src": "4043:56:0",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 511,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4113:17:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 484,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4179:8:0"
            },
            "parameters": {
              "id": 483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 480,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4139:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "4131:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4131:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 482,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "4154:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "4149:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 481,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4149:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4130:33:0"
            },
            "returnParameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4188:0:0"
            },
            "scope": 1014,
            "src": "4104:290:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1399
            ],
            "body": {
              "id": 528,
              "nodeType": "Block",
              "src": "4563:59:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 522,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 242,
                        "src": "4580:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 524,
                      "indexExpression": {
                        "id": 523,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 514,
                        "src": "4599:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4580:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 526,
                    "indexExpression": {
                      "id": 525,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 516,
                      "src": "4606:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4580:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 521,
                  "id": 527,
                  "nodeType": "Return",
                  "src": "4573:42:0"
                }
              ]
            },
            "documentation": {
              "id": 512,
              "nodeType": "StructuredDocumentation",
              "src": "4400:55:0",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 529,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4469:16:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 518,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4539:8:0"
            },
            "parameters": {
              "id": 517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 514,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4494:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 529,
                  "src": "4486:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4486:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 516,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4509:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 529,
                  "src": "4501:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4501:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4485:33:0"
            },
            "returnParameters": {
              "id": 521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 520,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 529,
                  "src": "4557:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 519,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4557:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4556:6:0"
            },
            "scope": 1014,
            "src": "4460:162:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1365
            ],
            "body": {
              "id": 555,
              "nodeType": "Block",
              "src": "4773:211:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 542,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1764,
                              "src": "4862:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4862:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 544,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 536,
                            "src": "4876:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 541,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "4843:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4843:41:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4886:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 540,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4835:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4835:103:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 548,
                  "nodeType": "ExpressionStatement",
                  "src": "4835:103:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 550,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "4959:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 551,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "4965:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 552,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "4969:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 549,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 914,
                      "src": "4949:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4949:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 554,
                  "nodeType": "ExpressionStatement",
                  "src": "4949:28:0"
                }
              ]
            },
            "documentation": {
              "id": 530,
              "nodeType": "StructuredDocumentation",
              "src": "4628:51:0",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 556,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4693:12:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 538,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4764:8:0"
            },
            "parameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 532,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4714:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "4706:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 534,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4728:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "4720:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4720:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 536,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4740:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "4732:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4732:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4705:43:0"
            },
            "returnParameters": {
              "id": 539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4773:0:0"
            },
            "scope": 1014,
            "src": "4684:300:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1355
            ],
            "body": {
              "id": 574,
              "nodeType": "Block",
              "src": "5143:56:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 568,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 559,
                        "src": "5170:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 569,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 561,
                        "src": "5176:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 570,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 563,
                        "src": "5180:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5189:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 567,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        575,
                        605
                      ],
                      "referencedDeclaration": 605,
                      "src": "5153:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5153:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 573,
                  "nodeType": "ExpressionStatement",
                  "src": "5153:39:0"
                }
              ]
            },
            "documentation": {
              "id": 557,
              "nodeType": "StructuredDocumentation",
              "src": "4990:55:0",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 575,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5059:16:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 565,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5134:8:0"
            },
            "parameters": {
              "id": 564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 559,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5084:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 575,
                  "src": "5076:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5076:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 561,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5098:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 575,
                  "src": "5090:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 560,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5090:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 563,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5110:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 575,
                  "src": "5102:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5102:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5075:43:0"
            },
            "returnParameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5143:0:0"
            },
            "scope": 1014,
            "src": "5050:149:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1411
            ],
            "body": {
              "id": 604,
              "nodeType": "Block",
              "src": "5378:169:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 590,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1764,
                              "src": "5415:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5415:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 592,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 582,
                            "src": "5429:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 589,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "5396:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5396:41:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5439:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 588,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5388:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5388:103:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 596,
                  "nodeType": "ExpressionStatement",
                  "src": "5388:103:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 598,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 578,
                        "src": "5515:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 599,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 580,
                        "src": "5521:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 600,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 582,
                        "src": "5525:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 601,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "5534:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 597,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 634,
                      "src": "5501:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5501:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 603,
                  "nodeType": "ExpressionStatement",
                  "src": "5501:39:0"
                }
              ]
            },
            "documentation": {
              "id": 576,
              "nodeType": "StructuredDocumentation",
              "src": "5205:55:0",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 605,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5274:16:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 586,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5369:8:0"
            },
            "parameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 578,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5299:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 605,
                  "src": "5291:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 577,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5291:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 580,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5313:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 605,
                  "src": "5305:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5305:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 582,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5325:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 605,
                  "src": "5317:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 581,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5317:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 584,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5347:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 605,
                  "src": "5334:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 583,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5334:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5290:63:0"
            },
            "returnParameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5378:0:0"
            },
            "scope": 1014,
            "src": "5265:282:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 633,
              "nodeType": "Block",
              "src": "6512:166:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 618,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 608,
                        "src": "6532:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 619,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 610,
                        "src": "6538:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 620,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 612,
                        "src": "6542:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 617,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 914,
                      "src": "6522:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6522:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 622,
                  "nodeType": "ExpressionStatement",
                  "src": "6522:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 625,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 608,
                            "src": "6591:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 626,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "6597:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 627,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 612,
                            "src": "6601:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 628,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 614,
                            "src": "6610:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 624,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1002,
                          "src": "6568:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6568:48:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6618:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 623,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6560:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6560:111:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 632,
                  "nodeType": "ExpressionStatement",
                  "src": "6560:111:0"
                }
              ]
            },
            "documentation": {
              "id": 606,
              "nodeType": "StructuredDocumentation",
              "src": "5553:851:0",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 634,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "6418:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 608,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6440:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "6432:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 607,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6432:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 610,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6454:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "6446:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 609,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6446:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 612,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6466:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "6458:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 611,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6458:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 614,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "6488:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "6475:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 613,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6475:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6431:63:0"
            },
            "returnParameters": {
              "id": 616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6512:0:0"
            },
            "scope": 1014,
            "src": "6409:269:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 651,
              "nodeType": "Block",
              "src": "7052:54:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 642,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "7069:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 644,
                      "indexExpression": {
                        "id": 643,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 637,
                        "src": "7077:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7069:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7097:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7089:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 645,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7089:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7089:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7069:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 641,
                  "id": 650,
                  "nodeType": "Return",
                  "src": "7062:37:0"
                }
              ]
            },
            "documentation": {
              "id": 635,
              "nodeType": "StructuredDocumentation",
              "src": "6684:292:0",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 652,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "6990:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 637,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7006:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "6998:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 636,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6998:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6997:17:0"
            },
            "returnParameters": {
              "id": 641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 640,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "7046:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7046:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7045:6:0"
            },
            "scope": 1014,
            "src": "6981:125:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 692,
              "nodeType": "Block",
              "src": "7363:245:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 664,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 657,
                            "src": "7389:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 663,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 652,
                          "src": "7381:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7381:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7399:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 662,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7373:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7373:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 668,
                  "nodeType": "ExpressionStatement",
                  "src": "7373:73:0"
                },
                {
                  "assignments": [
                    670
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 670,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7464:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 692,
                      "src": "7456:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 669,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7456:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 675,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 673,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 657,
                        "src": "7487:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 671,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1014,
                        "src": "7472:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1014_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7479:7:0",
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 342,
                      "src": "7472:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7472:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7456:39:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 678,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 676,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 655,
                              "src": "7513:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 677,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 670,
                              "src": "7524:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7513:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 680,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 657,
                                  "src": "7545:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 679,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 477,
                                "src": "7533:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7533:20:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 682,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 655,
                              "src": "7557:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7533:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7513:51:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 686,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 670,
                              "src": "7585:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 687,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 655,
                              "src": "7592:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 685,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "7568:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7568:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7513:87:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 690,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7512:89:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 661,
                  "id": 691,
                  "nodeType": "Return",
                  "src": "7505:96:0"
                }
              ]
            },
            "documentation": {
              "id": 653,
              "nodeType": "StructuredDocumentation",
              "src": "7112:147:0",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 693,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "7273:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 655,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7300:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "7292:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7292:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 657,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7317:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "7309:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7309:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7291:34:0"
            },
            "returnParameters": {
              "id": 661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 660,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "7357:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 659,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7357:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7356:6:0"
            },
            "scope": 1014,
            "src": "7264:344:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 707,
              "nodeType": "Block",
              "src": "8003:43:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 702,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 696,
                        "src": "8023:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 703,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 698,
                        "src": "8027:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8036:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 701,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        708,
                        737
                      ],
                      "referencedDeclaration": 737,
                      "src": "8013:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8013:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 706,
                  "nodeType": "ExpressionStatement",
                  "src": "8013:26:0"
                }
              ]
            },
            "documentation": {
              "id": 694,
              "nodeType": "StructuredDocumentation",
              "src": "7614:319:0",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 708,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "7947:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 696,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7965:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 708,
                  "src": "7957:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 695,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7957:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 698,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7977:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 708,
                  "src": "7969:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7969:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7956:29:0"
            },
            "returnParameters": {
              "id": 700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8003:0:0"
            },
            "scope": 1014,
            "src": "7938:108:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 736,
              "nodeType": "Block",
              "src": "8352:162:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 719,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 711,
                        "src": "8368:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 720,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 713,
                        "src": "8372:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 718,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 794,
                      "src": "8362:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8362:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 722,
                  "nodeType": "ExpressionStatement",
                  "src": "8362:18:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 727,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8429:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 726,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8421:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 725,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8421:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8421:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 729,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 711,
                            "src": "8433:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 730,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 713,
                            "src": "8437:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 731,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 715,
                            "src": "8446:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 724,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1002,
                          "src": "8398:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8398:54:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8454:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 723,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8390:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8390:117:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 735,
                  "nodeType": "ExpressionStatement",
                  "src": "8390:117:0"
                }
              ]
            },
            "documentation": {
              "id": 709,
              "nodeType": "StructuredDocumentation",
              "src": "8052:210:0",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 737,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8276:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 711,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8294:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 737,
                  "src": "8286:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8286:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 713,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8306:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 737,
                  "src": "8298:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8298:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 715,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8328:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 737,
                  "src": "8315:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 714,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8315:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8285:49:0"
            },
            "returnParameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8352:0:0"
            },
            "scope": 1014,
            "src": "8267:247:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 793,
              "nodeType": "Block",
              "src": "8897:311:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 746,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 740,
                          "src": "8915:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8929:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8921:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 747,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8921:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8921:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8915:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8933:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 745,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8907:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8907:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 754,
                  "nodeType": "ExpressionStatement",
                  "src": "8907:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8986:17:0",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 757,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 742,
                              "src": "8995:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 756,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 652,
                            "src": "8987:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8987:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9005:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 755,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8978:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8978:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 762,
                  "nodeType": "ExpressionStatement",
                  "src": "8978:58:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9076:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9068:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 764,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9068:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9068:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 768,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 740,
                        "src": "9080:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 769,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 742,
                        "src": "9084:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 763,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1013,
                      "src": "9047:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9047:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 771,
                  "nodeType": "ExpressionStatement",
                  "src": "9047:45:0"
                },
                {
                  "expression": {
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 772,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "9103:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 774,
                      "indexExpression": {
                        "id": 773,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 740,
                        "src": "9113:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9103:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9120:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9103:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 777,
                  "nodeType": "ExpressionStatement",
                  "src": "9103:18:0"
                },
                {
                  "expression": {
                    "id": 782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 778,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "9131:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 780,
                      "indexExpression": {
                        "id": 779,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 742,
                        "src": "9139:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9131:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 781,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 740,
                      "src": "9150:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9131:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 783,
                  "nodeType": "ExpressionStatement",
                  "src": "9131:21:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9185:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9177:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 785,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9177:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9177:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 789,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 740,
                        "src": "9189:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 790,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 742,
                        "src": "9193:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 784,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1311,
                      "src": "9168:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9168:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 792,
                  "nodeType": "EmitStatement",
                  "src": "9163:38:0"
                }
              ]
            },
            "documentation": {
              "id": 738,
              "nodeType": "StructuredDocumentation",
              "src": "8520:311:0",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 794,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8845:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 740,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8859:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "8851:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8851:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 742,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8871:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "8863:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8863:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8850:29:0"
            },
            "returnParameters": {
              "id": 744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8897:0:0"
            },
            "scope": 1014,
            "src": "8836:372:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 844,
              "nodeType": "Block",
              "src": "9474:299:0",
              "statements": [
                {
                  "assignments": [
                    801
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 801,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "9492:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 844,
                      "src": "9484:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 800,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9484:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 806,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 804,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 797,
                        "src": "9515:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 802,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1014,
                        "src": "9500:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1014_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9507:7:0",
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 342,
                      "src": "9500:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9500:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9484:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 808,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 801,
                        "src": "9555:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9570:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9562:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 809,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9562:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9562:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 813,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 797,
                        "src": "9574:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 807,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1013,
                      "src": "9534:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9534:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 815,
                  "nodeType": "ExpressionStatement",
                  "src": "9534:48:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9637:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9629:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 817,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9629:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9629:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 821,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 797,
                        "src": "9641:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 816,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 938,
                      "src": "9620:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9620:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 823,
                  "nodeType": "ExpressionStatement",
                  "src": "9620:29:0"
                },
                {
                  "expression": {
                    "id": 828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 824,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "9660:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 826,
                      "indexExpression": {
                        "id": 825,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 801,
                        "src": "9670:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9660:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9680:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9660:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 829,
                  "nodeType": "ExpressionStatement",
                  "src": "9660:21:0"
                },
                {
                  "expression": {
                    "id": 833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9691:23:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 830,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "9698:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 832,
                      "indexExpression": {
                        "id": 831,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 797,
                        "src": "9706:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9698:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 834,
                  "nodeType": "ExpressionStatement",
                  "src": "9691:23:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 836,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 801,
                        "src": "9739:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9754:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9746:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 837,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9746:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9746:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 841,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 797,
                        "src": "9758:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 835,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1311,
                      "src": "9730:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9730:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 843,
                  "nodeType": "EmitStatement",
                  "src": "9725:41:0"
                }
              ]
            },
            "documentation": {
              "id": 795,
              "nodeType": "StructuredDocumentation",
              "src": "9214:206:0",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 845,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9434:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 797,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9448:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 845,
                  "src": "9440:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9440:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9439:17:0"
            },
            "returnParameters": {
              "id": 799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9474:0:0"
            },
            "scope": 1014,
            "src": "9425:348:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 913,
              "nodeType": "Block",
              "src": "10176:451:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 858,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 852,
                              "src": "10209:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 856,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1014,
                              "src": "10194:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$1014_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10201:7:0",
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 342,
                            "src": "10194:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10194:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 860,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 848,
                          "src": "10221:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10194:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
                        "id": 862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10227:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        },
                        "value": "ERC721: transfer of token that is not own"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        }
                      ],
                      "id": 855,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10186:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10186:85:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 864,
                  "nodeType": "ExpressionStatement",
                  "src": "10186:85:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 866,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 850,
                          "src": "10289:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10303:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10295:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 867,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10295:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10295:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10289:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10307:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 865,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10281:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10281:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 874,
                  "nodeType": "ExpressionStatement",
                  "src": "10281:65:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 876,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 848,
                        "src": "10378:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 877,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 850,
                        "src": "10384:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 878,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 852,
                        "src": "10388:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 875,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1013,
                      "src": "10357:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10357:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 880,
                  "nodeType": "ExpressionStatement",
                  "src": "10357:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10475:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10467:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 882,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10467:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10467:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 886,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 852,
                        "src": "10479:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 881,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 938,
                      "src": "10458:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10458:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 888,
                  "nodeType": "ExpressionStatement",
                  "src": "10458:29:0"
                },
                {
                  "expression": {
                    "id": 893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 889,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "10498:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 891,
                      "indexExpression": {
                        "id": 890,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 848,
                        "src": "10508:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10498:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10517:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10498:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 894,
                  "nodeType": "ExpressionStatement",
                  "src": "10498:20:0"
                },
                {
                  "expression": {
                    "id": 899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 895,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "10528:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 897,
                      "indexExpression": {
                        "id": 896,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 850,
                        "src": "10538:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10528:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10545:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10528:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 900,
                  "nodeType": "ExpressionStatement",
                  "src": "10528:18:0"
                },
                {
                  "expression": {
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 901,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "10556:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 903,
                      "indexExpression": {
                        "id": 902,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 852,
                        "src": "10564:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10556:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 904,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 850,
                      "src": "10575:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10556:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 906,
                  "nodeType": "ExpressionStatement",
                  "src": "10556:21:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 908,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 848,
                        "src": "10602:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 909,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 850,
                        "src": "10608:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 910,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 852,
                        "src": "10612:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 907,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1311,
                      "src": "10593:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10593:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 912,
                  "nodeType": "EmitStatement",
                  "src": "10588:32:0"
                }
              ]
            },
            "documentation": {
              "id": 846,
              "nodeType": "StructuredDocumentation",
              "src": "9779:313:0",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 914,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "10106:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 848,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10124:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "10116:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10116:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 850,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10138:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "10130:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 849,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10130:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 852,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10150:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "10142:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 851,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10142:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10115:43:0"
            },
            "returnParameters": {
              "id": 854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10176:0:0"
            },
            "scope": 1014,
            "src": "10097:530:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 937,
              "nodeType": "Block",
              "src": "10802:107:0",
              "statements": [
                {
                  "expression": {
                    "id": 926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 922,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "10812:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 924,
                      "indexExpression": {
                        "id": 923,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 919,
                        "src": "10828:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10812:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 925,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 917,
                      "src": "10839:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10812:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 927,
                  "nodeType": "ExpressionStatement",
                  "src": "10812:29:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 931,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 919,
                            "src": "10880:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 929,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1014,
                            "src": "10865:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$1014_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10872:7:0",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 342,
                          "src": "10865:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10865:23:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 933,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 917,
                        "src": "10890:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 934,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 919,
                        "src": "10894:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 928,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1320,
                      "src": "10856:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10856:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 936,
                  "nodeType": "EmitStatement",
                  "src": "10851:51:0"
                }
              ]
            },
            "documentation": {
              "id": 915,
              "nodeType": "StructuredDocumentation",
              "src": "10633:100:0",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 938,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "10747:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 917,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10764:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 938,
                  "src": "10756:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 916,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10756:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 919,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10776:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 938,
                  "src": "10768:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10768:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10755:29:0"
            },
            "returnParameters": {
              "id": 921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10802:0:0"
            },
            "scope": 1014,
            "src": "10738:171:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1001,
              "nodeType": "Block",
              "src": "11592:694:0",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 952,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 943,
                        "src": "11606:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11609:10:0",
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1477,
                      "src": "11606:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11606:15:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 999,
                    "nodeType": "Block",
                    "src": "12244:36:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12265:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 951,
                        "id": 998,
                        "nodeType": "Return",
                        "src": "12258:11:0"
                      }
                    ]
                  },
                  "id": 1000,
                  "nodeType": "IfStatement",
                  "src": "11602:678:0",
                  "trueBody": {
                    "id": 996,
                    "nodeType": "Block",
                    "src": "11623:615:0",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 976,
                              "nodeType": "Block",
                              "src": "11738:95:0",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 974,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 968,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 966,
                                      "src": "11763:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 970,
                                              "name": "to",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 943,
                                              "src": "11789:2:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 969,
                                            "name": "IERC721Receiver",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1430,
                                            "src": "11773:15:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1430_$",
                                              "typeString": "type(contract IERC721Receiver)"
                                            }
                                          },
                                          "id": 971,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "11773:19:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC721Receiver_$1430",
                                            "typeString": "contract IERC721Receiver"
                                          }
                                        },
                                        "id": 972,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "11793:16:0",
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1429,
                                        "src": "11773:36:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                                        }
                                      },
                                      "id": 973,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "11810:8:0",
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "11773:45:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "11763:55:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 951,
                                  "id": 975,
                                  "nodeType": "Return",
                                  "src": "11756:62:0"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 977,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 967,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 966,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "11730:6:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 977,
                                  "src": "11723:13:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 965,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11723:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "11722:15:0"
                            },
                            "src": "11714:119:0"
                          },
                          {
                            "block": {
                              "id": 993,
                              "nodeType": "Block",
                              "src": "11862:366:0",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 984,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 981,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 979,
                                        "src": "11884:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 982,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "11891:6:0",
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "11884:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 983,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11901:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "11884:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 991,
                                    "nodeType": "Block",
                                    "src": "12011:203:0",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nativeSrc": "12110:86:0",
                                          "nodeType": "YulBlock",
                                          "src": "12110:86:0",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nativeSrc": "12147:2:0",
                                                        "nodeType": "YulLiteral",
                                                        "src": "12147:2:0",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nativeSrc": "12151:6:0",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12151:6:0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "12143:3:0",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12143:3:0"
                                                    },
                                                    "nativeSrc": "12143:15:0",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12143:15:0"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nativeSrc": "12166:6:0",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12166:6:0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nativeSrc": "12160:5:0",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12160:5:0"
                                                    },
                                                    "nativeSrc": "12160:13:0",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12160:13:0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nativeSrc": "12136:6:0",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12136:6:0"
                                                },
                                                "nativeSrc": "12136:38:0",
                                                "nodeType": "YulFunctionCall",
                                                "src": "12136:38:0"
                                              },
                                              "nativeSrc": "12136:38:0",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "12136:38:0"
                                            }
                                          ]
                                        },
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 979,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12151:6:0",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 979,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12166:6:0",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 990,
                                        "nodeType": "InlineAssembly",
                                        "src": "12101:95:0"
                                      }
                                    ]
                                  },
                                  "id": 992,
                                  "nodeType": "IfStatement",
                                  "src": "11880:334:0",
                                  "trueBody": {
                                    "id": 989,
                                    "nodeType": "Block",
                                    "src": "11904:101:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 986,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "11933:52:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 985,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "11926:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 987,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "11926:60:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 988,
                                        "nodeType": "ExpressionStatement",
                                        "src": "11926:60:0"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 994,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 980,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 979,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "11854:6:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 994,
                                  "src": "11841:19:0",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 978,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11841:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "11840:21:0"
                            },
                            "src": "11834:394:0"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 959,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1764,
                                "src": "11678:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11678:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 961,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 941,
                              "src": "11692:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 962,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 945,
                              "src": "11698:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 963,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 947,
                              "src": "11707:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 956,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 943,
                                  "src": "11657:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 955,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1430,
                                "src": "11641:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1430_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11641:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$1430",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11661:16:0",
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1429,
                            "src": "11641:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11641:72:0",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 995,
                        "nodeType": "TryStatement",
                        "src": "11637:591:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 939,
              "nodeType": "StructuredDocumentation",
              "src": "10915:542:0",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 1002,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "11471:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 941,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11502:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "11494:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11494:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 943,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11516:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "11508:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11508:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 945,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11528:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "11520:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11520:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 947,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "11550:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "11537:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 946,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11537:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11493:63:0"
            },
            "returnParameters": {
              "id": 951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 950,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "11582:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 949,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11582:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11581:6:0"
            },
            "scope": 1014,
            "src": "11462:824:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1012,
              "nodeType": "Block",
              "src": "12972:3:0",
              "statements": []
            },
            "documentation": {
              "id": 1003,
              "nodeType": "StructuredDocumentation",
              "src": "12292:585:0",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 1013,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "12891:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1005,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12920:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1013,
                  "src": "12912:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1004,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12912:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1007,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12934:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1013,
                  "src": "12926:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1006,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12926:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1009,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12946:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1013,
                  "src": "12938:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1008,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12938:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12911:43:0"
            },
            "returnParameters": {
              "id": 1011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12972:0:0"
            },
            "scope": 1014,
            "src": "12882:93:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1015,
        "src": "554:12423:0",
        "usedErrors": [],
        "usedEvents": [
          1311,
          1320,
          1329
        ]
      }
    ],
    "src": "33:12945:0"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516114dd3803806114dd83398101604081905261002f91610109565b600061003b83826101fb565b50600161004882826101fb565b5050506102b9565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261007757600080fd5b81516001600160401b0381111561009057610090610050565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100be576100be610050565b6040528181528382016020018510156100d657600080fd5b60005b828110156100f5576020818601810151838301820152016100d9565b506000918101602001919091529392505050565b6000806040838503121561011c57600080fd5b82516001600160401b0381111561013257600080fd5b61013e85828601610066565b602085015190935090506001600160401b0381111561015c57600080fd5b61016885828601610066565b9150509250929050565b600181811c9082168061018657607f821691505b6020821081036101a657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101f657806000526020600020601f840160051c810160208510156101d35750805b601f840160051c820191505b818110156101f357600081556001016101df565b50505b505050565b81516001600160401b0381111561021457610214610050565b610228816102228454610172565b846101ac565b6020601f82116001811461025c57600083156102445750848201515b600019600385901b1c1916600184901b1784556101f3565b600084815260208120601f198516915b8281101561028c578785015182556020948501946001909201910161026c565b50848210156102aa5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b611215806102c86000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d30565b6101ff565b60405190151581526020015b60405180910390f35b610104610251565b6040516100f39190610d9d565b61012461011f366004610db0565b6102e3565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610de5565b61037d565b005b61014f61015f366004610e0f565b610492565b61014f610172366004610e0f565b6104c3565b610124610185366004610db0565b6104de565b61019d610198366004610e4c565b610555565b6040519081526020016100f3565b6101046105dc565b61014f6101c1366004610e67565b6105eb565b61014f6101d4366004610eb9565b6106af565b6101046101e7366004610db0565b6106e7565b6100e76101fa366004610f9d565b6107cf565b60006001600160e01b031982166380ac58cd60e01b148061023057506001600160e01b03198216635b5e139f60e01b145b8061024b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461026090610fd0565b80601f016020809104026020016040519081016040528092919081815260200182805461028c90610fd0565b80156102d95780601f106102ae576101008083540402835291602001916102d9565b820191906000526020600020905b8154815290600101906020018083116102bc57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166103615760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610388826104de565b9050806001600160a01b0316836001600160a01b0316036103f55760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610358565b336001600160a01b0382161480610411575061041181336107cf565b6104835760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610358565b61048d83836107fd565b505050565b61049c338261086b565b6104b85760405162461bcd60e51b81526004016103589061100a565b61048d838383610942565b61048d838383604051806020016040528060008152506106af565b6000818152600260205260408120546001600160a01b03168061024b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610358565b60006001600160a01b0382166105c05760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610358565b506001600160a01b031660009081526003602052604090205490565b60606001805461026090610fd0565b336001600160a01b038316036106435760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610358565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106b9338361086b565b6106d55760405162461bcd60e51b81526004016103589061100a565b6106e184848484610ae2565b50505050565b6000818152600260205260409020546060906001600160a01b03166107665760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610358565b600061077d60408051602081019091526000815290565b9050600081511161079d57604051806020016040528060008152506107c8565b806107a784610b15565b6040516020016107b892919061105b565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610832826104de565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166108e45760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610358565b60006108ef836104de565b9050806001600160a01b0316846001600160a01b0316148061092a5750836001600160a01b031661091f846102e3565b6001600160a01b0316145b8061093a575061093a81856107cf565b949350505050565b826001600160a01b0316610955826104de565b6001600160a01b0316146109bd5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610358565b6001600160a01b038216610a1f5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610358565b610a2a6000826107fd565b6001600160a01b0383166000908152600360205260408120805460019290610a539084906110a0565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a819084906110b3565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610aed848484610942565b610af984848484610c16565b6106e15760405162461bcd60e51b8152600401610358906110c6565b606081600003610b3c5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b665780610b5081611118565b9150610b5f9050600a83611147565b9150610b40565b60008167ffffffffffffffff811115610b8157610b81610ea3565b6040519080825280601f01601f191660200182016040528015610bab576020820181803683370190505b5090505b841561093a57610bc06001836110a0565b9150610bcd600a8661115b565b610bd89060306110b3565b60f81b818381518110610bed57610bed61116f565b60200101906001600160f81b031916908160001a905350610c0f600a86611147565b9450610baf565b60006001600160a01b0384163b15610d0c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c5a903390899088908890600401611185565b6020604051808303816000875af1925050508015610c95575060408051601f3d908101601f19168201909252610c92918101906111c2565b60015b610cf2573d808015610cc3576040519150601f19603f3d011682016040523d82523d6000602084013e610cc8565b606091505b508051600003610cea5760405162461bcd60e51b8152600401610358906110c6565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061093a565b506001949350505050565b6001600160e01b031981168114610d2d57600080fd5b50565b600060208284031215610d4257600080fd5b81356107c881610d17565b60005b83811015610d68578181015183820152602001610d50565b50506000910152565b60008151808452610d89816020860160208601610d4d565b601f01601f19169290920160200192915050565b6020815260006107c86020830184610d71565b600060208284031215610dc257600080fd5b5035919050565b80356001600160a01b0381168114610de057600080fd5b919050565b60008060408385031215610df857600080fd5b610e0183610dc9565b946020939093013593505050565b600080600060608486031215610e2457600080fd5b610e2d84610dc9565b9250610e3b60208501610dc9565b929592945050506040919091013590565b600060208284031215610e5e57600080fd5b6107c882610dc9565b60008060408385031215610e7a57600080fd5b610e8383610dc9565b915060208301358015158114610e9857600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610ecf57600080fd5b610ed885610dc9565b9350610ee660208601610dc9565b925060408501359150606085013567ffffffffffffffff811115610f0957600080fd5b8501601f81018713610f1a57600080fd5b803567ffffffffffffffff811115610f3457610f34610ea3565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610f6357610f63610ea3565b604052818152828201602001891015610f7b57600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b60008060408385031215610fb057600080fd5b610fb983610dc9565b9150610fc760208401610dc9565b90509250929050565b600181811c90821680610fe457607f821691505b60208210810361100457634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000835161106d818460208801610d4d565b835190830190611081818360208801610d4d565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561024b5761024b61108a565b8082018082111561024b5761024b61108a565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006001820161112a5761112a61108a565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261115657611156611131565b500490565b60008261116a5761116a611131565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111b890830184610d71565b9695505050505050565b6000602082840312156111d457600080fd5b81516107c881610d1756fea26469706673582212208145d76d52b953917ac997dd26c3d4d95b98f34ebf0dbce42e59da7d3a7ae71764736f6c634300081a0033",
  "bytecodeSha1": "c25b9635b34daf38a4b32fce12dfa4854bdcdcc1",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.26+commit.8a97fa7a"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "0": {
        "ERC721._checkOnERC721Received": {
          "60": [
            11884,
            11902,
            false
          ]
        },
        "ERC721._safeTransfer": {
          "59": [
            6568,
            6616,
            true
          ]
        },
        "ERC721._transfer": {
          "57": [
            10194,
            10225,
            true
          ],
          "58": [
            10289,
            10305,
            true
          ]
        },
        "ERC721.approve": {
          "49": [
            3508,
            3519,
            true
          ],
          "50": [
            3576,
            3597,
            true
          ],
          "51": [
            3601,
            3638,
            true
          ]
        },
        "ERC721.balanceOf": {
          "53": [
            1948,
            1967,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "55": [
            5396,
            5437,
            true
          ]
        },
        "ERC721.setApprovalForAll": {
          "54": [
            4206,
            4230,
            true
          ]
        },
        "ERC721.tokenURI": {
          "56": [
            2974,
            2999,
            true
          ]
        },
        "ERC721.transferFrom": {
          "52": [
            4843,
            4884,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {
        "Strings.toString": {
          "61": [
            544,
            554,
            false
          ]
        }
      },
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "ERC721._approve": {
          "26": [
            10812,
            10841
          ],
          "27": [
            10851,
            10902
          ]
        },
        "ERC721._baseURI": {
          "23": [
            3298,
            3307
          ]
        },
        "ERC721._checkOnERC721Received": {
          "46": [
            11926,
            11986
          ],
          "47": [
            11756,
            11818
          ],
          "48": [
            12258,
            12269
          ]
        },
        "ERC721._exists": {
          "3": [
            7062,
            7099
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "28": [
            7373,
            7446
          ],
          "29": [
            7505,
            7601
          ]
        },
        "ERC721._safeTransfer": {
          "37": [
            6522,
            6550
          ],
          "38": [
            6560,
            6671
          ]
        },
        "ERC721._transfer": {
          "30": [
            10186,
            10271
          ],
          "31": [
            10281,
            10346
          ],
          "32": [
            10458,
            10487
          ],
          "33": [
            10498,
            10518
          ],
          "34": [
            10528,
            10546
          ],
          "35": [
            10556,
            10577
          ],
          "36": [
            10588,
            10620
          ]
        },
        "ERC721.approve": {
          "6": [
            3500,
            3557
          ],
          "8": [
            3568,
            3720
          ],
          "9": [
            3731,
            3752
          ]
        },
        "ERC721.balanceOf": {
          "14": [
            1940,
            2014
          ],
          "15": [
            2024,
            2047
          ]
        },
        "ERC721.getApproved": {
          "4": [
            3915,
            3988
          ],
          "5": [
            3999,
            4030
          ]
        },
        "ERC721.isApprovedForAll": {
          "25": [
            4573,
            4615
          ]
        },
        "ERC721.name": {
          "2": [
            2487,
            2499
          ]
        },
        "ERC721.ownerOf": {
          "13": [
            2244,
            2317
          ]
        },
        "ERC721.safeTransferFrom": {
          "12": [
            5153,
            5192
          ],
          "20": [
            5388,
            5491
          ],
          "21": [
            5501,
            5540
          ]
        },
        "ERC721.setApprovalForAll": {
          "17": [
            4198,
            4260
          ],
          "18": [
            4271,
            4324
          ],
          "19": [
            4334,
            4387
          ]
        },
        "ERC721.supportsInterface": {
          "0": [
            1620,
            1783
          ]
        },
        "ERC721.symbol": {
          "16": [
            2651,
            2665
          ]
        },
        "ERC721.tokenURI": {
          "22": [
            2836,
            2912
          ],
          "24": [
            2967,
            3084
          ]
        },
        "ERC721.transferFrom": {
          "10": [
            4835,
            4938
          ],
          "11": [
            4949,
            4977
          ]
        }
      },
      "1": {},
      "2": {},
      "4": {},
      "5": {
        "Address.isContract": {
          "45": [
            1109,
            1124
          ]
        }
      },
      "6": {
        "Context._msgSender": {
          "7": [
            658,
            675
          ]
        }
      },
      "7": {
        "Strings.toString": {
          "39": [
            570,
            580
          ],
          "40": [
            686,
            694
          ],
          "41": [
            708,
            718
          ],
          "42": [
            820,
            831
          ],
          "43": [
            845,
            901
          ],
          "44": [
            915,
            926
          ]
        }
      },
      "8": {
        "ERC165.supportsInterface": {
          "1": [
            864,
            911
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Strings"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "554:12423:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1502:288;;;;;;:::i;:::-;;:::i;:::-;;;565:14:13;;558:22;540:41;;528:2;513:18;1502:288:0;;;;;;;;2408:98;;;:::i;:::-;;;;;;;:::i;3820:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1743:32:13;;;1725:51;;1713:2;1698:18;3820:217:0;1579:203:13;3371:388:0;;;;;;:::i;:::-;;:::i;:::-;;4684:300;;;;;;:::i;:::-;;:::i;5050:149::-;;;;;;:::i;:::-;;:::i;2111:235::-;;;;;;:::i;:::-;;:::i;1849:205::-;;;;;;:::i;:::-;;:::i;:::-;;;2986:25:13;;;2974:2;2959:18;1849:205:0;2840:177:13;2570:102:0;;;:::i;4104:290::-;;;;;;:::i;:::-;;:::i;5265:282::-;;;;;;:::i;:::-;;:::i;2738:353::-;;;;;;:::i;:::-;;:::i;4460:162::-;;;;;;:::i;:::-;;:::i;1502:288::-;1604:4;-1:-1:-1;;;;;;1627:40:0;;-1:-1:-1;;;1627:40:0;;:104;;-1:-1:-1;;;;;;;1683:48:0;;-1:-1:-1;;;1683:48:0;1627:104;:156;;;-1:-1:-1;;;;;;;;;;871:40:8;;;1747:36:0;1620:163;1502:288;-1:-1:-1;;1502:288:0:o;2408:98::-;2462:13;2494:5;2487:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2408:98;:::o;3820:217::-;3896:7;7069:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7069:16:0;3915:73;;;;-1:-1:-1;;;3915:73:0;;5570:2:13;3915:73:0;;;5552:21:13;5609:2;5589:18;;;5582:30;5648:34;5628:18;;;5621:62;-1:-1:-1;;;5699:18:13;;;5692:42;5751:19;;3915:73:0;;;;;;;;;-1:-1:-1;4006:24:0;;;;:15;:24;;;;;;-1:-1:-1;;;;;4006:24:0;;3820:217::o;3371:388::-;3451:13;3467:23;3482:7;3467:14;:23::i;:::-;3451:39;;3514:5;-1:-1:-1;;;;;3508:11:0;:2;-1:-1:-1;;;;;3508:11:0;;3500:57;;;;-1:-1:-1;;;3500:57:0;;5983:2:13;3500:57:0;;;5965:21:13;6022:2;6002:18;;;5995:30;6061:34;6041:18;;;6034:62;-1:-1:-1;;;6112:18:13;;;6105:31;6153:19;;3500:57:0;5781:397:13;3500:57:0;665:10:6;-1:-1:-1;;;;;3576:21:0;;;;:62;;-1:-1:-1;3601:37:0;3618:5;665:10:6;4460:162:0;:::i;3601:37::-;3568:152;;;;-1:-1:-1;;;3568:152:0;;6385:2:13;3568:152:0;;;6367:21:13;6424:2;6404:18;;;6397:30;6463:34;6443:18;;;6436:62;6534:26;6514:18;;;6507:54;6578:19;;3568:152:0;6183:420:13;3568:152:0;3731:21;3740:2;3744:7;3731:8;:21::i;:::-;3441:318;3371:388;;:::o;4684:300::-;4843:41;665:10:6;4876:7:0;4843:18;:41::i;:::-;4835:103;;;;-1:-1:-1;;;4835:103:0;;;;;;;:::i;:::-;4949:28;4959:4;4965:2;4969:7;4949:9;:28::i;5050:149::-;5153:39;5170:4;5176:2;5180:7;5153:39;;;;;;;;;;;;:16;:39::i;2111:235::-;2183:7;2218:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2218:16:0;;2244:73;;;;-1:-1:-1;;;2244:73:0;;7228:2:13;2244:73:0;;;7210:21:13;7267:2;7247:18;;;7240:30;7306:34;7286:18;;;7279:62;-1:-1:-1;;;7357:18:13;;;7350:39;7406:19;;2244:73:0;7026:405:13;1849:205:0;1921:7;-1:-1:-1;;;;;1948:19:0;;1940:74;;;;-1:-1:-1;;;1940:74:0;;7638:2:13;1940:74:0;;;7620:21:13;7677:2;7657:18;;;7650:30;7716:34;7696:18;;;7689:62;-1:-1:-1;;;7767:18:13;;;7760:40;7817:19;;1940:74:0;7436:406:13;1940:74:0;-1:-1:-1;;;;;;2031:16:0;;;;;:9;:16;;;;;;;1849:205::o;2570:102::-;2626:13;2658:7;2651:14;;;;;:::i;4104:290::-;665:10:6;-1:-1:-1;;;;;4206:24:0;;;4198:62;;;;-1:-1:-1;;;4198:62:0;;8049:2:13;4198:62:0;;;8031:21:13;8088:2;8068:18;;;8061:30;8127:27;8107:18;;;8100:55;8172:18;;4198:62:0;7847:349:13;4198:62:0;665:10:6;4271:32:0;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;4271:42:0;;;;;;;;;;;;:53;;-1:-1:-1;;4271:53:0;;;;;;;;;;4339:48;;540:41:13;;;4271:42:0;;665:10:6;4339:48:0;;513:18:13;4339:48:0;;;;;;;4104:290;;:::o;5265:282::-;5396:41;665:10:6;5429:7:0;5396:18;:41::i;:::-;5388:103;;;;-1:-1:-1;;;5388:103:0;;;;;;;:::i;:::-;5501:39;5515:4;5521:2;5525:7;5534:5;5501:13;:39::i;:::-;5265:282;;;;:::o;2738:353::-;7046:4;7069:16;;;:7;:16;;;;;;2811:13;;-1:-1:-1;;;;;7069:16:0;2836:76;;;;-1:-1:-1;;;2836:76:0;;8403:2:13;2836:76:0;;;8385:21:13;8442:2;8422:18;;;8415:30;8481:34;8461:18;;;8454:62;-1:-1:-1;;;8532:18:13;;;8525:45;8587:19;;2836:76:0;8201:411:13;2836:76:0;2923:21;2947:10;3298:9;;;;;;;;;-1:-1:-1;3298:9:0;;;3222:92;2947:10;2923:34;;2998:1;2980:7;2974:21;:25;:110;;;;;;;;;;;;;;;;;3038:7;3047:18;:7;:16;:18::i;:::-;3021:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2974:110;2967:117;2738:353;-1:-1:-1;;;2738:353:0:o;4460:162::-;-1:-1:-1;;;;;4580:25:0;;;4557:4;4580:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4460:162::o;10738:171::-;10812:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;10812:29:0;-1:-1:-1;;;;;10812:29:0;;;;;;;;:24;;10865:23;10812:24;10865:14;:23::i;:::-;-1:-1:-1;;;;;10856:46:0;;;;;;;;;;;10738:171;;:::o;7264:344::-;7357:4;7069:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7069:16:0;7373:73;;;;-1:-1:-1;;;7373:73:0;;9320:2:13;7373:73:0;;;9302:21:13;9359:2;9339:18;;;9332:30;9398:34;9378:18;;;9371:62;-1:-1:-1;;;9449:18:13;;;9442:42;9501:19;;7373:73:0;9118:408:13;7373:73:0;7456:13;7472:23;7487:7;7472:14;:23::i;:::-;7456:39;;7524:5;-1:-1:-1;;;;;7513:16:0;:7;-1:-1:-1;;;;;7513:16:0;;:51;;;;7557:7;-1:-1:-1;;;;;7533:31:0;:20;7545:7;7533:11;:20::i;:::-;-1:-1:-1;;;;;7533:31:0;;7513:51;:87;;;;7568:32;7585:5;7592:7;7568:16;:32::i;:::-;7505:96;7264:344;-1:-1:-1;;;;7264:344:0:o;10097:530::-;10221:4;-1:-1:-1;;;;;10194:31:0;:23;10209:7;10194:14;:23::i;:::-;-1:-1:-1;;;;;10194:31:0;;10186:85;;;;-1:-1:-1;;;10186:85:0;;9733:2:13;10186:85:0;;;9715:21:13;9772:2;9752:18;;;9745:30;9811:34;9791:18;;;9784:62;-1:-1:-1;;;9862:18:13;;;9855:39;9911:19;;10186:85:0;9531:405:13;10186:85:0;-1:-1:-1;;;;;10289:16:0;;10281:65;;;;-1:-1:-1;;;10281:65:0;;10143:2:13;10281:65:0;;;10125:21:13;10182:2;10162:18;;;10155:30;10221:34;10201:18;;;10194:62;-1:-1:-1;;;10272:18:13;;;10265:34;10316:19;;10281:65:0;9941:400:13;10281:65:0;10458:29;10475:1;10479:7;10458:8;:29::i;:::-;-1:-1:-1;;;;;10498:15:0;;;;;;:9;:15;;;;;:20;;10517:1;;10498:15;:20;;10517:1;;10498:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10528:13:0;;;;;;:9;:13;;;;;:18;;10545:1;;10528:13;:18;;10545:1;;10528:18;:::i;:::-;;;;-1:-1:-1;;10556:16:0;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10556:21:0;-1:-1:-1;;;;;10556:21:0;;;;;;;;;10593:27;;10556:16;;10593:27;;;;;;;10097:530;;;:::o;6409:269::-;6522:28;6532:4;6538:2;6542:7;6522:9;:28::i;:::-;6568:48;6591:4;6597:2;6601:7;6610:5;6568:22;:48::i;:::-;6560:111;;;;-1:-1:-1;;;6560:111:0;;;;;;;:::i;271:703:7:-;327:13;544:5;553:1;544:10;540:51;;-1:-1:-1;;570:10:7;;;;;;;;;;;;-1:-1:-1;;;570:10:7;;;;;271:703::o;540:51::-;615:5;600:12;654:75;661:9;;654:75;;686:8;;;;:::i;:::-;;-1:-1:-1;708:10:7;;-1:-1:-1;716:2:7;708:10;;:::i;:::-;;;654:75;;;738:19;770:6;760:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;760:17:7;;738:39;;787:150;794:10;;787:150;;820:11;830:1;820:11;;:::i;:::-;;-1:-1:-1;888:10:7;896:2;888:5;:10;:::i;:::-;875:24;;:2;:24;:::i;:::-;862:39;;845:6;852;845:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;845:56:7;;;;;;;;-1:-1:-1;915:11:7;924:2;915:11;;:::i;:::-;;;787:150;;11462:824:0;11582:4;-1:-1:-1;;;;;11606:13:0;;1078:20:5;1116:8;11602:678:0;;11641:72;;-1:-1:-1;;;11641:72:0;;-1:-1:-1;;;;;11641:36:0;;;;;:72;;665:10:6;;11692:4:0;;11698:7;;11707:5;;11641:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11641:72:0;;;;;;;;-1:-1:-1;;11641:72:0;;;;;;;;;;;;:::i;:::-;;;11637:591;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11884:6;:13;11901:1;11884:18;11880:334;;11926:60;;-1:-1:-1;;;11926:60:0;;;;;;;:::i;11880:334::-;12166:6;12160:13;12151:6;12147:2;12143:15;12136:38;11637:591;-1:-1:-1;;;;;;11763:55:0;-1:-1:-1;;;11763:55:0;;-1:-1:-1;11756:62:0;;11602:678;-1:-1:-1;12265:4:0;11462:824;;;;;;:::o;14:131:13:-;-1:-1:-1;;;;;;88:32:13;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:13;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:13;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:13:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:226::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1521:23:13;;1348:226;-1:-1:-1;1348:226:13:o;1787:173::-;1855:20;;-1:-1:-1;;;;;1904:31:13;;1894:42;;1884:70;;1950:1;1947;1940:12;1884:70;1787:173;;;:::o;1965:300::-;2033:6;2041;2094:2;2082:9;2073:7;2069:23;2065:32;2062:52;;;2110:1;2107;2100:12;2062:52;2133:29;2152:9;2133:29;:::i;:::-;2123:39;2231:2;2216:18;;;;2203:32;;-1:-1:-1;;;1965:300:13:o;2270:374::-;2347:6;2355;2363;2416:2;2404:9;2395:7;2391:23;2387:32;2384:52;;;2432:1;2429;2422:12;2384:52;2455:29;2474:9;2455:29;:::i;:::-;2445:39;;2503:38;2537:2;2526:9;2522:18;2503:38;:::i;:::-;2270:374;;2493:48;;-1:-1:-1;;;2610:2:13;2595:18;;;;2582:32;;2270:374::o;2649:186::-;2708:6;2761:2;2749:9;2740:7;2736:23;2732:32;2729:52;;;2777:1;2774;2767:12;2729:52;2800:29;2819:9;2800:29;:::i;3022:347::-;3087:6;3095;3148:2;3136:9;3127:7;3123:23;3119:32;3116:52;;;3164:1;3161;3154:12;3116:52;3187:29;3206:9;3187:29;:::i;:::-;3177:39;;3266:2;3255:9;3251:18;3238:32;3313:5;3306:13;3299:21;3292:5;3289:32;3279:60;;3335:1;3332;3325:12;3279:60;3358:5;3348:15;;;3022:347;;;;;:::o;3374:127::-;3435:10;3430:3;3426:20;3423:1;3416:31;3466:4;3463:1;3456:15;3490:4;3487:1;3480:15;3506:1207;3601:6;3609;3617;3625;3678:3;3666:9;3657:7;3653:23;3649:33;3646:53;;;3695:1;3692;3685:12;3646:53;3718:29;3737:9;3718:29;:::i;:::-;3708:39;;3766:38;3800:2;3789:9;3785:18;3766:38;:::i;:::-;3756:48;-1:-1:-1;3873:2:13;3858:18;;3845:32;;-1:-1:-1;3952:2:13;3937:18;;3924:32;3979:18;3968:30;;3965:50;;;4011:1;4008;4001:12;3965:50;4034:22;;4087:4;4079:13;;4075:27;-1:-1:-1;4065:55:13;;4116:1;4113;4106:12;4065:55;4156:2;4143:16;4182:18;4174:6;4171:30;4168:56;;;4204:18;;:::i;:::-;4253:2;4247:9;4345:2;4307:17;;-1:-1:-1;;4303:31:13;;;4336:2;4299:40;4295:54;4283:67;;4380:18;4365:34;;4401:22;;;4362:62;4359:88;;;4427:18;;:::i;:::-;4463:2;4456:22;4487;;;4528:15;;;4545:2;4524:24;4521:37;-1:-1:-1;4518:57:13;;;4571:1;4568;4561:12;4518:57;4627:6;4622:2;4618;4614:11;4609:2;4601:6;4597:15;4584:50;4680:1;4675:2;4666:6;4658;4654:19;4650:28;4643:39;4701:6;4691:16;;;;;3506:1207;;;;;;;:::o;4718:260::-;4786:6;4794;4847:2;4835:9;4826:7;4822:23;4818:32;4815:52;;;4863:1;4860;4853:12;4815:52;4886:29;4905:9;4886:29;:::i;:::-;4876:39;;4934:38;4968:2;4957:9;4953:18;4934:38;:::i;:::-;4924:48;;4718:260;;;;;:::o;4983:380::-;5062:1;5058:12;;;;5105;;;5126:61;;5180:4;5172:6;5168:17;5158:27;;5126:61;5233:2;5225:6;5222:14;5202:18;5199:38;5196:161;;5279:10;5274:3;5270:20;5267:1;5260:31;5314:4;5311:1;5304:15;5342:4;5339:1;5332:15;5196:161;;4983:380;;;:::o;6608:413::-;6810:2;6792:21;;;6849:2;6829:18;;;6822:30;6888:34;6883:2;6868:18;;6861:62;-1:-1:-1;;;6954:2:13;6939:18;;6932:47;7011:3;6996:19;;6608:413::o;8617:496::-;8796:3;8834:6;8828:13;8850:66;8909:6;8904:3;8897:4;8889:6;8885:17;8850:66;:::i;:::-;8979:13;;8938:16;;;;9001:70;8979:13;8938:16;9048:4;9036:17;;9001:70;:::i;:::-;9087:20;;8617:496;-1:-1:-1;;;;8617:496:13:o;10346:127::-;10407:10;10402:3;10398:20;10395:1;10388:31;10438:4;10435:1;10428:15;10462:4;10459:1;10452:15;10478:128;10545:9;;;10566:11;;;10563:37;;;10580:18;;:::i;10611:125::-;10676:9;;;10697:10;;;10694:36;;;10710:18;;:::i;10741:414::-;10943:2;10925:21;;;10982:2;10962:18;;;10955:30;11021:34;11016:2;11001:18;;10994:62;-1:-1:-1;;;11087:2:13;11072:18;;11065:48;11145:3;11130:19;;10741:414::o;11160:135::-;11199:3;11220:17;;;11217:43;;11240:18;;:::i;:::-;-1:-1:-1;11287:1:13;11276:13;;11160:135::o;11300:127::-;11361:10;11356:3;11352:20;11349:1;11342:31;11392:4;11389:1;11382:15;11416:4;11413:1;11406:15;11432:120;11472:1;11498;11488:35;;11503:18;;:::i;:::-;-1:-1:-1;11537:9:13;;11432:120::o;11557:112::-;11589:1;11615;11605:35;;11620:18;;:::i;:::-;-1:-1:-1;11654:9:13;;11557:112::o;11674:127::-;11735:10;11730:3;11726:20;11723:1;11716:31;11766:4;11763:1;11756:15;11790:4;11787:1;11780:15;11806:485;-1:-1:-1;;;;;12037:32:13;;;12019:51;;12106:32;;12101:2;12086:18;;12079:60;12170:2;12155:18;;12148:34;;;12218:3;12213:2;12198:18;;12191:31;;;-1:-1:-1;;12239:46:13;;12265:19;;12257:6;12239:46;:::i;:::-;12231:54;11806:485;-1:-1:-1;;;;;;11806:485:13:o;12296:249::-;12365:6;12418:2;12406:9;12397:7;12393:23;12389:32;12386:52;;;12434:1;12431;12424:12;12386:52;12466:9;12460:16;12485:30;12509:5;12485:30;:::i",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
      },
      "ApprovalForAll(address,address,bool)": {
        "details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `tokenId` token is transferred from `from` to `to`."
      }
    },
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    554,
    12977
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD30 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xD9D JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xDE5 JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xE0F JUMP JUMPDEST PUSH2 0x492 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xE0F JUMP JUMPDEST PUSH2 0x4C3 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE4C JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEB9 JUMP JUMPDEST PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xF9D JUMP JUMPDEST PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x230 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x24B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x260 SWAP1 PUSH2 0xFD0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28C SWAP1 PUSH2 0xFD0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x388 DUP3 PUSH2 0x4DE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x411 JUMPI POP PUSH2 0x411 DUP2 CALLER PUSH2 0x7CF JUMP JUMPDEST PUSH2 0x483 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH2 0x48D DUP4 DUP4 PUSH2 0x7FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x49C CALLER DUP3 PUSH2 0x86B JUMP JUMPDEST PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0x100A JUMP JUMPDEST PUSH2 0x48D DUP4 DUP4 DUP4 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x48D DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x24B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x260 SWAP1 PUSH2 0xFD0 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x643 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x358 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6B9 CALLER DUP4 PUSH2 0x86B JUMP JUMPDEST PUSH2 0x6D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0x100A JUMP JUMPDEST PUSH2 0x6E1 DUP5 DUP5 DUP5 DUP5 PUSH2 0xAE2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x766 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77D PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x79D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7C8 JUMP JUMPDEST DUP1 PUSH2 0x7A7 DUP5 PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7B8 SWAP3 SWAP2 SWAP1 PUSH2 0x105B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x832 DUP3 PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EF DUP4 PUSH2 0x4DE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x92A JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x91F DUP5 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x93A JUMPI POP PUSH2 0x93A DUP2 DUP6 PUSH2 0x7CF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x955 DUP3 PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH2 0xA2A PUSH1 0x0 DUP3 PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xA53 SWAP1 DUP5 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xA81 SWAP1 DUP5 SWAP1 PUSH2 0x10B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xAED DUP5 DUP5 DUP5 PUSH2 0x942 JUMP JUMPDEST PUSH2 0xAF9 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC16 JUMP JUMPDEST PUSH2 0x6E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xB3C JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB66 JUMPI DUP1 PUSH2 0xB50 DUP2 PUSH2 0x1118 JUMP JUMPDEST SWAP2 POP PUSH2 0xB5F SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1147 JUMP JUMPDEST SWAP2 POP PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB81 JUMPI PUSH2 0xB81 PUSH2 0xEA3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBAB JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x93A JUMPI PUSH2 0xBC0 PUSH1 0x1 DUP4 PUSH2 0x10A0 JUMP JUMPDEST SWAP2 POP PUSH2 0xBCD PUSH1 0xA DUP7 PUSH2 0x115B JUMP JUMPDEST PUSH2 0xBD8 SWAP1 PUSH1 0x30 PUSH2 0x10B3 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xBED JUMPI PUSH2 0xBED PUSH2 0x116F JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC0F PUSH1 0xA DUP7 PUSH2 0x1147 JUMP JUMPDEST SWAP5 POP PUSH2 0xBAF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD0C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC5A SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC95 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC92 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xCF2 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCC3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCC8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xCEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0x10C6 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x93A JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7C8 DUP2 PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD68 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD50 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD89 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD4D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x7C8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE01 DUP4 PUSH2 0xDC9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE2D DUP5 PUSH2 0xDC9 JUMP JUMPDEST SWAP3 POP PUSH2 0xE3B PUSH1 0x20 DUP6 ADD PUSH2 0xDC9 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C8 DUP3 PUSH2 0xDC9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE83 DUP4 PUSH2 0xDC9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xECF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED8 DUP6 PUSH2 0xDC9 JUMP JUMPDEST SWAP4 POP PUSH2 0xEE6 PUSH1 0x20 DUP7 ADD PUSH2 0xDC9 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0xF1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF34 JUMPI PUSH2 0xF34 PUSH2 0xEA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xF63 JUMPI PUSH2 0xF63 PUSH2 0xEA3 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP10 LT ISZERO PUSH2 0xF7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFB9 DUP4 PUSH2 0xDC9 JUMP JUMPDEST SWAP2 POP PUSH2 0xFC7 PUSH1 0x20 DUP5 ADD PUSH2 0xDC9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFE4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1004 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x106D DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD4D JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1081 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD4D JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x24B JUMPI PUSH2 0x24B PUSH2 0x108A JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x24B JUMPI PUSH2 0x24B PUSH2 0x108A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x112A JUMPI PUSH2 0x112A PUSH2 0x108A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1156 JUMPI PUSH2 0x1156 PUSH2 0x1131 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x116A JUMPI PUSH2 0x116A PUSH2 0x1131 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11B8 SWAP1 DUP4 ADD DUP5 PUSH2 0xD71 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7C8 DUP2 PUSH2 0xD17 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 GASLIMIT 0xD7 PUSH14 0x52B953917AC997DD26C3D4D95B98 RETURN 0x4E 0xBF 0xD 0xBC 0xE4 0x2E MSIZE 0xDA PUSH30 0x3A7AE71764736F6C634300081A0033000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        554,
        12977
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "GT",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B3"
    },
    "64": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C6"
    },
    "75": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D9"
    },
    "86": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EC"
    },
    "97": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6352211E"
    },
    "109": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x177"
    },
    "113": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18A"
    },
    "124": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AB"
    },
    "135": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "0"
    },
    "139": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "REVERT",
      "path": "0"
    },
    "140": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "141": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "0"
    },
    "142": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1FFC9A7"
    },
    "147": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "0"
    },
    "153": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "158": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFC"
    },
    "162": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x81812FC"
    },
    "169": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111"
    },
    "173": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "174": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "180": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13C"
    },
    "184": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x151"
    },
    "195": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x42842E0E"
    },
    "202": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x164"
    },
    "206": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "208": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "0"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "REVERT",
      "path": "0"
    },
    "212": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "213": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE2"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD30"
    },
    "225": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1502,
        1790
      ],
      "op": "JUMP",
      "path": "0"
    },
    "226": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FF"
    },
    "230": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1502,
        1790
      ],
      "op": "JUMP",
      "path": "0"
    },
    "231": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "232": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "234": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "235": {
      "op": "SWAP1"
    },
    "236": {
      "op": "ISZERO"
    },
    "237": {
      "op": "ISZERO"
    },
    "238": {
      "op": "DUP2"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "244": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "247": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "DUP1",
      "path": "0"
    },
    "248": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "SUB",
      "path": "0"
    },
    "250": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "251": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "RETURN",
      "path": "0"
    },
    "252": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "253": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x104"
    },
    "256": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x251"
    },
    "259": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2408,
        2506
      ],
      "op": "JUMP",
      "path": "0"
    },
    "260": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "261": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "264": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3"
    },
    "267": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "268": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "269": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9D"
    },
    "272": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2408,
        2506
      ],
      "op": "JUMP",
      "path": "0"
    },
    "273": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "274": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124"
    },
    "277": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F"
    },
    "280": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "281": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "283": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDB0"
    },
    "286": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3820,
        4037
      ],
      "op": "JUMP",
      "path": "0"
    },
    "287": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "288": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E3"
    },
    "291": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3820,
        4037
      ],
      "op": "JUMP",
      "path": "0"
    },
    "292": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "293": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "302": {
      "op": "SHL"
    },
    "303": {
      "op": "SUB"
    },
    "304": {
      "op": "SWAP1"
    },
    "305": {
      "op": "SWAP2"
    },
    "306": {
      "op": "AND"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "317": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "320": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A"
    },
    "323": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "324": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "326": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE5"
    },
    "329": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3371,
        3759
      ],
      "op": "JUMP",
      "path": "0"
    },
    "330": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "331": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37D"
    },
    "334": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3371,
        3759
      ],
      "op": "JUMP",
      "path": "0"
    },
    "335": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "336": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "STOP",
      "path": "0"
    },
    "337": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "338": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "341": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15F"
    },
    "344": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "345": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE0F"
    },
    "350": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4684,
        4984
      ],
      "op": "JUMP",
      "path": "0"
    },
    "351": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "352": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x492"
    },
    "355": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4684,
        4984
      ],
      "op": "JUMP",
      "path": "0"
    },
    "356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "357": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172"
    },
    "363": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "364": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE0F"
    },
    "369": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5050,
        5199
      ],
      "op": "JUMP",
      "path": "0"
    },
    "370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "371": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C3"
    },
    "374": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5050,
        5199
      ],
      "op": "JUMP",
      "path": "0"
    },
    "375": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "376": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124"
    },
    "379": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x185"
    },
    "382": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "383": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "385": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDB0"
    },
    "388": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2111,
        2346
      ],
      "op": "JUMP",
      "path": "0"
    },
    "389": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "390": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DE"
    },
    "393": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2111,
        2346
      ],
      "op": "JUMP",
      "path": "0"
    },
    "394": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "395": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19D"
    },
    "398": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x198"
    },
    "401": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "402": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE4C"
    },
    "407": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1849,
        2054
      ],
      "op": "JUMP",
      "path": "0"
    },
    "408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "409": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x555"
    },
    "412": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1849,
        2054
      ],
      "op": "JUMP",
      "path": "0"
    },
    "413": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "414": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "416": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "417": {
      "op": "SWAP1"
    },
    "418": {
      "op": "DUP2"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "422": {
      "op": "ADD"
    },
    "423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3"
    },
    "426": {
      "op": "JUMP"
    },
    "427": {
      "fn": "ERC721.symbol",
      "offset": [
        2570,
        2672
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "428": {
      "fn": "ERC721.symbol",
      "offset": [
        2570,
        2672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x104"
    },
    "431": {
      "fn": "ERC721.symbol",
      "offset": [
        2570,
        2672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5DC"
    },
    "434": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2570,
        2672
      ],
      "op": "JUMP",
      "path": "0"
    },
    "435": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "436": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C1"
    },
    "442": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE67"
    },
    "448": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4104,
        4394
      ],
      "op": "JUMP",
      "path": "0"
    },
    "449": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "450": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5EB"
    },
    "453": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4104,
        4394
      ],
      "op": "JUMP",
      "path": "0"
    },
    "454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "455": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "458": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D4"
    },
    "461": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "462": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "464": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEB9"
    },
    "467": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5265,
        5547
      ],
      "op": "JUMP",
      "path": "0"
    },
    "468": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "469": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6AF"
    },
    "472": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5265,
        5547
      ],
      "op": "JUMP",
      "path": "0"
    },
    "473": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "474": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x104"
    },
    "477": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E7"
    },
    "480": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "481": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "483": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDB0"
    },
    "486": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2738,
        3091
      ],
      "op": "JUMP",
      "path": "0"
    },
    "487": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "488": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E7"
    },
    "491": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2738,
        3091
      ],
      "op": "JUMP",
      "path": "0"
    },
    "492": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "493": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7"
    },
    "496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FA"
    },
    "499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "500": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF9D"
    },
    "505": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4460,
        4622
      ],
      "op": "JUMP",
      "path": "0"
    },
    "506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "507": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7CF"
    },
    "510": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4460,
        4622
      ],
      "op": "JUMP",
      "path": "0"
    },
    "511": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "512": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1604,
        1608
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "518": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "520": {
      "op": "SHL"
    },
    "521": {
      "op": "SUB"
    },
    "522": {
      "op": "NOT"
    },
    "523": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1667
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 0
    },
    "524": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1667
      ],
      "op": "AND",
      "path": "0"
    },
    "525": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "530": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "532": {
      "op": "SHL"
    },
    "533": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1667
      ],
      "op": "EQ",
      "path": "0"
    },
    "534": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1667
      ],
      "op": "DUP1",
      "path": "0"
    },
    "535": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1731
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x230"
    },
    "538": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1731
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "539": {
      "op": "POP"
    },
    "540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "544": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "546": {
      "op": "SHL"
    },
    "547": {
      "op": "SUB"
    },
    "548": {
      "op": "NOT"
    },
    "549": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1683,
        1731
      ],
      "op": "DUP3",
      "path": "0"
    },
    "550": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1683,
        1731
      ],
      "op": "AND",
      "path": "0"
    },
    "551": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "556": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "558": {
      "op": "SHL"
    },
    "559": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1683,
        1731
      ],
      "op": "EQ",
      "path": "0"
    },
    "560": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1731
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "561": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1783
      ],
      "op": "DUP1",
      "path": "0"
    },
    "562": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24B"
    },
    "565": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1783
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "566": {
      "op": "POP"
    },
    "567": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "572": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "574": {
      "op": "SHL"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "579": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "581": {
      "op": "SHL"
    },
    "582": {
      "op": "SUB"
    },
    "583": {
      "op": "NOT"
    },
    "584": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 1
    },
    "585": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "8"
    },
    "586": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "8"
    },
    "587": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1747,
        1783
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "588": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1620,
        1783
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "589": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "590": {
      "op": "POP"
    },
    "591": {
      "op": "POP"
    },
    "592": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1502,
        1790
      ],
      "op": "JUMP",
      "path": "0"
    },
    "593": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "594": {
      "fn": "ERC721.name",
      "offset": [
        2462,
        2475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "596": {
      "fn": "ERC721.name",
      "offset": [
        2494,
        2499
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x0"
    },
    "598": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "0"
    },
    "599": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "600": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "603": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "604": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFD0"
    },
    "607": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMP",
      "path": "0"
    },
    "608": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "609": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "0"
    },
    "610": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "612": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "0"
    },
    "613": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "615": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "0"
    },
    "616": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "617": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DIV",
      "path": "0"
    },
    "618": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "MUL",
      "path": "0"
    },
    "619": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "621": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "0"
    },
    "622": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "624": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "625": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "626": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP2",
      "path": "0"
    },
    "627": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "0"
    },
    "628": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "630": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "631": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "0"
    },
    "632": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "633": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "634": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "635": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP2",
      "path": "0"
    },
    "636": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP2",
      "path": "0"
    },
    "637": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "638": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "640": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "0"
    },
    "641": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP3",
      "path": "0"
    },
    "642": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "0"
    },
    "643": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "644": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28C"
    },
    "647": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "648": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFD0"
    },
    "651": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMP",
      "path": "0"
    },
    "652": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "653": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "0"
    },
    "654": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "655": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D9"
    },
    "658": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "659": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "0"
    },
    "660": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "662": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "LT",
      "path": "0"
    },
    "663": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AE"
    },
    "666": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "667": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "670": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "0"
    },
    "671": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP4",
      "path": "0"
    },
    "672": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "673": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DIV",
      "path": "0"
    },
    "674": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "MUL",
      "path": "0"
    },
    "675": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP4",
      "path": "0"
    },
    "676": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "678": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "680": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "0"
    },
    "681": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "682": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D9"
    },
    "685": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMP",
      "path": "0"
    },
    "686": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "687": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP3",
      "path": "0"
    },
    "688": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "0"
    },
    "689": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "690": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "691": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "693": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "694": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "696": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "698": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "699": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "700": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "701": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP2",
      "path": "0"
    },
    "702": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "703": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP2",
      "path": "0"
    },
    "704": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "705": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "706": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "708": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "0"
    },
    "709": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "710": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "712": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "0"
    },
    "713": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "0"
    },
    "714": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP4",
      "path": "0"
    },
    "715": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "GT",
      "path": "0"
    },
    "716": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BC"
    },
    "719": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "720": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP3",
      "path": "0"
    },
    "721": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "722": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SUB",
      "path": "0"
    },
    "723": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "725": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "AND",
      "path": "0"
    },
    "726": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP3",
      "path": "0"
    },
    "727": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "0"
    },
    "728": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "729": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "730": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "POP",
      "path": "0"
    },
    "731": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "POP",
      "path": "0"
    },
    "732": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "POP",
      "path": "0"
    },
    "733": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "POP",
      "path": "0"
    },
    "734": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "POP",
      "path": "0"
    },
    "735": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "736": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "POP",
      "path": "0"
    },
    "737": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "738": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2408,
        2506
      ],
      "op": "JUMP",
      "path": "0"
    },
    "739": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "740": {
      "fn": "ERC721.getApproved",
      "offset": [
        3896,
        3903
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "742": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 3
    },
    "743": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "DUP2",
      "path": "0"
    },
    "744": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "745": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "747": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "749": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "750": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "752": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "DUP2",
      "path": "0"
    },
    "753": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "754": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "761": {
      "op": "SHL"
    },
    "762": {
      "op": "SUB"
    },
    "763": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "AND",
      "path": "0"
    },
    "764": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 4,
      "value": "0x361"
    },
    "767": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "768": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "770": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "771": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "775": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "777": {
      "op": "SHL"
    },
    "778": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "DUP2",
      "path": "0"
    },
    "779": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "782": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "784": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "DUP3",
      "path": "0"
    },
    "785": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "ADD",
      "path": "0"
    },
    "786": {
      "op": "MSTORE"
    },
    "787": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "789": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "791": {
      "op": "DUP3"
    },
    "792": {
      "op": "ADD"
    },
    "793": {
      "op": "MSTORE"
    },
    "794": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "829": {
      "op": "DUP3"
    },
    "830": {
      "op": "ADD"
    },
    "831": {
      "op": "MSTORE"
    },
    "832": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "845": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "847": {
      "op": "SHL"
    },
    "848": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "850": {
      "op": "DUP3"
    },
    "851": {
      "op": "ADD"
    },
    "852": {
      "op": "MSTORE"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "855": {
      "op": "ADD"
    },
    "856": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "857": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "859": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "860": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "DUP1",
      "path": "0"
    },
    "861": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "862": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "SUB",
      "path": "0"
    },
    "863": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "864": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "865": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "866": {
      "op": "POP"
    },
    "867": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x0"
    },
    "869": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "870": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "DUP2",
      "path": "0"
    },
    "871": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "872": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "874": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "876": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "877": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "879": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "880": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "881": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "888": {
      "op": "SHL"
    },
    "889": {
      "op": "SUB"
    },
    "890": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "AND",
      "path": "0"
    },
    "891": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "892": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3820,
        4037
      ],
      "op": "JUMP",
      "path": "0"
    },
    "893": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "894": {
      "fn": "ERC721.approve",
      "offset": [
        3451,
        3464
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "896": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3490
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x388"
    },
    "899": {
      "fn": "ERC721.approve",
      "offset": [
        3482,
        3489
      ],
      "op": "DUP3",
      "path": "0"
    },
    "900": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3481
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DE"
    },
    "903": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3467,
        3490
      ],
      "op": "JUMP",
      "path": "0"
    },
    "904": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3490
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "905": {
      "fn": "ERC721.approve",
      "offset": [
        3451,
        3490
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "906": {
      "fn": "ERC721.approve",
      "offset": [
        3451,
        3490
      ],
      "op": "POP",
      "path": "0"
    },
    "907": {
      "fn": "ERC721.approve",
      "offset": [
        3514,
        3519
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 6
    },
    "908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "914": {
      "op": "SHL"
    },
    "915": {
      "op": "SUB"
    },
    "916": {
      "fn": "ERC721.approve",
      "offset": [
        3508,
        3519
      ],
      "op": "AND",
      "path": "0"
    },
    "917": {
      "fn": "ERC721.approve",
      "offset": [
        3508,
        3510
      ],
      "op": "DUP4",
      "path": "0"
    },
    "918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "922": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "924": {
      "op": "SHL"
    },
    "925": {
      "op": "SUB"
    },
    "926": {
      "fn": "ERC721.approve",
      "offset": [
        3508,
        3519
      ],
      "op": "AND",
      "path": "0"
    },
    "927": {
      "branch": 49,
      "fn": "ERC721.approve",
      "offset": [
        3508,
        3519
      ],
      "op": "SUB",
      "path": "0"
    },
    "928": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F5"
    },
    "931": {
      "branch": 49,
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "932": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "934": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "935": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "939": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "941": {
      "op": "SHL"
    },
    "942": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "DUP2",
      "path": "0"
    },
    "943": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "944": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "946": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "948": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "DUP3",
      "path": "0"
    },
    "949": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "ADD",
      "path": "0"
    },
    "950": {
      "op": "MSTORE"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "955": {
      "op": "DUP3"
    },
    "956": {
      "op": "ADD"
    },
    "957": {
      "op": "MSTORE"
    },
    "958": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "993": {
      "op": "DUP3"
    },
    "994": {
      "op": "ADD"
    },
    "995": {
      "op": "MSTORE"
    },
    "996": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "998": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1000": {
      "op": "SHL"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1003": {
      "op": "DUP3"
    },
    "1004": {
      "op": "ADD"
    },
    "1005": {
      "op": "MSTORE"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1008": {
      "op": "ADD"
    },
    "1009": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "1012": {
      "op": "JUMP"
    },
    "1013": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1014": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 7
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1021": {
      "op": "SHL"
    },
    "1022": {
      "op": "SUB"
    },
    "1023": {
      "fn": "ERC721.approve",
      "offset": [
        3576,
        3597
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 8
    },
    "1024": {
      "fn": "ERC721.approve",
      "offset": [
        3576,
        3597
      ],
      "op": "AND",
      "path": "0"
    },
    "1025": {
      "fn": "ERC721.approve",
      "offset": [
        3576,
        3597
      ],
      "op": "EQ",
      "path": "0"
    },
    "1026": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3576,
        3597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1027": {
      "fn": "ERC721.approve",
      "offset": [
        3576,
        3638
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x411"
    },
    "1030": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3576,
        3638
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1031": {
      "op": "POP"
    },
    "1032": {
      "fn": "ERC721.approve",
      "offset": [
        3601,
        3638
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x411"
    },
    "1035": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3623
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1036": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1037": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7CF"
    },
    "1040": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4460,
        4622
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1041": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3601,
        3638
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1042": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x483"
    },
    "1045": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1046": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1048": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1049": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1055": {
      "op": "SHL"
    },
    "1056": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1057": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1060": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1062": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1063": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "ADD",
      "path": "0"
    },
    "1064": {
      "op": "MSTORE"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1069": {
      "op": "DUP3"
    },
    "1070": {
      "op": "ADD"
    },
    "1071": {
      "op": "MSTORE"
    },
    "1072": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1107": {
      "op": "DUP3"
    },
    "1108": {
      "op": "ADD"
    },
    "1109": {
      "op": "MSTORE"
    },
    "1110": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1145": {
      "op": "DUP3"
    },
    "1146": {
      "op": "ADD"
    },
    "1147": {
      "op": "MSTORE"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1150": {
      "op": "ADD"
    },
    "1151": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "1154": {
      "op": "JUMP"
    },
    "1155": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1156": {
      "fn": "ERC721.approve",
      "offset": [
        3731,
        3752
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 9,
      "value": "0x48D"
    },
    "1159": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3742
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1160": {
      "fn": "ERC721.approve",
      "offset": [
        3744,
        3751
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1161": {
      "fn": "ERC721.approve",
      "offset": [
        3731,
        3739
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7FD"
    },
    "1164": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3731,
        3752
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1165": {
      "fn": "ERC721.approve",
      "offset": [
        3731,
        3752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1166": {
      "fn": "ERC721.approve",
      "offset": [
        3441,
        3759
      ],
      "op": "POP",
      "path": "0"
    },
    "1167": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "POP",
      "path": "0"
    },
    "1168": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "POP",
      "path": "0"
    },
    "1169": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3371,
        3759
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1170": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1171": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4843,
        4884
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 10,
      "value": "0x49C"
    },
    "1174": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1175": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4876,
        4883
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1176": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4843,
        4861
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86B"
    },
    "1179": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4843,
        4884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1180": {
      "branch": 52,
      "fn": "ERC721.transferFrom",
      "offset": [
        4843,
        4884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1181": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B8"
    },
    "1184": {
      "branch": 52,
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1185": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1187": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1188": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1194": {
      "op": "SHL"
    },
    "1195": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1196": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1197": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1199": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "ADD",
      "path": "0"
    },
    "1200": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "1203": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1204": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100A"
    },
    "1207": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4835,
        4938
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1208": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1209": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4949,
        4977
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 11,
      "value": "0x48D"
    },
    "1212": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4959,
        4963
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1213": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4965,
        4967
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1214": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4969,
        4976
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1215": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4949,
        4958
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x942"
    },
    "1218": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4949,
        4977
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1219": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1220": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 12,
      "value": "0x48D"
    },
    "1223": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5170,
        5174
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1224": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5176,
        5178
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1225": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5180,
        5187
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1226": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1228": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1229": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1230": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1232": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "ADD",
      "path": "0"
    },
    "1233": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1235": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1236": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1237": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1239": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1240": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1241": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "POP",
      "path": "0"
    },
    "1242": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5169
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6AF"
    },
    "1245": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5153,
        5192
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1246": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1247": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2183,
        2190
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1249": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1250": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1251": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1252": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2225
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1254": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1256": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1257": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1259": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1260": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1261": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1268": {
      "op": "SHL"
    },
    "1269": {
      "op": "SUB"
    },
    "1270": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "AND",
      "path": "0"
    },
    "1271": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1272": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 13,
      "value": "0x24B"
    },
    "1275": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1276": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1278": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1279": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1285": {
      "op": "SHL"
    },
    "1286": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1287": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1290": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1292": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1293": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "ADD",
      "path": "0"
    },
    "1294": {
      "op": "MSTORE"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1299": {
      "op": "DUP3"
    },
    "1300": {
      "op": "ADD"
    },
    "1301": {
      "op": "MSTORE"
    },
    "1302": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1337": {
      "op": "DUP3"
    },
    "1338": {
      "op": "ADD"
    },
    "1339": {
      "op": "MSTORE"
    },
    "1340": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1352": {
      "op": "SHL"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1355": {
      "op": "DUP3"
    },
    "1356": {
      "op": "ADD"
    },
    "1357": {
      "op": "MSTORE"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1360": {
      "op": "ADD"
    },
    "1361": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "1364": {
      "op": "JUMP"
    },
    "1365": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1366": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1921,
        1928
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1374": {
      "op": "SHL"
    },
    "1375": {
      "op": "SUB"
    },
    "1376": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1948,
        1967
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 14
    },
    "1377": {
      "branch": 53,
      "fn": "ERC721.balanceOf",
      "offset": [
        1948,
        1967
      ],
      "op": "AND",
      "path": "0"
    },
    "1378": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C0"
    },
    "1381": {
      "branch": 53,
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1382": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1384": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1385": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1391": {
      "op": "SHL"
    },
    "1392": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1393": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1396": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1398": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1399": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "ADD",
      "path": "0"
    },
    "1400": {
      "op": "MSTORE"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1405": {
      "op": "DUP3"
    },
    "1406": {
      "op": "ADD"
    },
    "1407": {
      "op": "MSTORE"
    },
    "1408": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1443": {
      "op": "DUP3"
    },
    "1444": {
      "op": "ADD"
    },
    "1445": {
      "op": "MSTORE"
    },
    "1446": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1459": {
      "op": "SHL"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1462": {
      "op": "DUP3"
    },
    "1463": {
      "op": "ADD"
    },
    "1464": {
      "op": "MSTORE"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1467": {
      "op": "ADD"
    },
    "1468": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "1471": {
      "op": "JUMP"
    },
    "1472": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1473": {
      "op": "POP"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1480": {
      "op": "SHL"
    },
    "1481": {
      "op": "SUB"
    },
    "1482": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "AND",
      "path": "0",
      "statement": 15
    },
    "1483": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1485": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1486": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1487": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1488": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2040
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1490": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1492": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1493": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1495": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1496": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1497": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1498": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1499": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1849,
        2054
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1500": {
      "fn": "ERC721.symbol",
      "offset": [
        2570,
        2672
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1501": {
      "fn": "ERC721.symbol",
      "offset": [
        2626,
        2639
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1503": {
      "fn": "ERC721.symbol",
      "offset": [
        2658,
        2665
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x1"
    },
    "1505": {
      "fn": "ERC721.symbol",
      "offset": [
        2651,
        2665
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1506": {
      "fn": "ERC721.symbol",
      "offset": [
        2651,
        2665
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1507": {
      "fn": "ERC721.symbol",
      "offset": [
        2651,
        2665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "1510": {
      "fn": "ERC721.symbol",
      "offset": [
        2651,
        2665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1511": {
      "fn": "ERC721.symbol",
      "offset": [
        2651,
        2665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFD0"
    },
    "1514": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2651,
        2665
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1515": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1516": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1523": {
      "op": "SHL"
    },
    "1524": {
      "op": "SUB"
    },
    "1525": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4206,
        4230
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 17
    },
    "1526": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4206,
        4230
      ],
      "op": "AND",
      "path": "0"
    },
    "1527": {
      "branch": 54,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4206,
        4230
      ],
      "op": "SUB",
      "path": "0"
    },
    "1528": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x643"
    },
    "1531": {
      "branch": 54,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1532": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1534": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1535": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1541": {
      "op": "SHL"
    },
    "1542": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1543": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1544": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1546": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1548": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1549": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "ADD",
      "path": "0"
    },
    "1550": {
      "op": "MSTORE"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1555": {
      "op": "DUP3"
    },
    "1556": {
      "op": "ADD"
    },
    "1557": {
      "op": "MSTORE"
    },
    "1558": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1593": {
      "op": "DUP3"
    },
    "1594": {
      "op": "ADD"
    },
    "1595": {
      "op": "MSTORE"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1598": {
      "op": "ADD"
    },
    "1599": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "1602": {
      "op": "JUMP"
    },
    "1603": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1604": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1605": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x0"
    },
    "1607": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1608": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1609": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1610": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1612": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1614": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1615": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1616": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1617": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1619": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1620": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1621": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1628": {
      "op": "SHL"
    },
    "1629": {
      "op": "SUB"
    },
    "1630": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1631": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "AND",
      "path": "0"
    },
    "1632": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1633": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1634": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1635": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1636": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1637": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1638": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1639": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1640": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1641": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1642": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1643": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1646": {
      "op": "NOT"
    },
    "1647": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "AND",
      "path": "0"
    },
    "1648": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1649": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1650": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1651": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1652": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1653": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "OR",
      "path": "0"
    },
    "1654": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1655": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1656": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1657": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 19
    },
    "1658": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1659": {
      "op": "SWAP1"
    },
    "1660": {
      "op": "DUP2"
    },
    "1661": {
      "op": "MSTORE"
    },
    "1662": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1663": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1664": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1665": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "1698": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1699": {
      "op": "ADD"
    },
    "1700": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1702": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1703": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1704": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1705": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "SUB",
      "path": "0"
    },
    "1706": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1707": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1708": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "POP",
      "path": "0"
    },
    "1709": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "POP",
      "path": "0"
    },
    "1710": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4104,
        4394
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1711": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1712": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5396,
        5437
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 20,
      "value": "0x6B9"
    },
    "1715": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1716": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5429,
        5436
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1717": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5396,
        5414
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86B"
    },
    "1720": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5396,
        5437
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1721": {
      "branch": 55,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5396,
        5437
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1722": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D5"
    },
    "1725": {
      "branch": 55,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1726": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1728": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1729": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1735": {
      "op": "SHL"
    },
    "1736": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1737": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1738": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1740": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "ADD",
      "path": "0"
    },
    "1741": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "1744": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1745": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100A"
    },
    "1748": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5388,
        5491
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1749": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1750": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5501,
        5540
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 21,
      "value": "0x6E1"
    },
    "1753": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5515,
        5519
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1754": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5523
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1755": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5525,
        5532
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1756": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5534,
        5539
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1757": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5501,
        5514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAE2"
    },
    "1760": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5501,
        5540
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1761": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5501,
        5540
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1762": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "POP",
      "path": "0"
    },
    "1763": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "POP",
      "path": "0"
    },
    "1764": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "POP",
      "path": "0"
    },
    "1765": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "POP",
      "path": "0"
    },
    "1766": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5265,
        5547
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1767": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1768": {
      "fn": "ERC721._exists",
      "offset": [
        7046,
        7050
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1770": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1771": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1772": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1773": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1775": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1777": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1778": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1780": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1781": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1782": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1783": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2811,
        2824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1785": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2811,
        2824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1792": {
      "op": "SHL"
    },
    "1793": {
      "op": "SUB"
    },
    "1794": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "AND",
      "path": "0"
    },
    "1795": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 22,
      "value": "0x766"
    },
    "1798": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1799": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1801": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1802": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1808": {
      "op": "SHL"
    },
    "1809": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1810": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1813": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1815": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1816": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "ADD",
      "path": "0"
    },
    "1817": {
      "op": "MSTORE"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1822": {
      "op": "DUP3"
    },
    "1823": {
      "op": "ADD"
    },
    "1824": {
      "op": "MSTORE"
    },
    "1825": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1860": {
      "op": "DUP3"
    },
    "1861": {
      "op": "ADD"
    },
    "1862": {
      "op": "MSTORE"
    },
    "1863": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1881": {
      "op": "SHL"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1884": {
      "op": "DUP3"
    },
    "1885": {
      "op": "ADD"
    },
    "1886": {
      "op": "MSTORE"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1889": {
      "op": "ADD"
    },
    "1890": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "1893": {
      "op": "JUMP"
    },
    "1894": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1895": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2923,
        2944
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1897": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2947,
        2957
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77D"
    },
    "1900": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x40"
    },
    "1902": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1903": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1904": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1906": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1907": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "ADD",
      "path": "0"
    },
    "1908": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1909": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1910": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1913": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1914": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1915": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1916": {
      "fn": "ERC721._baseURI",
      "offset": [
        3222,
        3314
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1917": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2947,
        2957
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1918": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2923,
        2957
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1919": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2923,
        2957
      ],
      "op": "POP",
      "path": "0"
    },
    "1920": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2998,
        2999
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x0"
    },
    "1922": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        2987
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1923": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        2995
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1924": {
      "branch": 56,
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        2999
      ],
      "op": "GT",
      "path": "0"
    },
    "1925": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x79D"
    },
    "1928": {
      "branch": 56,
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1929": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1931": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1932": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1933": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1935": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "ADD",
      "path": "0"
    },
    "1936": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1938": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1939": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1940": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1942": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1943": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1944": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "POP",
      "path": "0"
    },
    "1945": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C8"
    },
    "1948": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1949": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1950": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3038,
        3045
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1951": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3065
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A7"
    },
    "1954": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3054
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1955": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3063
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB15"
    },
    "1958": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3047,
        3065
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1959": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3065
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1960": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1962": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1963": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1965": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "ADD",
      "path": "0"
    },
    "1966": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B8"
    },
    "1969": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1970": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1971": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1972": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x105B"
    },
    "1975": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3021,
        3066
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1976": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1977": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1979": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1980": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1982": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1983": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1984": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "SUB",
      "path": "0"
    },
    "1985": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "SUB",
      "path": "0"
    },
    "1986": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1987": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1988": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1989": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1991": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1992": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1993": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2967,
        3084
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1994": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1995": {
      "op": "POP"
    },
    "1996": {
      "op": "POP"
    },
    "1997": {
      "op": "POP"
    },
    "1998": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2738,
        3091
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1999": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2006": {
      "op": "SHL"
    },
    "2007": {
      "op": "SUB"
    },
    "2008": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 25
    },
    "2009": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2010": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "AND",
      "path": "0"
    },
    "2011": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4557,
        4561
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2013": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2014": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2015": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2016": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4598
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2018": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2020": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2021": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2022": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2023": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2025": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2026": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2027": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2028": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2029": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2030": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2031": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "AND",
      "path": "0"
    },
    "2032": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2033": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2034": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2035": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2036": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2037": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2038": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2039": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2040": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2042": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "AND",
      "path": "0"
    },
    "2043": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2044": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "o",
      "offset": [
        4460,
        4622
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2045": {
      "fn": "ERC721._approve",
      "offset": [
        10738,
        10909
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2046": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0x0"
    },
    "2048": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2049": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2050": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2051": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10827
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2053": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2055": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2056": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2058": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2059": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2060": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2061": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2068": {
      "op": "SHL"
    },
    "2069": {
      "op": "SUB"
    },
    "2070": {
      "op": "NOT"
    },
    "2071": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "AND",
      "path": "0"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2078": {
      "op": "SHL"
    },
    "2079": {
      "op": "SUB"
    },
    "2080": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2081": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "AND",
      "path": "0"
    },
    "2082": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2083": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2084": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "OR",
      "path": "0"
    },
    "2085": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2086": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2087": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2088": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2089": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2090": {
      "fn": "ERC721._approve",
      "offset": [
        10865,
        10888
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 27,
      "value": "0x832"
    },
    "2093": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2094": {
      "fn": "ERC721._approve",
      "offset": [
        10865,
        10879
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DE"
    },
    "2097": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        10865,
        10888
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2098": {
      "fn": "ERC721._approve",
      "offset": [
        10865,
        10888
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2105": {
      "op": "SHL"
    },
    "2106": {
      "op": "SUB"
    },
    "2107": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "AND",
      "path": "0"
    },
    "2108": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2141": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2143": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2144": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2146": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2147": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2148": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2149": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "SUB",
      "path": "0"
    },
    "2150": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2151": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "LOG4",
      "path": "0"
    },
    "2152": {
      "fn": "ERC721._approve",
      "offset": [
        10738,
        10909
      ],
      "op": "POP",
      "path": "0"
    },
    "2153": {
      "fn": "ERC721._approve",
      "offset": [
        10738,
        10909
      ],
      "op": "POP",
      "path": "0"
    },
    "2154": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        10738,
        10909
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2155": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7264,
        7608
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2156": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7357,
        7361
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2158": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2159": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2160": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2161": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2163": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2165": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2166": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2168": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2169": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2170": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2177": {
      "op": "SHL"
    },
    "2178": {
      "op": "SUB"
    },
    "2179": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "AND",
      "path": "0"
    },
    "2180": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 28,
      "value": "0x8E4"
    },
    "2183": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2184": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2186": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2187": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2193": {
      "op": "SHL"
    },
    "2194": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2195": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2198": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2200": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2201": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "ADD",
      "path": "0"
    },
    "2202": {
      "op": "MSTORE"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2205": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2207": {
      "op": "DUP3"
    },
    "2208": {
      "op": "ADD"
    },
    "2209": {
      "op": "MSTORE"
    },
    "2210": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2245": {
      "op": "DUP3"
    },
    "2246": {
      "op": "ADD"
    },
    "2247": {
      "op": "MSTORE"
    },
    "2248": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2263": {
      "op": "SHL"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2266": {
      "op": "DUP3"
    },
    "2267": {
      "op": "ADD"
    },
    "2268": {
      "op": "MSTORE"
    },
    "2269": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2271": {
      "op": "ADD"
    },
    "2272": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "2275": {
      "op": "JUMP"
    },
    "2276": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2277": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7456,
        7469
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2279": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7472,
        7495
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EF"
    },
    "2282": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7487,
        7494
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2283": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7472,
        7486
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DE"
    },
    "2286": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7472,
        7495
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2287": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7472,
        7495
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2288": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7456,
        7495
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2289": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7456,
        7495
      ],
      "op": "POP",
      "path": "0"
    },
    "2290": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7524,
        7529
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 29
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2297": {
      "op": "SHL"
    },
    "2298": {
      "op": "SUB"
    },
    "2299": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7529
      ],
      "op": "AND",
      "path": "0"
    },
    "2300": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7520
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2307": {
      "op": "SHL"
    },
    "2308": {
      "op": "SUB"
    },
    "2309": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7529
      ],
      "op": "AND",
      "path": "0"
    },
    "2310": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7529
      ],
      "op": "EQ",
      "path": "0"
    },
    "2311": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7564
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2312": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7564
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92A"
    },
    "2315": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7564
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2316": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7564
      ],
      "op": "POP",
      "path": "0"
    },
    "2317": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7557,
        7564
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2324": {
      "op": "SHL"
    },
    "2325": {
      "op": "SUB"
    },
    "2326": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7533,
        7564
      ],
      "op": "AND",
      "path": "0"
    },
    "2327": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7533,
        7553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x91F"
    },
    "2330": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7545,
        7552
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2331": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7533,
        7544
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E3"
    },
    "2334": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7533,
        7553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2335": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7533,
        7553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2342": {
      "op": "SHL"
    },
    "2343": {
      "op": "SUB"
    },
    "2344": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7533,
        7564
      ],
      "op": "AND",
      "path": "0"
    },
    "2345": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7533,
        7564
      ],
      "op": "EQ",
      "path": "0"
    },
    "2346": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7564
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2347": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7600
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2348": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7600
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x93A"
    },
    "2351": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7600
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2352": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7600
      ],
      "op": "POP",
      "path": "0"
    },
    "2353": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7568,
        7600
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x93A"
    },
    "2356": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7585,
        7590
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2357": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7592,
        7599
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2358": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7568,
        7584
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7CF"
    },
    "2361": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7568,
        7600
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2362": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7568,
        7600
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2363": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7505,
        7601
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2364": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7264,
        7608
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2365": {
      "op": "POP"
    },
    "2366": {
      "op": "POP"
    },
    "2367": {
      "op": "POP"
    },
    "2368": {
      "op": "POP"
    },
    "2369": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7264,
        7608
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2370": {
      "fn": "ERC721._transfer",
      "offset": [
        10097,
        10627
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2371": {
      "fn": "ERC721._transfer",
      "offset": [
        10221,
        10225
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 30
    },
    "2372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2378": {
      "op": "SHL"
    },
    "2379": {
      "op": "SUB"
    },
    "2380": {
      "fn": "ERC721._transfer",
      "offset": [
        10194,
        10225
      ],
      "op": "AND",
      "path": "0"
    },
    "2381": {
      "fn": "ERC721._transfer",
      "offset": [
        10194,
        10217
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x955"
    },
    "2384": {
      "fn": "ERC721._transfer",
      "offset": [
        10209,
        10216
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2385": {
      "fn": "ERC721._transfer",
      "offset": [
        10194,
        10208
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DE"
    },
    "2388": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10194,
        10217
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2389": {
      "fn": "ERC721._transfer",
      "offset": [
        10194,
        10217
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2396": {
      "op": "SHL"
    },
    "2397": {
      "op": "SUB"
    },
    "2398": {
      "fn": "ERC721._transfer",
      "offset": [
        10194,
        10225
      ],
      "op": "AND",
      "path": "0"
    },
    "2399": {
      "branch": 57,
      "fn": "ERC721._transfer",
      "offset": [
        10194,
        10225
      ],
      "op": "EQ",
      "path": "0"
    },
    "2400": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9BD"
    },
    "2403": {
      "branch": 57,
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2404": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2406": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2407": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2411": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2413": {
      "op": "SHL"
    },
    "2414": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2415": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2418": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2420": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2421": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "ADD",
      "path": "0"
    },
    "2422": {
      "op": "MSTORE"
    },
    "2423": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2425": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2427": {
      "op": "DUP3"
    },
    "2428": {
      "op": "ADD"
    },
    "2429": {
      "op": "MSTORE"
    },
    "2430": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2465": {
      "op": "DUP3"
    },
    "2466": {
      "op": "ADD"
    },
    "2467": {
      "op": "MSTORE"
    },
    "2468": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "2478": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2480": {
      "op": "SHL"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2483": {
      "op": "DUP3"
    },
    "2484": {
      "op": "ADD"
    },
    "2485": {
      "op": "MSTORE"
    },
    "2486": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2488": {
      "op": "ADD"
    },
    "2489": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "2492": {
      "op": "JUMP"
    },
    "2493": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2500": {
      "op": "SHL"
    },
    "2501": {
      "op": "SUB"
    },
    "2502": {
      "fn": "ERC721._transfer",
      "offset": [
        10289,
        10305
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 31
    },
    "2503": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10289,
        10305
      ],
      "op": "AND",
      "path": "0"
    },
    "2504": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1F"
    },
    "2507": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2508": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2510": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2511": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2515": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2517": {
      "op": "SHL"
    },
    "2518": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2519": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2520": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2522": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2524": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2525": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "ADD",
      "path": "0"
    },
    "2526": {
      "op": "MSTORE"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2529": {
      "op": "DUP1"
    },
    "2530": {
      "op": "DUP3"
    },
    "2531": {
      "op": "ADD"
    },
    "2532": {
      "op": "MSTORE"
    },
    "2533": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "2566": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2568": {
      "op": "DUP3"
    },
    "2569": {
      "op": "ADD"
    },
    "2570": {
      "op": "MSTORE"
    },
    "2571": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2578": {
      "op": "SHL"
    },
    "2579": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2581": {
      "op": "DUP3"
    },
    "2582": {
      "op": "ADD"
    },
    "2583": {
      "op": "MSTORE"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2586": {
      "op": "ADD"
    },
    "2587": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "2590": {
      "op": "JUMP"
    },
    "2591": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2592": {
      "fn": "ERC721._transfer",
      "offset": [
        10458,
        10487
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 32,
      "value": "0xA2A"
    },
    "2595": {
      "fn": "ERC721._transfer",
      "offset": [
        10475,
        10476
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2597": {
      "fn": "ERC721._transfer",
      "offset": [
        10479,
        10486
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2598": {
      "fn": "ERC721._transfer",
      "offset": [
        10458,
        10466
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7FD"
    },
    "2601": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10458,
        10487
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2602": {
      "fn": "ERC721._transfer",
      "offset": [
        10458,
        10487
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2607": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2609": {
      "op": "SHL"
    },
    "2610": {
      "op": "SUB"
    },
    "2611": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 33
    },
    "2612": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "AND",
      "path": "0"
    },
    "2613": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2615": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2616": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2617": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2618": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2620": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2622": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2623": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2625": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2626": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2627": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2628": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2629": {
      "fn": "ERC721._transfer",
      "offset": [
        10517,
        10518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2631": {
      "fn": "ERC721._transfer",
      "offset": [
        10517,
        10518
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2632": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2633": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA53"
    },
    "2636": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2637": {
      "fn": "ERC721._transfer",
      "offset": [
        10517,
        10518
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2638": {
      "fn": "ERC721._transfer",
      "offset": [
        10517,
        10518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2639": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A0"
    },
    "2642": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10498,
        10518
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2643": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2644": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2645": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2646": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2647": {
      "op": "POP"
    },
    "2648": {
      "op": "POP"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2655": {
      "op": "SHL"
    },
    "2656": {
      "op": "SUB"
    },
    "2657": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 34
    },
    "2658": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "AND",
      "path": "0"
    },
    "2659": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2661": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2662": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2663": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2664": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10537
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2666": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2668": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2669": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2671": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2672": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2673": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2674": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2675": {
      "fn": "ERC721._transfer",
      "offset": [
        10545,
        10546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2677": {
      "fn": "ERC721._transfer",
      "offset": [
        10545,
        10546
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2678": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2679": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA81"
    },
    "2682": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2683": {
      "fn": "ERC721._transfer",
      "offset": [
        10545,
        10546
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2684": {
      "fn": "ERC721._transfer",
      "offset": [
        10545,
        10546
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2685": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10B3"
    },
    "2688": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10528,
        10546
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2689": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2690": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2691": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2692": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2693": {
      "op": "POP"
    },
    "2694": {
      "op": "POP"
    },
    "2695": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 35,
      "value": "0x0"
    },
    "2697": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2698": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2699": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2700": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10563
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2702": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2704": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2705": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2707": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2708": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2709": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2710": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2711": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2716": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2718": {
      "op": "SHL"
    },
    "2719": {
      "op": "SUB"
    },
    "2720": {
      "op": "NOT"
    },
    "2721": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "AND",
      "path": "0"
    },
    "2722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2726": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2728": {
      "op": "SHL"
    },
    "2729": {
      "op": "SUB"
    },
    "2730": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2731": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2732": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "AND",
      "path": "0"
    },
    "2733": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2734": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2735": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "OR",
      "path": "0"
    },
    "2736": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2737": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2738": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2739": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 36
    },
    "2740": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2741": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2742": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2743": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2744": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2745": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "AND",
      "path": "0"
    },
    "2746": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2747": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2780": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2781": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "LOG4",
      "path": "0"
    },
    "2782": {
      "fn": "ERC721._transfer",
      "offset": [
        10097,
        10627
      ],
      "op": "POP",
      "path": "0"
    },
    "2783": {
      "fn": "ERC721._transfer",
      "offset": [
        10097,
        10627
      ],
      "op": "POP",
      "path": "0"
    },
    "2784": {
      "fn": "ERC721._transfer",
      "offset": [
        10097,
        10627
      ],
      "op": "POP",
      "path": "0"
    },
    "2785": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10097,
        10627
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2786": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6409,
        6678
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2787": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6522,
        6550
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 37,
      "value": "0xAED"
    },
    "2790": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6532,
        6536
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2791": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6538,
        6540
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2792": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6542,
        6549
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2793": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6522,
        6531
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x942"
    },
    "2796": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6522,
        6550
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2797": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6522,
        6550
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2798": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6568,
        6616
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 38,
      "value": "0xAF9"
    },
    "2801": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6591,
        6595
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2802": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6597,
        6599
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2803": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6601,
        6608
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2804": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6610,
        6615
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2805": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6568,
        6590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC16"
    },
    "2808": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6568,
        6616
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2809": {
      "branch": 59,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6568,
        6616
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2810": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E1"
    },
    "2813": {
      "branch": 59,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2814": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2816": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2817": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2823": {
      "op": "SHL"
    },
    "2824": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2825": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2826": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2828": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "ADD",
      "path": "0"
    },
    "2829": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "2832": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2833": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10C6"
    },
    "2836": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6560,
        6671
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2837": {
      "fn": "Strings.toString",
      "offset": [
        271,
        974
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2838": {
      "fn": "Strings.toString",
      "offset": [
        327,
        340
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "2840": {
      "fn": "Strings.toString",
      "offset": [
        544,
        549
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2841": {
      "fn": "Strings.toString",
      "offset": [
        553,
        554
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2843": {
      "branch": 61,
      "fn": "Strings.toString",
      "offset": [
        544,
        554
      ],
      "op": "SUB",
      "path": "7"
    },
    "2844": {
      "fn": "Strings.toString",
      "offset": [
        540,
        591
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB3C"
    },
    "2847": {
      "branch": 61,
      "fn": "Strings.toString",
      "offset": [
        540,
        591
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2848": {
      "op": "POP"
    },
    "2849": {
      "op": "POP"
    },
    "2850": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 39,
      "value": "0x40"
    },
    "2852": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2853": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2854": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2855": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2856": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "ADD",
      "path": "7"
    },
    "2857": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2858": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2859": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2860": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2862": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2863": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2866": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "2868": {
      "op": "SHL"
    },
    "2869": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2871": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2872": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "ADD",
      "path": "7"
    },
    "2873": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2874": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2875": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        271,
        974
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2876": {
      "fn": "Strings.toString",
      "offset": [
        540,
        591
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2877": {
      "fn": "Strings.toString",
      "offset": [
        615,
        620
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2878": {
      "fn": "Strings.toString",
      "offset": [
        600,
        612
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2880": {
      "fn": "Strings.toString",
      "offset": [
        654,
        729
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2881": {
      "fn": "Strings.toString",
      "offset": [
        661,
        670
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2882": {
      "fn": "Strings.toString",
      "offset": [
        661,
        670
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2883": {
      "fn": "Strings.toString",
      "offset": [
        654,
        729
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB66"
    },
    "2886": {
      "fn": "Strings.toString",
      "offset": [
        654,
        729
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2887": {
      "fn": "Strings.toString",
      "offset": [
        686,
        694
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 40
    },
    "2888": {
      "fn": "Strings.toString",
      "offset": [
        686,
        694
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB50"
    },
    "2891": {
      "fn": "Strings.toString",
      "offset": [
        686,
        694
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2892": {
      "fn": "Strings.toString",
      "offset": [
        686,
        694
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1118"
    },
    "2895": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        686,
        694
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2896": {
      "fn": "Strings.toString",
      "offset": [
        686,
        694
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2897": {
      "fn": "Strings.toString",
      "offset": [
        686,
        694
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2898": {
      "op": "POP"
    },
    "2899": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 41,
      "value": "0xB5F"
    },
    "2902": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2903": {
      "op": "POP"
    },
    "2904": {
      "fn": "Strings.toString",
      "offset": [
        716,
        718
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "2906": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2907": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1147"
    },
    "2910": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        708,
        718
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2911": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2912": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2913": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "POP",
      "path": "7"
    },
    "2914": {
      "fn": "Strings.toString",
      "offset": [
        654,
        729
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB40"
    },
    "2917": {
      "fn": "Strings.toString",
      "offset": [
        654,
        729
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2918": {
      "fn": "Strings.toString",
      "offset": [
        654,
        729
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2919": {
      "fn": "Strings.toString",
      "offset": [
        738,
        757
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2921": {
      "fn": "Strings.toString",
      "offset": [
        770,
        776
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2922": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH8",
      "path": "7",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2931": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2932": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "GT",
      "path": "7"
    },
    "2933": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2934": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB81"
    },
    "2937": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2938": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB81"
    },
    "2941": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEA3"
    },
    "2944": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        760,
        777
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2945": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2946": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2948": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2949": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2950": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2951": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2952": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2953": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2954": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2956": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ADD",
      "path": "7"
    },
    "2957": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2959": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "NOT",
      "path": "7"
    },
    "2960": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "AND",
      "path": "7"
    },
    "2961": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2963": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ADD",
      "path": "7"
    },
    "2964": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2965": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ADD",
      "path": "7"
    },
    "2966": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2968": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2969": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2970": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2971": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBAB"
    },
    "2974": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2975": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2977": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2978": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ADD",
      "path": "7"
    },
    "2979": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2980": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2981": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "2982": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2983": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "CALLDATACOPY",
      "path": "7"
    },
    "2984": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ADD",
      "path": "7"
    },
    "2985": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2986": {
      "op": "POP"
    },
    "2987": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2988": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "POP",
      "path": "7"
    },
    "2989": {
      "fn": "Strings.toString",
      "offset": [
        738,
        777
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2990": {
      "fn": "Strings.toString",
      "offset": [
        738,
        777
      ],
      "op": "POP",
      "path": "7"
    },
    "2991": {
      "fn": "Strings.toString",
      "offset": [
        787,
        937
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2992": {
      "fn": "Strings.toString",
      "offset": [
        794,
        804
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2993": {
      "fn": "Strings.toString",
      "offset": [
        794,
        804
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2994": {
      "fn": "Strings.toString",
      "offset": [
        787,
        937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x93A"
    },
    "2997": {
      "fn": "Strings.toString",
      "offset": [
        787,
        937
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2998": {
      "fn": "Strings.toString",
      "offset": [
        820,
        831
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 42,
      "value": "0xBC0"
    },
    "3001": {
      "fn": "Strings.toString",
      "offset": [
        830,
        831
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3003": {
      "fn": "Strings.toString",
      "offset": [
        820,
        831
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3004": {
      "fn": "Strings.toString",
      "offset": [
        820,
        831
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10A0"
    },
    "3007": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        820,
        831
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3008": {
      "fn": "Strings.toString",
      "offset": [
        820,
        831
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3009": {
      "fn": "Strings.toString",
      "offset": [
        820,
        831
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3010": {
      "op": "POP"
    },
    "3011": {
      "fn": "Strings.toString",
      "offset": [
        888,
        898
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 43,
      "value": "0xBCD"
    },
    "3014": {
      "fn": "Strings.toString",
      "offset": [
        896,
        898
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "3016": {
      "fn": "Strings.toString",
      "offset": [
        888,
        893
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3017": {
      "fn": "Strings.toString",
      "offset": [
        888,
        898
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x115B"
    },
    "3020": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        888,
        898
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3021": {
      "fn": "Strings.toString",
      "offset": [
        888,
        898
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3022": {
      "fn": "Strings.toString",
      "offset": [
        875,
        899
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBD8"
    },
    "3025": {
      "fn": "Strings.toString",
      "offset": [
        875,
        899
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3026": {
      "fn": "Strings.toString",
      "offset": [
        875,
        877
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x30"
    },
    "3028": {
      "fn": "Strings.toString",
      "offset": [
        875,
        899
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10B3"
    },
    "3031": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        875,
        899
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3032": {
      "fn": "Strings.toString",
      "offset": [
        875,
        899
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3033": {
      "fn": "Strings.toString",
      "offset": [
        862,
        901
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xF8"
    },
    "3035": {
      "fn": "Strings.toString",
      "offset": [
        862,
        901
      ],
      "op": "SHL",
      "path": "7"
    },
    "3036": {
      "fn": "Strings.toString",
      "offset": [
        845,
        851
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3037": {
      "fn": "Strings.toString",
      "offset": [
        852,
        858
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3038": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3039": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3040": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3041": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "LT",
      "path": "7"
    },
    "3042": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBED"
    },
    "3045": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3046": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBED"
    },
    "3049": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x116F"
    },
    "3052": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        845,
        859
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3053": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3054": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3056": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "ADD",
      "path": "7"
    },
    "3057": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "ADD",
      "path": "7"
    },
    "3058": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3065": {
      "op": "SHL"
    },
    "3066": {
      "op": "SUB"
    },
    "3067": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "NOT",
      "path": "7"
    },
    "3068": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "AND",
      "path": "7"
    },
    "3069": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3070": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3071": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3073": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "BYTE",
      "path": "7"
    },
    "3074": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3075": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "MSTORE8",
      "path": "7"
    },
    "3076": {
      "op": "POP"
    },
    "3077": {
      "fn": "Strings.toString",
      "offset": [
        915,
        926
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 44,
      "value": "0xC0F"
    },
    "3080": {
      "fn": "Strings.toString",
      "offset": [
        924,
        926
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "3082": {
      "fn": "Strings.toString",
      "offset": [
        915,
        926
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3083": {
      "fn": "Strings.toString",
      "offset": [
        915,
        926
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1147"
    },
    "3086": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        915,
        926
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3087": {
      "fn": "Strings.toString",
      "offset": [
        915,
        926
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3088": {
      "fn": "Strings.toString",
      "offset": [
        915,
        926
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "3089": {
      "fn": "Strings.toString",
      "offset": [
        915,
        926
      ],
      "op": "POP",
      "path": "7"
    },
    "3090": {
      "fn": "Strings.toString",
      "offset": [
        787,
        937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBAF"
    },
    "3093": {
      "fn": "Strings.toString",
      "offset": [
        787,
        937
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3094": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11462,
        12286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3095": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11582,
        11586
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3103": {
      "op": "SHL"
    },
    "3104": {
      "op": "SUB"
    },
    "3105": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11606,
        11619
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3106": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11606,
        11619
      ],
      "op": "AND",
      "path": "0"
    },
    "3107": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "3108": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "ISZERO",
      "path": "5",
      "statement": 45
    },
    "3109": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11602,
        12280
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD0C"
    },
    "3112": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11602,
        12280
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3113": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3115": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3116": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3121": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3123": {
      "op": "SHL"
    },
    "3124": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3125": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3132": {
      "op": "SHL"
    },
    "3133": {
      "op": "SUB"
    },
    "3134": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11677
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3135": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11677
      ],
      "op": "AND",
      "path": "0"
    },
    "3136": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11677
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3137": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11677
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x150B7A02"
    },
    "3142": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11677
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3143": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC5A"
    },
    "3146": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3147": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3148": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3149": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11692,
        11696
      ],
      "op": "DUP10",
      "path": "0"
    },
    "3150": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11692,
        11696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3151": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11698,
        11705
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3152": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11698,
        11705
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3153": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11707,
        11712
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3154": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11707,
        11712
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3155": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3157": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "ADD",
      "path": "0"
    },
    "3158": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1185"
    },
    "3161": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        11641,
        11713
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3162": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3163": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3165": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3167": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3168": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3169": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3170": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "SUB",
      "path": "0"
    },
    "3171": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3172": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3174": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3175": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "GAS",
      "path": "0"
    },
    "3176": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "CALL",
      "path": "0"
    },
    "3177": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3178": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "POP",
      "path": "0"
    },
    "3179": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "POP",
      "path": "0"
    },
    "3180": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "POP",
      "path": "0"
    },
    "3181": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3182": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3183": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC95"
    },
    "3186": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3187": {
      "op": "POP"
    },
    "3188": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3190": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3191": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3192": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3194": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3195": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3196": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3197": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "ADD",
      "path": "0"
    },
    "3198": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3200": {
      "op": "NOT"
    },
    "3201": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "AND",
      "path": "0"
    },
    "3202": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3203": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "ADD",
      "path": "0"
    },
    "3204": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3205": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3206": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3207": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC92"
    },
    "3210": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3211": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3212": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "ADD",
      "path": "0"
    },
    "3213": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3214": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11C2"
    },
    "3217": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        11641,
        11713
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3218": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3219": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3221": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3222": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCF2"
    },
    "3225": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3226": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3227": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3228": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3229": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3230": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC3"
    },
    "3233": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3234": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3236": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3237": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3238": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "POP",
      "path": "0"
    },
    "3239": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3241": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "NOT",
      "path": "0"
    },
    "3242": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3F"
    },
    "3244": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3245": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "ADD",
      "path": "0"
    },
    "3246": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "AND",
      "path": "0"
    },
    "3247": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3248": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "ADD",
      "path": "0"
    },
    "3249": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3251": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3252": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3253": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3254": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3255": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3256": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3258": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3260": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3261": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "ADD",
      "path": "0"
    },
    "3262": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3263": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC8"
    },
    "3266": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3267": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3268": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "3270": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3271": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "POP",
      "path": "0"
    },
    "3272": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3273": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "POP",
      "path": "0"
    },
    "3274": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11884,
        11890
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3275": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11884,
        11897
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3276": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11901,
        11902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3278": {
      "branch": 60,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11884,
        11902
      ],
      "op": "SUB",
      "path": "0"
    },
    "3279": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11880,
        12214
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCEA"
    },
    "3282": {
      "branch": 60,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11880,
        12214
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3283": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 46,
      "value": "0x40"
    },
    "3285": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3286": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3290": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3292": {
      "op": "SHL"
    },
    "3293": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3294": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3295": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3297": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "ADD",
      "path": "0"
    },
    "3298": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "3301": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3302": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10C6"
    },
    "3305": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        11926,
        11986
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3306": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11880,
        12214
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3307": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12166,
        12172
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3308": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12160,
        12173
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3309": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12151,
        12157
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3310": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12147,
        12149
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3312": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12143,
        12158
      ],
      "op": "ADD",
      "path": "0"
    },
    "3313": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12136,
        12174
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3314": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3319": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3321": {
      "op": "SHL"
    },
    "3322": {
      "op": "SUB"
    },
    "3323": {
      "op": "NOT"
    },
    "3324": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11763,
        11818
      ],
      "op": "AND",
      "path": "0",
      "statement": 47
    },
    "3325": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3332": {
      "op": "SHL"
    },
    "3333": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11763,
        11818
      ],
      "op": "EQ",
      "path": "0"
    },
    "3334": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11763,
        11818
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3335": {
      "op": "POP"
    },
    "3336": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11756,
        11818
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x93A"
    },
    "3339": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11756,
        11818
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3340": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11602,
        12280
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3341": {
      "op": "POP"
    },
    "3342": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12265,
        12269
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 48,
      "value": "0x1"
    },
    "3344": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11462,
        12286
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3345": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11462,
        12286
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3346": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11462,
        12286
      ],
      "op": "POP",
      "path": "0"
    },
    "3347": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11462,
        12286
      ],
      "op": "POP",
      "path": "0"
    },
    "3348": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11462,
        12286
      ],
      "op": "POP",
      "path": "0"
    },
    "3349": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11462,
        12286
      ],
      "op": "POP",
      "path": "0"
    },
    "3350": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        11462,
        12286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3351": {
      "op": "JUMPDEST"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3356": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3358": {
      "op": "SHL"
    },
    "3359": {
      "op": "SUB"
    },
    "3360": {
      "op": "NOT"
    },
    "3361": {
      "op": "DUP2"
    },
    "3362": {
      "op": "AND"
    },
    "3363": {
      "op": "DUP2"
    },
    "3364": {
      "op": "EQ"
    },
    "3365": {
      "op": "PUSH2",
      "value": "0xD2D"
    },
    "3368": {
      "op": "JUMPI"
    },
    "3369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3371": {
      "op": "DUP1"
    },
    "3372": {
      "op": "REVERT"
    },
    "3373": {
      "op": "JUMPDEST"
    },
    "3374": {
      "op": "POP"
    },
    "3375": {
      "jump": "o",
      "op": "JUMP"
    },
    "3376": {
      "op": "JUMPDEST"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3381": {
      "op": "DUP3"
    },
    "3382": {
      "op": "DUP5"
    },
    "3383": {
      "op": "SUB"
    },
    "3384": {
      "op": "SLT"
    },
    "3385": {
      "op": "ISZERO"
    },
    "3386": {
      "op": "PUSH2",
      "value": "0xD42"
    },
    "3389": {
      "op": "JUMPI"
    },
    "3390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3392": {
      "op": "DUP1"
    },
    "3393": {
      "op": "REVERT"
    },
    "3394": {
      "op": "JUMPDEST"
    },
    "3395": {
      "op": "DUP2"
    },
    "3396": {
      "op": "CALLDATALOAD"
    },
    "3397": {
      "op": "PUSH2",
      "value": "0x7C8"
    },
    "3400": {
      "op": "DUP2"
    },
    "3401": {
      "op": "PUSH2",
      "value": "0xD17"
    },
    "3404": {
      "jump": "i",
      "op": "JUMP"
    },
    "3405": {
      "op": "JUMPDEST"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3408": {
      "op": "JUMPDEST"
    },
    "3409": {
      "op": "DUP4"
    },
    "3410": {
      "op": "DUP2"
    },
    "3411": {
      "op": "LT"
    },
    "3412": {
      "op": "ISZERO"
    },
    "3413": {
      "op": "PUSH2",
      "value": "0xD68"
    },
    "3416": {
      "op": "JUMPI"
    },
    "3417": {
      "op": "DUP2"
    },
    "3418": {
      "op": "DUP2"
    },
    "3419": {
      "op": "ADD"
    },
    "3420": {
      "op": "MLOAD"
    },
    "3421": {
      "op": "DUP4"
    },
    "3422": {
      "op": "DUP3"
    },
    "3423": {
      "op": "ADD"
    },
    "3424": {
      "op": "MSTORE"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3427": {
      "op": "ADD"
    },
    "3428": {
      "op": "PUSH2",
      "value": "0xD50"
    },
    "3431": {
      "op": "JUMP"
    },
    "3432": {
      "op": "JUMPDEST"
    },
    "3433": {
      "op": "POP"
    },
    "3434": {
      "op": "POP"
    },
    "3435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3437": {
      "op": "SWAP2"
    },
    "3438": {
      "op": "ADD"
    },
    "3439": {
      "op": "MSTORE"
    },
    "3440": {
      "jump": "o",
      "op": "JUMP"
    },
    "3441": {
      "op": "JUMPDEST"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3444": {
      "op": "DUP2"
    },
    "3445": {
      "op": "MLOAD"
    },
    "3446": {
      "op": "DUP1"
    },
    "3447": {
      "op": "DUP5"
    },
    "3448": {
      "op": "MSTORE"
    },
    "3449": {
      "op": "PUSH2",
      "value": "0xD89"
    },
    "3452": {
      "op": "DUP2"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3455": {
      "op": "DUP7"
    },
    "3456": {
      "op": "ADD"
    },
    "3457": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3459": {
      "op": "DUP7"
    },
    "3460": {
      "op": "ADD"
    },
    "3461": {
      "op": "PUSH2",
      "value": "0xD4D"
    },
    "3464": {
      "jump": "i",
      "op": "JUMP"
    },
    "3465": {
      "op": "JUMPDEST"
    },
    "3466": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3468": {
      "op": "ADD"
    },
    "3469": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3471": {
      "op": "NOT"
    },
    "3472": {
      "op": "AND"
    },
    "3473": {
      "op": "SWAP3"
    },
    "3474": {
      "op": "SWAP1"
    },
    "3475": {
      "op": "SWAP3"
    },
    "3476": {
      "op": "ADD"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3479": {
      "op": "ADD"
    },
    "3480": {
      "op": "SWAP3"
    },
    "3481": {
      "op": "SWAP2"
    },
    "3482": {
      "op": "POP"
    },
    "3483": {
      "op": "POP"
    },
    "3484": {
      "jump": "o",
      "op": "JUMP"
    },
    "3485": {
      "op": "JUMPDEST"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3488": {
      "op": "DUP2"
    },
    "3489": {
      "op": "MSTORE"
    },
    "3490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3492": {
      "op": "PUSH2",
      "value": "0x7C8"
    },
    "3495": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3497": {
      "op": "DUP4"
    },
    "3498": {
      "op": "ADD"
    },
    "3499": {
      "op": "DUP5"
    },
    "3500": {
      "op": "PUSH2",
      "value": "0xD71"
    },
    "3503": {
      "jump": "i",
      "op": "JUMP"
    },
    "3504": {
      "op": "JUMPDEST"
    },
    "3505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3509": {
      "op": "DUP3"
    },
    "3510": {
      "op": "DUP5"
    },
    "3511": {
      "op": "SUB"
    },
    "3512": {
      "op": "SLT"
    },
    "3513": {
      "op": "ISZERO"
    },
    "3514": {
      "op": "PUSH2",
      "value": "0xDC2"
    },
    "3517": {
      "op": "JUMPI"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3520": {
      "op": "DUP1"
    },
    "3521": {
      "op": "REVERT"
    },
    "3522": {
      "op": "JUMPDEST"
    },
    "3523": {
      "op": "POP"
    },
    "3524": {
      "op": "CALLDATALOAD"
    },
    "3525": {
      "op": "SWAP2"
    },
    "3526": {
      "op": "SWAP1"
    },
    "3527": {
      "op": "POP"
    },
    "3528": {
      "jump": "o",
      "op": "JUMP"
    },
    "3529": {
      "op": "JUMPDEST"
    },
    "3530": {
      "op": "DUP1"
    },
    "3531": {
      "op": "CALLDATALOAD"
    },
    "3532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3538": {
      "op": "SHL"
    },
    "3539": {
      "op": "SUB"
    },
    "3540": {
      "op": "DUP2"
    },
    "3541": {
      "op": "AND"
    },
    "3542": {
      "op": "DUP2"
    },
    "3543": {
      "op": "EQ"
    },
    "3544": {
      "op": "PUSH2",
      "value": "0xDE0"
    },
    "3547": {
      "op": "JUMPI"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3550": {
      "op": "DUP1"
    },
    "3551": {
      "op": "REVERT"
    },
    "3552": {
      "op": "JUMPDEST"
    },
    "3553": {
      "op": "SWAP2"
    },
    "3554": {
      "op": "SWAP1"
    },
    "3555": {
      "op": "POP"
    },
    "3556": {
      "jump": "o",
      "op": "JUMP"
    },
    "3557": {
      "op": "JUMPDEST"
    },
    "3558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3560": {
      "op": "DUP1"
    },
    "3561": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3563": {
      "op": "DUP4"
    },
    "3564": {
      "op": "DUP6"
    },
    "3565": {
      "op": "SUB"
    },
    "3566": {
      "op": "SLT"
    },
    "3567": {
      "op": "ISZERO"
    },
    "3568": {
      "op": "PUSH2",
      "value": "0xDF8"
    },
    "3571": {
      "op": "JUMPI"
    },
    "3572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3574": {
      "op": "DUP1"
    },
    "3575": {
      "op": "REVERT"
    },
    "3576": {
      "op": "JUMPDEST"
    },
    "3577": {
      "op": "PUSH2",
      "value": "0xE01"
    },
    "3580": {
      "op": "DUP4"
    },
    "3581": {
      "op": "PUSH2",
      "value": "0xDC9"
    },
    "3584": {
      "jump": "i",
      "op": "JUMP"
    },
    "3585": {
      "op": "JUMPDEST"
    },
    "3586": {
      "op": "SWAP5"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3589": {
      "op": "SWAP4"
    },
    "3590": {
      "op": "SWAP1"
    },
    "3591": {
      "op": "SWAP4"
    },
    "3592": {
      "op": "ADD"
    },
    "3593": {
      "op": "CALLDATALOAD"
    },
    "3594": {
      "op": "SWAP4"
    },
    "3595": {
      "op": "POP"
    },
    "3596": {
      "op": "POP"
    },
    "3597": {
      "op": "POP"
    },
    "3598": {
      "jump": "o",
      "op": "JUMP"
    },
    "3599": {
      "op": "JUMPDEST"
    },
    "3600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3602": {
      "op": "DUP1"
    },
    "3603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3605": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3607": {
      "op": "DUP5"
    },
    "3608": {
      "op": "DUP7"
    },
    "3609": {
      "op": "SUB"
    },
    "3610": {
      "op": "SLT"
    },
    "3611": {
      "op": "ISZERO"
    },
    "3612": {
      "op": "PUSH2",
      "value": "0xE24"
    },
    "3615": {
      "op": "JUMPI"
    },
    "3616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3618": {
      "op": "DUP1"
    },
    "3619": {
      "op": "REVERT"
    },
    "3620": {
      "op": "JUMPDEST"
    },
    "3621": {
      "op": "PUSH2",
      "value": "0xE2D"
    },
    "3624": {
      "op": "DUP5"
    },
    "3625": {
      "op": "PUSH2",
      "value": "0xDC9"
    },
    "3628": {
      "jump": "i",
      "op": "JUMP"
    },
    "3629": {
      "op": "JUMPDEST"
    },
    "3630": {
      "op": "SWAP3"
    },
    "3631": {
      "op": "POP"
    },
    "3632": {
      "op": "PUSH2",
      "value": "0xE3B"
    },
    "3635": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3637": {
      "op": "DUP6"
    },
    "3638": {
      "op": "ADD"
    },
    "3639": {
      "op": "PUSH2",
      "value": "0xDC9"
    },
    "3642": {
      "jump": "i",
      "op": "JUMP"
    },
    "3643": {
      "op": "JUMPDEST"
    },
    "3644": {
      "op": "SWAP3"
    },
    "3645": {
      "op": "SWAP6"
    },
    "3646": {
      "op": "SWAP3"
    },
    "3647": {
      "op": "SWAP5"
    },
    "3648": {
      "op": "POP"
    },
    "3649": {
      "op": "POP"
    },
    "3650": {
      "op": "POP"
    },
    "3651": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3653": {
      "op": "SWAP2"
    },
    "3654": {
      "op": "SWAP1"
    },
    "3655": {
      "op": "SWAP2"
    },
    "3656": {
      "op": "ADD"
    },
    "3657": {
      "op": "CALLDATALOAD"
    },
    "3658": {
      "op": "SWAP1"
    },
    "3659": {
      "jump": "o",
      "op": "JUMP"
    },
    "3660": {
      "op": "JUMPDEST"
    },
    "3661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3665": {
      "op": "DUP3"
    },
    "3666": {
      "op": "DUP5"
    },
    "3667": {
      "op": "SUB"
    },
    "3668": {
      "op": "SLT"
    },
    "3669": {
      "op": "ISZERO"
    },
    "3670": {
      "op": "PUSH2",
      "value": "0xE5E"
    },
    "3673": {
      "op": "JUMPI"
    },
    "3674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3676": {
      "op": "DUP1"
    },
    "3677": {
      "op": "REVERT"
    },
    "3678": {
      "op": "JUMPDEST"
    },
    "3679": {
      "op": "PUSH2",
      "value": "0x7C8"
    },
    "3682": {
      "op": "DUP3"
    },
    "3683": {
      "op": "PUSH2",
      "value": "0xDC9"
    },
    "3686": {
      "jump": "i",
      "op": "JUMP"
    },
    "3687": {
      "op": "JUMPDEST"
    },
    "3688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3690": {
      "op": "DUP1"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3693": {
      "op": "DUP4"
    },
    "3694": {
      "op": "DUP6"
    },
    "3695": {
      "op": "SUB"
    },
    "3696": {
      "op": "SLT"
    },
    "3697": {
      "op": "ISZERO"
    },
    "3698": {
      "op": "PUSH2",
      "value": "0xE7A"
    },
    "3701": {
      "op": "JUMPI"
    },
    "3702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3704": {
      "op": "DUP1"
    },
    "3705": {
      "op": "REVERT"
    },
    "3706": {
      "op": "JUMPDEST"
    },
    "3707": {
      "op": "PUSH2",
      "value": "0xE83"
    },
    "3710": {
      "op": "DUP4"
    },
    "3711": {
      "op": "PUSH2",
      "value": "0xDC9"
    },
    "3714": {
      "jump": "i",
      "op": "JUMP"
    },
    "3715": {
      "op": "JUMPDEST"
    },
    "3716": {
      "op": "SWAP2"
    },
    "3717": {
      "op": "POP"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3720": {
      "op": "DUP4"
    },
    "3721": {
      "op": "ADD"
    },
    "3722": {
      "op": "CALLDATALOAD"
    },
    "3723": {
      "op": "DUP1"
    },
    "3724": {
      "op": "ISZERO"
    },
    "3725": {
      "op": "ISZERO"
    },
    "3726": {
      "op": "DUP2"
    },
    "3727": {
      "op": "EQ"
    },
    "3728": {
      "op": "PUSH2",
      "value": "0xE98"
    },
    "3731": {
      "op": "JUMPI"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3734": {
      "op": "DUP1"
    },
    "3735": {
      "op": "REVERT"
    },
    "3736": {
      "op": "JUMPDEST"
    },
    "3737": {
      "op": "DUP1"
    },
    "3738": {
      "op": "SWAP2"
    },
    "3739": {
      "op": "POP"
    },
    "3740": {
      "op": "POP"
    },
    "3741": {
      "op": "SWAP3"
    },
    "3742": {
      "op": "POP"
    },
    "3743": {
      "op": "SWAP3"
    },
    "3744": {
      "op": "SWAP1"
    },
    "3745": {
      "op": "POP"
    },
    "3746": {
      "jump": "o",
      "op": "JUMP"
    },
    "3747": {
      "op": "JUMPDEST"
    },
    "3748": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3753": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3755": {
      "op": "SHL"
    },
    "3756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3758": {
      "op": "MSTORE"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3763": {
      "op": "MSTORE"
    },
    "3764": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3768": {
      "op": "REVERT"
    },
    "3769": {
      "op": "JUMPDEST"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3772": {
      "op": "DUP1"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3775": {
      "op": "DUP1"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3778": {
      "op": "DUP6"
    },
    "3779": {
      "op": "DUP8"
    },
    "3780": {
      "op": "SUB"
    },
    "3781": {
      "op": "SLT"
    },
    "3782": {
      "op": "ISZERO"
    },
    "3783": {
      "op": "PUSH2",
      "value": "0xECF"
    },
    "3786": {
      "op": "JUMPI"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3789": {
      "op": "DUP1"
    },
    "3790": {
      "op": "REVERT"
    },
    "3791": {
      "op": "JUMPDEST"
    },
    "3792": {
      "op": "PUSH2",
      "value": "0xED8"
    },
    "3795": {
      "op": "DUP6"
    },
    "3796": {
      "op": "PUSH2",
      "value": "0xDC9"
    },
    "3799": {
      "jump": "i",
      "op": "JUMP"
    },
    "3800": {
      "op": "JUMPDEST"
    },
    "3801": {
      "op": "SWAP4"
    },
    "3802": {
      "op": "POP"
    },
    "3803": {
      "op": "PUSH2",
      "value": "0xEE6"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3808": {
      "op": "DUP7"
    },
    "3809": {
      "op": "ADD"
    },
    "3810": {
      "op": "PUSH2",
      "value": "0xDC9"
    },
    "3813": {
      "jump": "i",
      "op": "JUMP"
    },
    "3814": {
      "op": "JUMPDEST"
    },
    "3815": {
      "op": "SWAP3"
    },
    "3816": {
      "op": "POP"
    },
    "3817": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3819": {
      "op": "DUP6"
    },
    "3820": {
      "op": "ADD"
    },
    "3821": {
      "op": "CALLDATALOAD"
    },
    "3822": {
      "op": "SWAP2"
    },
    "3823": {
      "op": "POP"
    },
    "3824": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3826": {
      "op": "DUP6"
    },
    "3827": {
      "op": "ADD"
    },
    "3828": {
      "op": "CALLDATALOAD"
    },
    "3829": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3838": {
      "op": "DUP2"
    },
    "3839": {
      "op": "GT"
    },
    "3840": {
      "op": "ISZERO"
    },
    "3841": {
      "op": "PUSH2",
      "value": "0xF09"
    },
    "3844": {
      "op": "JUMPI"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3847": {
      "op": "DUP1"
    },
    "3848": {
      "op": "REVERT"
    },
    "3849": {
      "op": "JUMPDEST"
    },
    "3850": {
      "op": "DUP6"
    },
    "3851": {
      "op": "ADD"
    },
    "3852": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3854": {
      "op": "DUP2"
    },
    "3855": {
      "op": "ADD"
    },
    "3856": {
      "op": "DUP8"
    },
    "3857": {
      "op": "SGT"
    },
    "3858": {
      "op": "PUSH2",
      "value": "0xF1A"
    },
    "3861": {
      "op": "JUMPI"
    },
    "3862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3864": {
      "op": "DUP1"
    },
    "3865": {
      "op": "REVERT"
    },
    "3866": {
      "op": "JUMPDEST"
    },
    "3867": {
      "op": "DUP1"
    },
    "3868": {
      "op": "CALLDATALOAD"
    },
    "3869": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3878": {
      "op": "DUP2"
    },
    "3879": {
      "op": "GT"
    },
    "3880": {
      "op": "ISZERO"
    },
    "3881": {
      "op": "PUSH2",
      "value": "0xF34"
    },
    "3884": {
      "op": "JUMPI"
    },
    "3885": {
      "op": "PUSH2",
      "value": "0xF34"
    },
    "3888": {
      "op": "PUSH2",
      "value": "0xEA3"
    },
    "3891": {
      "jump": "i",
      "op": "JUMP"
    },
    "3892": {
      "op": "JUMPDEST"
    },
    "3893": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3895": {
      "op": "MLOAD"
    },
    "3896": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3898": {
      "op": "DUP3"
    },
    "3899": {
      "op": "ADD"
    },
    "3900": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3902": {
      "op": "NOT"
    },
    "3903": {
      "op": "SWAP1"
    },
    "3904": {
      "op": "DUP2"
    },
    "3905": {
      "op": "AND"
    },
    "3906": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3908": {
      "op": "ADD"
    },
    "3909": {
      "op": "AND"
    },
    "3910": {
      "op": "DUP2"
    },
    "3911": {
      "op": "ADD"
    },
    "3912": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3921": {
      "op": "DUP2"
    },
    "3922": {
      "op": "GT"
    },
    "3923": {
      "op": "DUP3"
    },
    "3924": {
      "op": "DUP3"
    },
    "3925": {
      "op": "LT"
    },
    "3926": {
      "op": "OR"
    },
    "3927": {
      "op": "ISZERO"
    },
    "3928": {
      "op": "PUSH2",
      "value": "0xF63"
    },
    "3931": {
      "op": "JUMPI"
    },
    "3932": {
      "op": "PUSH2",
      "value": "0xF63"
    },
    "3935": {
      "op": "PUSH2",
      "value": "0xEA3"
    },
    "3938": {
      "jump": "i",
      "op": "JUMP"
    },
    "3939": {
      "op": "JUMPDEST"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3942": {
      "op": "MSTORE"
    },
    "3943": {
      "op": "DUP2"
    },
    "3944": {
      "op": "DUP2"
    },
    "3945": {
      "op": "MSTORE"
    },
    "3946": {
      "op": "DUP3"
    },
    "3947": {
      "op": "DUP3"
    },
    "3948": {
      "op": "ADD"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3951": {
      "op": "ADD"
    },
    "3952": {
      "op": "DUP10"
    },
    "3953": {
      "op": "LT"
    },
    "3954": {
      "op": "ISZERO"
    },
    "3955": {
      "op": "PUSH2",
      "value": "0xF7B"
    },
    "3958": {
      "op": "JUMPI"
    },
    "3959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3961": {
      "op": "DUP1"
    },
    "3962": {
      "op": "REVERT"
    },
    "3963": {
      "op": "JUMPDEST"
    },
    "3964": {
      "op": "DUP2"
    },
    "3965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3967": {
      "op": "DUP5"
    },
    "3968": {
      "op": "ADD"
    },
    "3969": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3971": {
      "op": "DUP4"
    },
    "3972": {
      "op": "ADD"
    },
    "3973": {
      "op": "CALLDATACOPY"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3976": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3978": {
      "op": "DUP4"
    },
    "3979": {
      "op": "DUP4"
    },
    "3980": {
      "op": "ADD"
    },
    "3981": {
      "op": "ADD"
    },
    "3982": {
      "op": "MSTORE"
    },
    "3983": {
      "op": "DUP1"
    },
    "3984": {
      "op": "SWAP4"
    },
    "3985": {
      "op": "POP"
    },
    "3986": {
      "op": "POP"
    },
    "3987": {
      "op": "POP"
    },
    "3988": {
      "op": "POP"
    },
    "3989": {
      "op": "SWAP3"
    },
    "3990": {
      "op": "SWAP6"
    },
    "3991": {
      "op": "SWAP2"
    },
    "3992": {
      "op": "SWAP5"
    },
    "3993": {
      "op": "POP"
    },
    "3994": {
      "op": "SWAP3"
    },
    "3995": {
      "op": "POP"
    },
    "3996": {
      "jump": "o",
      "op": "JUMP"
    },
    "3997": {
      "op": "JUMPDEST"
    },
    "3998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4000": {
      "op": "DUP1"
    },
    "4001": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4003": {
      "op": "DUP4"
    },
    "4004": {
      "op": "DUP6"
    },
    "4005": {
      "op": "SUB"
    },
    "4006": {
      "op": "SLT"
    },
    "4007": {
      "op": "ISZERO"
    },
    "4008": {
      "op": "PUSH2",
      "value": "0xFB0"
    },
    "4011": {
      "op": "JUMPI"
    },
    "4012": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4014": {
      "op": "DUP1"
    },
    "4015": {
      "op": "REVERT"
    },
    "4016": {
      "op": "JUMPDEST"
    },
    "4017": {
      "op": "PUSH2",
      "value": "0xFB9"
    },
    "4020": {
      "op": "DUP4"
    },
    "4021": {
      "op": "PUSH2",
      "value": "0xDC9"
    },
    "4024": {
      "jump": "i",
      "op": "JUMP"
    },
    "4025": {
      "op": "JUMPDEST"
    },
    "4026": {
      "op": "SWAP2"
    },
    "4027": {
      "op": "POP"
    },
    "4028": {
      "op": "PUSH2",
      "value": "0xFC7"
    },
    "4031": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4033": {
      "op": "DUP5"
    },
    "4034": {
      "op": "ADD"
    },
    "4035": {
      "op": "PUSH2",
      "value": "0xDC9"
    },
    "4038": {
      "jump": "i",
      "op": "JUMP"
    },
    "4039": {
      "op": "JUMPDEST"
    },
    "4040": {
      "op": "SWAP1"
    },
    "4041": {
      "op": "POP"
    },
    "4042": {
      "op": "SWAP3"
    },
    "4043": {
      "op": "POP"
    },
    "4044": {
      "op": "SWAP3"
    },
    "4045": {
      "op": "SWAP1"
    },
    "4046": {
      "op": "POP"
    },
    "4047": {
      "jump": "o",
      "op": "JUMP"
    },
    "4048": {
      "op": "JUMPDEST"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4051": {
      "op": "DUP2"
    },
    "4052": {
      "op": "DUP2"
    },
    "4053": {
      "op": "SHR"
    },
    "4054": {
      "op": "SWAP1"
    },
    "4055": {
      "op": "DUP3"
    },
    "4056": {
      "op": "AND"
    },
    "4057": {
      "op": "DUP1"
    },
    "4058": {
      "op": "PUSH2",
      "value": "0xFE4"
    },
    "4061": {
      "op": "JUMPI"
    },
    "4062": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4064": {
      "op": "DUP3"
    },
    "4065": {
      "op": "AND"
    },
    "4066": {
      "op": "SWAP2"
    },
    "4067": {
      "op": "POP"
    },
    "4068": {
      "op": "JUMPDEST"
    },
    "4069": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4071": {
      "op": "DUP3"
    },
    "4072": {
      "op": "LT"
    },
    "4073": {
      "op": "DUP2"
    },
    "4074": {
      "op": "SUB"
    },
    "4075": {
      "op": "PUSH2",
      "value": "0x1004"
    },
    "4078": {
      "op": "JUMPI"
    },
    "4079": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4084": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4086": {
      "op": "SHL"
    },
    "4087": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4089": {
      "op": "MSTORE"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4092": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4094": {
      "op": "MSTORE"
    },
    "4095": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4099": {
      "op": "REVERT"
    },
    "4100": {
      "op": "JUMPDEST"
    },
    "4101": {
      "op": "POP"
    },
    "4102": {
      "op": "SWAP2"
    },
    "4103": {
      "op": "SWAP1"
    },
    "4104": {
      "op": "POP"
    },
    "4105": {
      "jump": "o",
      "op": "JUMP"
    },
    "4106": {
      "op": "JUMPDEST"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4109": {
      "op": "DUP1"
    },
    "4110": {
      "op": "DUP3"
    },
    "4111": {
      "op": "MSTORE"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "4114": {
      "op": "SWAP1"
    },
    "4115": {
      "op": "DUP3"
    },
    "4116": {
      "op": "ADD"
    },
    "4117": {
      "op": "MSTORE"
    },
    "4118": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "4151": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4153": {
      "op": "DUP3"
    },
    "4154": {
      "op": "ADD"
    },
    "4155": {
      "op": "MSTORE"
    },
    "4156": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4176": {
      "op": "SHL"
    },
    "4177": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4179": {
      "op": "DUP3"
    },
    "4180": {
      "op": "ADD"
    },
    "4181": {
      "op": "MSTORE"
    },
    "4182": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4184": {
      "op": "ADD"
    },
    "4185": {
      "op": "SWAP1"
    },
    "4186": {
      "jump": "o",
      "op": "JUMP"
    },
    "4187": {
      "op": "JUMPDEST"
    },
    "4188": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4190": {
      "op": "DUP4"
    },
    "4191": {
      "op": "MLOAD"
    },
    "4192": {
      "op": "PUSH2",
      "value": "0x106D"
    },
    "4195": {
      "op": "DUP2"
    },
    "4196": {
      "op": "DUP5"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4199": {
      "op": "DUP9"
    },
    "4200": {
      "op": "ADD"
    },
    "4201": {
      "op": "PUSH2",
      "value": "0xD4D"
    },
    "4204": {
      "jump": "i",
      "op": "JUMP"
    },
    "4205": {
      "op": "JUMPDEST"
    },
    "4206": {
      "op": "DUP4"
    },
    "4207": {
      "op": "MLOAD"
    },
    "4208": {
      "op": "SWAP1"
    },
    "4209": {
      "op": "DUP4"
    },
    "4210": {
      "op": "ADD"
    },
    "4211": {
      "op": "SWAP1"
    },
    "4212": {
      "op": "PUSH2",
      "value": "0x1081"
    },
    "4215": {
      "op": "DUP2"
    },
    "4216": {
      "op": "DUP4"
    },
    "4217": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4219": {
      "op": "DUP9"
    },
    "4220": {
      "op": "ADD"
    },
    "4221": {
      "op": "PUSH2",
      "value": "0xD4D"
    },
    "4224": {
      "jump": "i",
      "op": "JUMP"
    },
    "4225": {
      "op": "JUMPDEST"
    },
    "4226": {
      "op": "ADD"
    },
    "4227": {
      "op": "SWAP5"
    },
    "4228": {
      "op": "SWAP4"
    },
    "4229": {
      "op": "POP"
    },
    "4230": {
      "op": "POP"
    },
    "4231": {
      "op": "POP"
    },
    "4232": {
      "op": "POP"
    },
    "4233": {
      "jump": "o",
      "op": "JUMP"
    },
    "4234": {
      "op": "JUMPDEST"
    },
    "4235": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4240": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4242": {
      "op": "SHL"
    },
    "4243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4245": {
      "op": "MSTORE"
    },
    "4246": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4248": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4250": {
      "op": "MSTORE"
    },
    "4251": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4255": {
      "op": "REVERT"
    },
    "4256": {
      "op": "JUMPDEST"
    },
    "4257": {
      "op": "DUP2"
    },
    "4258": {
      "op": "DUP2"
    },
    "4259": {
      "op": "SUB"
    },
    "4260": {
      "op": "DUP2"
    },
    "4261": {
      "op": "DUP2"
    },
    "4262": {
      "op": "GT"
    },
    "4263": {
      "op": "ISZERO"
    },
    "4264": {
      "op": "PUSH2",
      "value": "0x24B"
    },
    "4267": {
      "op": "JUMPI"
    },
    "4268": {
      "op": "PUSH2",
      "value": "0x24B"
    },
    "4271": {
      "op": "PUSH2",
      "value": "0x108A"
    },
    "4274": {
      "jump": "i",
      "op": "JUMP"
    },
    "4275": {
      "op": "JUMPDEST"
    },
    "4276": {
      "op": "DUP1"
    },
    "4277": {
      "op": "DUP3"
    },
    "4278": {
      "op": "ADD"
    },
    "4279": {
      "op": "DUP1"
    },
    "4280": {
      "op": "DUP3"
    },
    "4281": {
      "op": "GT"
    },
    "4282": {
      "op": "ISZERO"
    },
    "4283": {
      "op": "PUSH2",
      "value": "0x24B"
    },
    "4286": {
      "op": "JUMPI"
    },
    "4287": {
      "op": "PUSH2",
      "value": "0x24B"
    },
    "4290": {
      "op": "PUSH2",
      "value": "0x108A"
    },
    "4293": {
      "jump": "i",
      "op": "JUMP"
    },
    "4294": {
      "op": "JUMPDEST"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4297": {
      "op": "DUP1"
    },
    "4298": {
      "op": "DUP3"
    },
    "4299": {
      "op": "MSTORE"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4302": {
      "op": "SWAP1"
    },
    "4303": {
      "op": "DUP3"
    },
    "4304": {
      "op": "ADD"
    },
    "4305": {
      "op": "MSTORE"
    },
    "4306": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4341": {
      "op": "DUP3"
    },
    "4342": {
      "op": "ADD"
    },
    "4343": {
      "op": "MSTORE"
    },
    "4344": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "4363": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "4365": {
      "op": "SHL"
    },
    "4366": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4368": {
      "op": "DUP3"
    },
    "4369": {
      "op": "ADD"
    },
    "4370": {
      "op": "MSTORE"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4373": {
      "op": "ADD"
    },
    "4374": {
      "op": "SWAP1"
    },
    "4375": {
      "jump": "o",
      "op": "JUMP"
    },
    "4376": {
      "op": "JUMPDEST"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4381": {
      "op": "DUP3"
    },
    "4382": {
      "op": "ADD"
    },
    "4383": {
      "op": "PUSH2",
      "value": "0x112A"
    },
    "4386": {
      "op": "JUMPI"
    },
    "4387": {
      "op": "PUSH2",
      "value": "0x112A"
    },
    "4390": {
      "op": "PUSH2",
      "value": "0x108A"
    },
    "4393": {
      "jump": "i",
      "op": "JUMP"
    },
    "4394": {
      "op": "JUMPDEST"
    },
    "4395": {
      "op": "POP"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4398": {
      "op": "ADD"
    },
    "4399": {
      "op": "SWAP1"
    },
    "4400": {
      "jump": "o",
      "op": "JUMP"
    },
    "4401": {
      "op": "JUMPDEST"
    },
    "4402": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4407": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4409": {
      "op": "SHL"
    },
    "4410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4412": {
      "op": "MSTORE"
    },
    "4413": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4415": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4417": {
      "op": "MSTORE"
    },
    "4418": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4422": {
      "op": "REVERT"
    },
    "4423": {
      "op": "JUMPDEST"
    },
    "4424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4426": {
      "op": "DUP3"
    },
    "4427": {
      "op": "PUSH2",
      "value": "0x1156"
    },
    "4430": {
      "op": "JUMPI"
    },
    "4431": {
      "op": "PUSH2",
      "value": "0x1156"
    },
    "4434": {
      "op": "PUSH2",
      "value": "0x1131"
    },
    "4437": {
      "jump": "i",
      "op": "JUMP"
    },
    "4438": {
      "op": "JUMPDEST"
    },
    "4439": {
      "op": "POP"
    },
    "4440": {
      "op": "DIV"
    },
    "4441": {
      "op": "SWAP1"
    },
    "4442": {
      "jump": "o",
      "op": "JUMP"
    },
    "4443": {
      "op": "JUMPDEST"
    },
    "4444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4446": {
      "op": "DUP3"
    },
    "4447": {
      "op": "PUSH2",
      "value": "0x116A"
    },
    "4450": {
      "op": "JUMPI"
    },
    "4451": {
      "op": "PUSH2",
      "value": "0x116A"
    },
    "4454": {
      "op": "PUSH2",
      "value": "0x1131"
    },
    "4457": {
      "jump": "i",
      "op": "JUMP"
    },
    "4458": {
      "op": "JUMPDEST"
    },
    "4459": {
      "op": "POP"
    },
    "4460": {
      "op": "MOD"
    },
    "4461": {
      "op": "SWAP1"
    },
    "4462": {
      "jump": "o",
      "op": "JUMP"
    },
    "4463": {
      "op": "JUMPDEST"
    },
    "4464": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4469": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4471": {
      "op": "SHL"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4474": {
      "op": "MSTORE"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4479": {
      "op": "MSTORE"
    },
    "4480": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4484": {
      "op": "REVERT"
    },
    "4485": {
      "op": "JUMPDEST"
    },
    "4486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4490": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4492": {
      "op": "SHL"
    },
    "4493": {
      "op": "SUB"
    },
    "4494": {
      "op": "DUP6"
    },
    "4495": {
      "op": "DUP2"
    },
    "4496": {
      "op": "AND"
    },
    "4497": {
      "op": "DUP3"
    },
    "4498": {
      "op": "MSTORE"
    },
    "4499": {
      "op": "DUP5"
    },
    "4500": {
      "op": "AND"
    },
    "4501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4503": {
      "op": "DUP3"
    },
    "4504": {
      "op": "ADD"
    },
    "4505": {
      "op": "MSTORE"
    },
    "4506": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4508": {
      "op": "DUP2"
    },
    "4509": {
      "op": "ADD"
    },
    "4510": {
      "op": "DUP4"
    },
    "4511": {
      "op": "SWAP1"
    },
    "4512": {
      "op": "MSTORE"
    },
    "4513": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4515": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4517": {
      "op": "DUP3"
    },
    "4518": {
      "op": "ADD"
    },
    "4519": {
      "op": "DUP2"
    },
    "4520": {
      "op": "SWAP1"
    },
    "4521": {
      "op": "MSTORE"
    },
    "4522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4524": {
      "op": "SWAP1"
    },
    "4525": {
      "op": "PUSH2",
      "value": "0x11B8"
    },
    "4528": {
      "op": "SWAP1"
    },
    "4529": {
      "op": "DUP4"
    },
    "4530": {
      "op": "ADD"
    },
    "4531": {
      "op": "DUP5"
    },
    "4532": {
      "op": "PUSH2",
      "value": "0xD71"
    },
    "4535": {
      "jump": "i",
      "op": "JUMP"
    },
    "4536": {
      "op": "JUMPDEST"
    },
    "4537": {
      "op": "SWAP7"
    },
    "4538": {
      "op": "SWAP6"
    },
    "4539": {
      "op": "POP"
    },
    "4540": {
      "op": "POP"
    },
    "4541": {
      "op": "POP"
    },
    "4542": {
      "op": "POP"
    },
    "4543": {
      "op": "POP"
    },
    "4544": {
      "op": "POP"
    },
    "4545": {
      "jump": "o",
      "op": "JUMP"
    },
    "4546": {
      "op": "JUMPDEST"
    },
    "4547": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4551": {
      "op": "DUP3"
    },
    "4552": {
      "op": "DUP5"
    },
    "4553": {
      "op": "SUB"
    },
    "4554": {
      "op": "SLT"
    },
    "4555": {
      "op": "ISZERO"
    },
    "4556": {
      "op": "PUSH2",
      "value": "0x11D4"
    },
    "4559": {
      "op": "JUMPI"
    },
    "4560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4562": {
      "op": "DUP1"
    },
    "4563": {
      "op": "REVERT"
    },
    "4564": {
      "op": "JUMPDEST"
    },
    "4565": {
      "op": "DUP2"
    },
    "4566": {
      "op": "MLOAD"
    },
    "4567": {
      "op": "PUSH2",
      "value": "0x7C8"
    },
    "4570": {
      "op": "DUP2"
    },
    "4571": {
      "op": "PUSH2",
      "value": "0xD17"
    },
    "4574": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "2ef99f377a60dab94be744350d80223746d48b2e",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping (uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping (address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping (uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping (address => mapping (address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor (string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC721).interfaceId\n            || interfaceId == type(IERC721Metadata).interfaceId\n            || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0\n            ? string(abi.encodePacked(baseURI, tokenId.toString()))\n            : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. Empty by default, can be overriden\n     * in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(_msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        require(operator != _msgSender(), \"ERC721: approve to caller\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory _data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory _data) internal virtual {\n        _mint(to, tokenId);\n        require(_checkOnERC721Received(address(0), to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)\n        private returns (bool)\n    {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver(to).onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    // solhint-disable-next-line no-inline-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual { }\n}\n",
  "sourceMap": "554:12423:0:-:0;;;1321:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1388:5;:13;1396:5;1388;:13;:::i;:::-;-1:-1:-1;1411:7:0;:17;1421:7;1411;:17;:::i;:::-;;1321:114;;554:12423;;14:127:13;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:834;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:13;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:13;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:13;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:13;;;725:1;722;715:12;670:59;747:1;757:143;771:6;768:1;765:13;757:143;;;883:4;867:14;;;863:25;;857:32;834:14;;;830:25;;823:67;786:12;757:143;;;-1:-1:-1;948:1:13;920:19;;;941:4;916:30;909:41;;;;924:6;146:834;-1:-1:-1;;;146:834:13:o;985:557::-;1084:6;1092;1145:2;1133:9;1124:7;1120:23;1116:32;1113:52;;;1161:1;1158;1151:12;1113:52;1188:16;;-1:-1:-1;;;;;1216:30:13;;1213:50;;;1259:1;1256;1249:12;1213:50;1282:61;1335:7;1326:6;1315:9;1311:22;1282:61;:::i;:::-;1389:2;1374:18;;1368:25;1272:71;;-1:-1:-1;1368:25:13;-1:-1:-1;;;;;;1405:32:13;;1402:52;;;1450:1;1447;1440:12;1402:52;1473:63;1528:7;1517:8;1506:9;1502:24;1473:63;:::i;:::-;1463:73;;;985:557;;;;;:::o;1547:380::-;1626:1;1622:12;;;;1669;;;1690:61;;1744:4;1736:6;1732:17;1722:27;;1690:61;1797:2;1789:6;1786:14;1766:18;1763:38;1760:161;;1843:10;1838:3;1834:20;1831:1;1824:31;1878:4;1875:1;1868:15;1906:4;1903:1;1896:15;1760:161;;1547:380;;;:::o;2058:518::-;2160:2;2155:3;2152:11;2149:421;;;2196:5;2193:1;2186:16;2240:4;2237:1;2227:18;2310:2;2298:10;2294:19;2291:1;2287:27;2281:4;2277:38;2346:4;2334:10;2331:20;2328:47;;;-1:-1:-1;2369:4:13;2328:47;2424:2;2419:3;2415:12;2412:1;2408:20;2402:4;2398:31;2388:41;;2479:81;2497:2;2490:5;2487:13;2479:81;;;2556:1;2542:16;;2523:1;2512:13;2479:81;;;2483:3;;2149:421;2058:518;;;:::o;2752:1299::-;2872:10;;-1:-1:-1;;;;;2894:30:13;;2891:56;;;2927:18;;:::i;:::-;2956:97;3046:6;3006:38;3038:4;3032:11;3006:38;:::i;:::-;3000:4;2956:97;:::i;:::-;3102:4;3133:2;3122:14;;3150:1;3145:649;;;;3838:1;3855:6;3852:89;;;-1:-1:-1;3907:19:13;;;3901:26;3852:89;-1:-1:-1;;2709:1:13;2705:11;;;2701:24;2697:29;2687:40;2733:1;2729:11;;;2684:57;3954:81;;3115:930;;3145:649;2005:1;1998:14;;;2042:4;2029:18;;-1:-1:-1;;3181:20:13;;;3299:222;3313:7;3310:1;3307:14;3299:222;;;3395:19;;;3389:26;3374:42;;3502:4;3487:20;;;;3455:1;3443:14;;;;3329:12;3299:222;;;3303:3;3549:6;3540:7;3537:19;3534:201;;;3610:19;;;3604:26;-1:-1:-1;;3693:1:13;3689:14;;;3705:3;3685:24;3681:37;3677:42;3662:58;3647:74;;3534:201;-1:-1:-1;;;;3781:1:13;3765:14;;;3761:22;3748:36;;-1:-1:-1;2752:1299:13:o;:::-;554:12423:0;;;;;;",
  "sourcePath": "C:/Users/ashut/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/ERC721.sol",
  "type": "contract"
}